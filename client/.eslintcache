[{"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\index.js":"1","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\App.js":"2","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\MainApp.js":"3","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\AppNavbar.js":"4","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\Home.js":"5","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\routes.js":"6","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\views\\Dashboard.js":"7","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\StatsCard\\StatsCard.js":"8","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Tasks\\Tasks.js":"9","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\store.js":"10","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Shoppinglist.js":"11","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\itemModal.js":"12","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Test.js":"13","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Bodycopy.js":"14","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Test1.js":"15","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\Logout.js":"16","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\LoginModal.js":"17","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\RegisterModal.js":"18","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Body.js":"19","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\action\\authActions.js":"20","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\action\\itemAction.js":"21","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Navbars\\AdminNavbar.js":"22","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Variables\\Variables.js":"23","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Home\\Home1.js":"24","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Footer\\Footer.jsx":"25","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Sidebar\\Sidebar.jsx":"26","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Card\\Card.js":"27","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\CustomCheckbox\\CustomCheckbox.js":"28","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\CustomButton\\CustomButton.js":"29","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\views\\UserProfile.js":"30","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\AnimatedProgressProvider.js":"31","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\EditModal.js":"32","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\E2.js":"33","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\EditModal1.js":"34","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\Body2.js":"35","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Pagination.js":"36","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\reducer\\index.js":"37","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\action\\errorActions.js":"38","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\ProductsList\\ProductList.js":"39","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Navbars\\AdminNavbarLinks.js":"40","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\ProductsList\\TrendingProductList.js":"41","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\action\\types.js":"42","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\CustomButton\\CustomButton.jsx":"43","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\FormInputs\\FormInputs.jsx":"44","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\UserCard\\UserCard.jsx":"45","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\reducer\\authReducer.js":"46","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\ProductsList\\ProductListData.js":"47","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\reducer\\errorReducer.js":"48","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\reducer\\itemReducer.js":"49","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Home\\ApexChart.js":"50","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Slider\\Price_Slider.js":"51","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\RegisterModal1.js":"52","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\ProductsList\\Product.js":"53","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\ProductsList\\NewProductModal.js":"54","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\reducer\\categoryReducer.js":"55","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\action\\categoryAction.js":"56","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Products\\Products.js":"57","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\Map.js":"58"},{"size":599,"mtime":1610561980977,"results":"59","hashOfConfig":"60"},{"size":3667,"mtime":1612026640412,"results":"61","hashOfConfig":"60"},{"size":1371,"mtime":1612062873055,"results":"62","hashOfConfig":"60"},{"size":6209,"mtime":1612084167532,"results":"63","hashOfConfig":"60"},{"size":4753,"mtime":1612100730357,"results":"64","hashOfConfig":"60"},{"size":2381,"mtime":1612062858103,"results":"65","hashOfConfig":"60"},{"size":5276,"mtime":1611164053879,"results":"66","hashOfConfig":"60"},{"size":914,"mtime":1610108711822,"results":"67","hashOfConfig":"60"},{"size":2047,"mtime":1610109500537,"results":"68","hashOfConfig":"60"},{"size":472,"mtime":1610367990996,"results":"69","hashOfConfig":"60"},{"size":1843,"mtime":1599581039867,"results":"70","hashOfConfig":"60"},{"size":2165,"mtime":1599579917031,"results":"71","hashOfConfig":"60"},{"size":11927,"mtime":1611985814306,"results":"72","hashOfConfig":"60"},{"size":2456,"mtime":1611805325404,"results":"73","hashOfConfig":"60"},{"size":32439,"mtime":1610119530374,"results":"74","hashOfConfig":"60"},{"size":988,"mtime":1611240719097,"results":"75","hashOfConfig":"60"},{"size":4950,"mtime":1611298700114,"results":"76","hashOfConfig":"60"},{"size":14192,"mtime":1611990238186,"results":"77","hashOfConfig":"60"},{"size":580,"mtime":1600141165890,"results":"78","hashOfConfig":"60"},{"size":3972,"mtime":1612091538722,"results":"79","hashOfConfig":"60"},{"size":3032,"mtime":1611976449375,"results":"80","hashOfConfig":"60"},{"size":5433,"mtime":1612097759425,"results":"81","hashOfConfig":"60"},{"size":12260,"mtime":1610109863217,"results":"82","hashOfConfig":"60"},{"size":3146,"mtime":1611997369866,"results":"83","hashOfConfig":"60"},{"size":1618,"mtime":1610178538861,"results":"84","hashOfConfig":"60"},{"size":2467,"mtime":1611978863437,"results":"85","hashOfConfig":"60"},{"size":1131,"mtime":1610108637953,"results":"86","hashOfConfig":"60"},{"size":868,"mtime":1610108831192,"results":"87","hashOfConfig":"60"},{"size":730,"mtime":1610108877242,"results":"88","hashOfConfig":"60"},{"size":14747,"mtime":1612098390375,"results":"89","hashOfConfig":"60"},{"size":1217,"mtime":1610043989534,"results":"90","hashOfConfig":"60"},{"size":4604,"mtime":1609947447978,"results":"91","hashOfConfig":"60"},{"size":8853,"mtime":1610509745898,"results":"92","hashOfConfig":"60"},{"size":7256,"mtime":1612102160492,"results":"93","hashOfConfig":"60"},{"size":11194,"mtime":1610617015421,"results":"94","hashOfConfig":"60"},{"size":4579,"mtime":1610532561331,"results":"95","hashOfConfig":"60"},{"size":358,"mtime":1611407761520,"results":"96","hashOfConfig":"60"},{"size":301,"mtime":1599811215698,"results":"97","hashOfConfig":"60"},{"size":2685,"mtime":1612095849071,"results":"98","hashOfConfig":"60"},{"size":2040,"mtime":1612098551304,"results":"99","hashOfConfig":"60"},{"size":5940,"mtime":1612062814219,"results":"100","hashOfConfig":"60"},{"size":1168,"mtime":1612068527245,"results":"101","hashOfConfig":"60"},{"size":1346,"mtime":1607335908000,"results":"102","hashOfConfig":"60"},{"size":1250,"mtime":1610553174453,"results":"103","hashOfConfig":"60"},{"size":2001,"mtime":1612095148382,"results":"104","hashOfConfig":"60"},{"size":2710,"mtime":1612068641170,"results":"105","hashOfConfig":"60"},{"size":21285,"mtime":1612154020264,"results":"106","hashOfConfig":"60"},{"size":601,"mtime":1599808240235,"results":"107","hashOfConfig":"60"},{"size":2570,"mtime":1611919802800,"results":"108","hashOfConfig":"60"},{"size":1607,"mtime":1610955168661,"results":"109","hashOfConfig":"60"},{"size":978,"mtime":1611140860964,"results":"110","hashOfConfig":"60"},{"size":21874,"mtime":1612078539268,"results":"111","hashOfConfig":"60"},{"size":6996,"mtime":1612099120117,"results":"112","hashOfConfig":"60"},{"size":10770,"mtime":1611461361409,"results":"113","hashOfConfig":"60"},{"size":727,"mtime":1611407938175,"results":"114","hashOfConfig":"60"},{"size":725,"mtime":1611408081146,"results":"115","hashOfConfig":"60"},{"size":22280,"mtime":1612098675575,"results":"116","hashOfConfig":"60"},{"size":8504,"mtime":1611993698018,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},"1c04jvr",{"filePath":"122","messages":"123","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"121"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"121"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"121"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"121"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"121"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"121"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"121"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"121"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"121"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"121"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"121"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"121"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"121"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"121"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"121"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"121"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"121"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"121"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"121"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"121"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"121"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"121"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"121"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"121"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"121"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"121"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"121"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"121"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"121"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"121"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"121"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"121"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"121"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"121"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"121"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"121"},"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\index.js",["275","276","277","278","279","280","281"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// import \"./assets/css/animate.min.css\";\n// import \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\nimport \"./assets/css/demo.css\";\n// import \"./assets/css/pe-icon-7-stroke.css\";\nimport AppNavbar from './components/AppNavbar';\nimport Home from './components/auth/Home';\nimport MainApp from './MainApp';\n\nReactDOM.render(\n  <MainApp/>\n ,\n  document.getElementById('root')\n);\n\n",["282","283"],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\App.js",["284","285","286","287","288","289","290","291","292","293"],"import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AppNavbar from './components/AppNavbar';\nimport Shoppinglist from './components/Shoppinglist';\nimport { Provider, connect } from 'react-redux';\nimport store from './store';\nimport ItemModal from './components/itemModal';\nimport {Container,Spinner} from 'reactstrap';\nimport { loadUser,loginModalOpen } from \"./action/authActions\";\nimport Bodycopy from './components/Bodycopy';\nimport Test from './components/Test';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Footer from './components/Footer/Footer';\n\nimport AdminNavbar from './components/Navbars/AdminNavbar';\nimport { Route, Switch,Redirect ,withRouter} from \"react-router-dom\";\nimport routes from \"./routes.js\";\nimport image from \"./assets/images/sidebar-3.jpg\";\nimport { getCategories } from './action/categoryAction';\nimport { AnimatedSwitch } from 'react-router-transition';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\",\n      isModalOpen:false,\n    };\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n          exact\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  \n  componentDidMount(e){\n    \n    store.dispatch(loadUser());\n    store.dispatch(getCategories());\n    console.log(\"Action:\",this.props.history);\n    if(this.props.history.action==='POP')\n    {\n        setTimeout(()=>{\n        console.log(\"timeout\");\n        if(!this.props.isAuthenticated){\n          this.props.history.push('/')\n          this.props.loginModalOpen(true);\n        }\n      },150)\n    }\n    else if(!this.props.isAuthenticated){\n      console.log(\"Direct\");\n      this.props.history.push('/')\n      this.props.loginModalOpen(true);\n     }\n   \n  }\n  componentDidUpdate(e){\n  \n    store.dispatch(loadUser());\n   if(!this.props.isAuthenticated){\n     console.log(\"update Component\");\n    this.props.history.push('/')\n    this.props.loginModalOpen(true);\n   }\n  }\n\n  render(){\n    return (\n      <div className=\"wrapper\">\n              <Sidebar {...this.props} routes={routes} image={this.state.image}\n                    color={this.state.color}\n                    hasImage={this.state.hasImage}/>\n            <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">  \n                <AdminNavbar\n                      {...this.props} routes={this.getRoutes(routes)}\n                      brandText={this.getBrandText(this.props.location.pathname)}\n                    />\n  \n                      \n                <Switch>{this.getRoutes(routes)}</Switch>   \n                <Container>\n\n                </Container>          \n             </div>\n         \n      </div>\n    );  \n }}\n const mapStateToProps=state=>{\n  return({\n    isAuthenticated:state.auth.isAuthenticated,\n  })\n }\n\nexport default connect(mapStateToProps,{loginModalOpen})(withRouter(App));\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\MainApp.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\AppNavbar.js",["294","295","296","297","298","299","300","301","302","303","304","305","306"],"import React, {Component, Fragment} from 'react';\r\n\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    \r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Container,Dropdown, Badge, Button\r\n} from 'react-bootstrap';\r\nimport Logout from './auth/Logout';\r\nimport RegisterModal from './auth/RegisterModal1';\r\nimport LoginModal from './auth/LoginModal';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport avatar from '../assets/images/avatar.png'\r\nimport logo from '../assets/images/logo.jpg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faHome, faUserCircle, faDatabase, faUser, faCog, faUserEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport './AppNavBar.css'\r\nimport store from '../store';\r\nimport { loadUser } from '../action/authActions';\r\n\r\n\r\n\r\n\r\nclass AppNavbar extends Component{\r\n    componentDidMount(){\r\n        store.dispatch(loadUser());\r\n    }\r\n    state={\r\n        \r\n        dropdownOpen:false,\r\n        isOpen:false\r\n    }\r\n    static propTypes={\r\n        auth:PropTypes.object.isRequired\r\n    }\r\n    toggle=()=>{\r\n        this.setState({\r\n            isOpen:!this.state.isOpen\r\n        });\r\n    }\r\n    toggled=()=>{\r\n        this.setState({\r\n            dropdownOpen:!this.state.dropdownOpen\r\n        });\r\n    }\r\n    render(){\r\n        const {isAuthenticated, user}=this.props.auth;\r\n       \r\n        console.log(\"from Nav:\",user?user:'Hello');\r\n        const authLinks=(\r\n            <Fragment >\r\n                {/* <Nav.Item>About</Nav.Item> */}\r\n                <Nav.Item>\r\n                    \r\n                <Dropdown className=\"user-dropdown\" style={{padding:'0rem !important'}} isOpen={this.state.dropdownOpen} toggle={this.toggled}>\r\n                    \r\n                    <Dropdown.Toggle id=\"dropdown-basic\" caret>\r\n                        {user? <div className=\"user-avatar\">\r\n                        <img className=\"avatar\" style={{width:'2rem',borderRadius:'50%'}} src={user.img?user.img:avatar} />\r\n                        <div class=\"status-overlay\">\r\n                            <i class=\"bowtie-icon bowtie-status-success success\"></i>\r\n                        </div>\r\n                        </div>:'X'}\r\n                    <div>\r\n                        <span style={{color:'red',fontWeight:400,fontSize:'80%'}}>Shop Admin</span>\r\n                        <div style={{color:'#3b3e66'}}>{user? user.fname+\" \"+user.lname:'Hello Gest'}</div>\r\n                    </div>\r\n                   \r\n                    \r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu bottom>\r\n                            <Dropdown.Item header>\r\n                            {user? <div className=\"user-avatar\">\r\n                    <img className=\"avatar\" style={{width:'2rem',borderRadius:'50%'}} src={user.img?user.img:avatar} />\r\n                    {/* <div class=\"status-overlay\">\r\n                        <i class=\"bowtie-icon bowtie-status-success success\"></i>\r\n                    </div> */}\r\n                    </div>:'X'}\r\n                    <div>\r\n                        <span style={{color:'red',fontWeight:400,fontSize:'80%'}}>Shop Admin</span>\r\n                        <div style={{color:'#3b3e66'}}>{user? user.email:'Hello Guest'}</div>\r\n                    </div>\r\n                            </Dropdown.Item><hr/>\r\n                             <Dropdown.Item className=\"dropdown-list-nav\"> <Nav.Item  >\r\n                            <div className=\"dropdown-list-item\">\r\n                            <FontAwesomeIcon style={{marginRight:'.5rem'}} icon={faCog}/><h7>Settings</h7>    \r\n                            </div>    \r\n                    </Nav.Item></Dropdown.Item>\r\n                             <Dropdown.Item className=\"dropdown-list-nav\" href=\"/admin/user\"> <Nav.Item >\r\n                               \r\n                            <div className=\"dropdown-list-item\">\r\n                            <FontAwesomeIcon style={{marginRight:'.5rem'}} icon={faUserEdit}/><h7>Profile</h7>    \r\n                            </div>     \r\n                    </Nav.Item></Dropdown.Item>\r\n                    <Dropdown.Item> <Nav.Item ><Logout/></Nav.Item></Dropdown.Item>\r\n                   \r\n                    </Dropdown.Menu>\r\n                   \r\n                </Dropdown>\r\n   \r\n                </Nav.Item>    \r\n            </Fragment>\r\n        );\r\n        const guestLinks=(\r\n            <Fragment>\r\n                <Nav.Item>\r\n                   \r\n                    <RegisterModal/>\r\n\r\n                   \r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                        <NavLink onClick={this.toggle} href='#'>\r\n                    <       Button style={{background:'#7a7b97',paddingLeft:' 1.5rem',paddingRight:'1.5rem'}}><b> About</b></Button>\r\n                        </NavLink>\r\n                </Nav.Item>\r\n                {/* <Nav.Item>\r\n                    <LoginModal/>\r\n                </Nav.Item> */}\r\n            </Fragment>\r\n        );\r\n        return(\r\n            <>\r\n            <div  style={{color:'#000',textDecoration:'none'}}>\r\n            <Navbar expand=\"sm\"> \r\n                <Container>\r\n                    <Navbar.Brand href=\"/\"><div className=\"nav-brand\"><img className=\"nav-logo\" src={logo}/><div className=\"brand-text\"><span><b>inventory</b></span><b>ShopperZ</b></div></div></Navbar.Brand>\r\n                    <Navbar.Toggle onClick={this.toggle}/>\r\n                    <Navbar.Collapse className=\"mainNavCollapse\" isOpen={this.state.isOpen} navbar>\r\n                        <NavLink className=\"ml-auto\"  href='/'><b>Home</b></NavLink>\r\n                        {/* <NavLink  href='/admin/dashboard'><b>Dashboard</b></NavLink> */}\r\n                        <NavLink  href='/productsGrid'><b>Products</b></NavLink>\r\n                        <Nav  navbar>\r\n                        {isAuthenticated?authLinks:guestLinks}    \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n       </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    auth:state.auth\r\n})\r\nexport default connect(mapStateToProps,null)(AppNavbar);","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\Home.js",["307","308","309"],"import React, { Component } from \"react\";\r\nimport ChartistGraph from \"react-chartist\";\r\nimport { Container, Row, Col} from \"react-bootstrap\";\r\nimport './Home.css'\r\nimport {Card} from 'react-bootstrap';   \r\nimport NotificationSystem from 'react-notification-system';\r\nimport banner from '../../assets/images/Banner.png'\r\nimport back from '../../assets/images/back.jpg'\r\nimport AppNavbar from \"../AppNavbar\";\r\nimport Home1 from '../Home/Home1'\r\nimport {Prompt, NavLink, withRouter} from 'react-router-dom';\r\nimport { loginModalOpen,loadUser } from './../../action/authActions';\r\nimport { connect } from 'react-redux';\r\nimport ApexChart from '../Home/ApexChart';\r\n\r\n\r\nconst styles = {\r\n    mediaItem: {\r\n      border: \"1px solid gray\",\r\n      backgroundColor: \"#f5f5f5\",\r\n \r\n    },\r\n    mediaItemButtons: {\r\n      paddingTop: \"5px\",\r\n      paddingBottom: \"5px\"\r\n    }\r\n  };\r\n\r\nclass Home extends Component {\r\n\r\nnotificationSystem = React.createRef();\r\naddNotification = event => {\r\n  // event.preventDefault();\r\n  const notification = this.notificationSystem.current;\r\n  notification.addNotification({\r\n    message: 'Welcome To ShopperZ Inventory Management System',\r\n    level: 'success',\r\n    autoDismiss:5\r\n  });\r\n};\r\n\r\ncomponentDidMount(e){\r\n  this.addNotification();\r\n  console.log(\"History:\",this.props.history);\r\n    if(this.props.isBlocked){\r\n          let authenticate = window.confirm(\"Are You Sure Want To Go \",this.props.history.pathname)\r\n          if(!authenticate){\r\n                  this.props.history.push(this.props.history.pathname)\r\n          }\r\n    }\r\n\r\n  var myobj = document.getElementById(\"bodyClick\");\r\n  if(myobj!==null){\r\n  document.documentElement.classList.toggle(\"nav-open\");\r\n  myobj.remove();\r\n\r\n}\r\n\r\nthis.props.loadUser();\r\n if(this.props.isAuthenticated){\r\n  //  <Redirect from='/' to='/admin/dashboard' />\r\n  // this.props.history.push('/admin/dashboard')\r\n  // this.props.loginModalOpen(false);\r\n  // ,backgroundPosition: 'center',backgroundSize: '150rem',\r\n }\r\n}\r\n  render() {\r\n    return (\r\n      <div>\r\n         <NotificationSystem ref={this.notificationSystem} />\r\n        <div className=\"App\" style={{ backgroundImage: `url(\"${back}\")`,backgroundRepeat:'no-repeat'}} >\r\n            <AppNavbar/>\r\n            <Prompt\r\n                when={this.props.isBlocked}\r\n                message={(location)=> `Are You Sure Want To Leave ${location.pathname}`}\r\n/>\r\n            <Container>\r\n          <div className=\"content\" >\r\n            <Container fluid>\r\n              <Row>\r\n              \r\n                <Col md={6} >\r\n                    <Card className=\"intro_card\">\r\n                        <div className=\"text-black mt-3 card-content\">\r\n                            <h1 className=\" mb-3 font-weight-bold\">Product Inventory Management Application</h1>\r\n                            <p>Keep calm and let statistics help you with your stocktaking process!</p><p className=\"font-size-lg text-black-50\">Use this individual application for a head start in building a product that is related to the commerce niche. This template comes with pre-built pages for orders, customers and various sales releated analytics.</p>\r\n                            <div className=\"divider border-2 border-dark my-4 border-light opacity-2 rounded-circle w-25\"></div>\r\n                                <div>\r\n                                    <NavLink style={{color:'white'}} to='/admin/dashboard' className=\"d-block d-sm-inline-block btn btn-primary btn-lg\" >\r\n                                    <span className=\"btn-wrapper--icon\">\r\n                                    </span><span className=\"btn-wrapper--label\" >Dashboard</span></NavLink>\r\n                                    <NavLink className=\"d-block d-sm-inline-block ml-0 mt-3 mt-sm-0 ml-sm-3 btn btn-outline-primary btn-lg\" to=\"/admin/products\"><span>Products Filters</span></NavLink>\r\n                                </div>\r\n                            </div>\r\n                    </Card>\r\n                </Col>\r\n                \r\n                <Col md={6}>\r\n                  <Card className='banner-card'>\r\n                      <div className='banner'>\r\n                          <img src={banner}/>\r\n                      </div>\r\n                  </Card>\r\n                </Col>\r\n              \r\n              </Row>\r\n              \r\n            \r\n            </Container>\r\n           \r\n            \r\n      </div>\r\n      <ApexChart/>\r\n      </Container>\r\n      \r\n      \r\n      <Home1/>\r\n      </div>\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps=state=>{\r\n  return({\r\n    isBlocked:state.auth.isBlocked,\r\n    isAuthenticated:state.auth.isAuthenticated\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps,{loginModalOpen,loadUser})(withRouter(Home));\r\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\routes.js",["310","311","312","313"],"import Dashboard from \"./components/views/Dashboard\";\r\n// import UserProfile from \"./components/views/UserProfile\";\r\n// import TableList from \"./components/views/TableList.jsx\";\r\n// import Typography from \"./components/views/Typography.jsx\";\r\n// import Icons from \"./components/views/Icons.jsx\";\r\n// import Maps from \"./components/views/Maps.jsx\";\r\n// import Notifications from \"./components/views/Notifications.jsx\";\r\n// import Upgrade from \"./components/views/Upgrade.jsx\";\r\nimport Home from './components/auth/Home';\r\nimport Bodycopy from \"./components/Bodycopy\";\r\nimport UserProfile from './components/views/UserProfile'\r\nimport { faDatabase, faHome, faLaptop, faRupeeSign, faShoppingBag, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Product from \"./components/ProductsList/Product\";\r\n\r\n\r\n\r\nconst dashboardRoutes = [\r\n  // {\r\n    \r\n  //   path: \"/\",\r\n  //   name: \"Home\",\r\n  //   icon: faHome,\r\n  //   component: Home,\r\n  //   layout: \"\"\r\n  // },\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: faDatabase,\r\n    component: Dashboard,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/user\",\r\n    name: \"User Profile\",\r\n    icon: faUserCircle,\r\n    component: UserProfile,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/products\",\r\n    name: \"Products\",\r\n    icon: faShoppingBag,\r\n    component: Bodycopy,\r\n    layout: \"/admin\"\r\n  },\r\n  \r\n\r\n  {\r\n    path: \"/products/:name\",\r\n    name: \"Single Product\",\r\n    display:'none',\r\n    icon: faShoppingBag,\r\n    component:Product ,\r\n    layout: \"/admin\"\r\n  }\r\n  // {\r\n  //   path: \"/typography\",\r\n  //   name: \"Typography\",\r\n  //   icon: \"pe-7s-news-paper\",\r\n  //   component: Typography,\r\n  //   layout: \"/admin\"\r\n  // },\r\n  // {\r\n  //   path: \"/icons\",\r\n  //   name: \"Icons\",\r\n  //   icon: \"pe-7s-science\",\r\n  //   component: Icons,\r\n  //   layout: \"/admin\"\r\n  // },\r\n  // {\r\n  //   path: \"/maps\",\r\n  //   name: \"Maps\",\r\n  //   icon: \"pe-7s-map-marker\",\r\n  //   component: Maps,\r\n  //   layout: \"/admin\"\r\n  // },\r\n  // {\r\n  //   path: \"/notifications\",\r\n  //   name: \"Notifications\",\r\n  //   icon: \"pe-7s-bell\",\r\n  //   component: Notifications,\r\n  //   layout: \"/admin\"\r\n  // },\r\n  // {\r\n  //   upgrade: true,\r\n  //   path: \"/upgrade\",\r\n  //   name: \"Upgrade to PRO\",\r\n  //   icon: \"pe-7s-rocket\",\r\n  //   component: Upgrade,\r\n  //   layout: \"/admin\"\r\n  // }\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\views\\Dashboard.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\StatsCard\\StatsCard.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Tasks\\Tasks.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\store.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Shoppinglist.js",["314","315"],"import React,{Component} from 'react';\r\nimport {Container,ListGroup,ListGroupItem,Button} from 'reactstrap';\r\nimport {CSSTransition,TransitionGroup} from 'react-transition-group';\r\nimport {v1 as uuid} from 'uuid';\r\nimport {connect} from 'react-redux';\r\nimport {getItems,deleteItem} from '../action/itemAction'; \r\nimport PropType from 'prop-types';\r\n\r\n\r\nclass Shoppinglist extends Component{\r\n\r\n// to fetch data when Shopping List comnponent Mount or Called\r\ncomponentDidMount(){\r\n    this.props.getItems();\r\n}\r\n\r\nonDeleteClick=(id)=>{\r\nthis.props.deleteItem(id);\r\n}\r\n\r\n    render(){\r\n        const {items}=this.props.item;\r\n        return(\r\n            <Container>\r\n\r\n                <ListGroup>\r\n                    <TransitionGroup className=\"shopping-list\">\r\n                        {items.map(({_id,name})=>(\r\n                            <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                                <ListGroupItem>\r\n                                    <Button color=\"danger\" size=\"sm\" onClick={this.onDeleteClick.bind(this,_id)}\r\n                                    >&times;</Button> {name} </ListGroupItem>\r\n                            </CSSTransition>\r\n        ))}\r\n                    </TransitionGroup>\r\n                </ListGroup>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n// Shoppinglist.prototype={\r\n//     getItems:PropType.func.isRequired,\r\n//     item:PropType.object.isRequired\r\n// };\r\n\r\nconst mapStateToProps=(state)=>({     // feching data from Reducer state\r\n    item:state.item\r\n});\r\n\r\nexport default connect(mapStateToProps,{ getItems,deleteItem})(Shoppinglist);\r\n\r\n\r\n// export const getItems=()=>{\r\n//     return{\r\n//         type:GET_ITEM\r\n//     };\r\n// }\r\n\r\n// export const deleteItem=(id)=>{\r\n//     return{\r\n//         type:DELETE_ITEM,\r\n//         payload:id\r\n//     };\r\n// }\r\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\itemModal.js",["316"],"import React,{Component} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody,Form,FormGroup,Label, Input, Collapse } from 'reactstrap';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {addItem} from '../action/itemAction';\r\n\r\n\r\n// import e from 'express';\r\n\r\nclass ItemModal extends Component{\r\n    state={\r\n        modal:false,   // modal for adding item is false initially\r\n        name:''        // name entering by User in Modal text Field\r\n    }\r\n    toggle=()=>{    // to toggle the modal \r\n        this.setState({\r\n            modal:!this.state.modal\r\n        })\r\n    }\r\n\r\n\r\n    onChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    // On Submit  method \r\n    onSubmit=e=>{\r\n        e.preventDefault();\r\n\r\n        const newItem={\r\n           \r\n            name:this.state.name\r\n        }\r\n        this.props.addItem(newItem);\r\n        this.toggle();\r\n    }\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n            <Button onClick={this.toggle} style={{marginBottom:'2rem'}}>\r\n                Add Item\r\n            </Button>\r\n\r\n            <Modal isOpen={this.state.modal} toggle={this.toggle} >\r\n                <ModalHeader toggle={this.toggle}>Add To Shopping List</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"item\">Item</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"item\"\r\n                                placeholder=\"Add Shopping item\"\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <Button color=\"dark\" style={{marginTop:'2rem'}} block>\r\n\r\n                            Add Item</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n}\r\nconst mapStateToProps= state=>{\r\n    return({\r\n        item:state.item\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{addItem})(ItemModal);","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Test.js",["317","318","319","320","321","322"],"import { CircularProgressbar, CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\r\nimport CountUp from 'react-countup';\r\nimport React from 'react';\r\nimport './Test.css';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  faQuestionCircle,faUserCircle,faDollarSign,faCommentDollar } from '@fortawesome/free-solid-svg-icons';\r\nimport AnimatedProgressProvider from \"./AnimatedProgressProvider\";\r\nimport { easeQuadInOut } from \"d3-ease\";\r\n// import {Card,Grid,Button,Nav,NavItem,Col,Row,Modal,FormGroup,Input,Collapse} from 'reactstrap';\r\nimport {Container,Col,Row} from 'react-bootstrap'\r\nimport {Card} from 'reactstrap';\r\nexport default function Test() {\r\n\r\n\r\n        return (\r\n            <>\r\n            <Container>\r\n                <Row  className=\"cardlist\">\r\n                    <Col lg={3} sm={6}>\r\n                        <Card className=\"card-box card1 bg-midnight-bloom p-3 mb-5\">\r\n                        \r\n                            <div className=\"d-flex align-items-center\">\r\n\r\n                            <AnimatedProgressProvider\r\n                                    valueStart={0}\r\n                                    \r\n                                    valueEnd={54}\r\n                                    duration={3}\r\n                                    easingFunction={easeQuadInOut}\r\n                                    \r\n                                >\r\n                                    {value => {\r\n                                    const roundedValue = Math.round(value);\r\n                                    return (\r\n                                        <CircularProgressbarWithChildren\r\n                                        value={value}\r\n                                        \r\n                                        /* This is important to include, because if you're fully managing the\r\n                                    animation yoursimport AnimatedProgressProvider from './AnimatedProgressProvider';\r\nelf, you'll want to disable the CSS animation. */\r\n                                        styles={buildStyles({pathTransition: \"none\",pathColor: \"rgba(255,255,255,.95)\", trailColor: \"rgba(255,255,255,.1)\"})}\r\n                                        > \r\n\r\n                                    <div className=\"text-white d-40 rounded-circle btn-icon\">\r\n                                        <FontAwesomeIcon icon={faQuestionCircle} className=\"font-size-lg icon1 \" />\r\n                                    </div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    );\r\n                                    }}\r\n                                </AnimatedProgressProvider>\r\n                                \r\n                                <div className=\"pl-3\">\r\n                                    <div className=\" text-white  font-weight-bold\">Orders</div>\r\n                                    <div className=\"value font-weight-bold pt-2 text-white \">\r\n                                        <CountUp\r\n                                            start={0}\r\n                                            end={99}\r\n                                            duration={6}\r\n                                            delay={0}\r\n                                            separator=\"\"\r\n                                            decimals={0}\r\n                                            decimal=\",\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </Card>\r\n                    </Col>\r\n                    <Col lg={3} sm={6}>\r\n                        <Card className=\"card-box card2 bg-royal p-3 mb-5\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                            \r\n                            <AnimatedProgressProvider\r\n                                    valueStart={0}\r\n                                    \r\n                                    valueEnd={54}\r\n                                    duration={3}\r\n                                    easingFunction={easeQuadInOut}\r\n                                    \r\n                                >\r\n                                    {value => {\r\n                                    const roundedValue = Math.round(value);\r\n                                    return (\r\n                                        <CircularProgressbarWithChildren\r\n                                        value={value}\r\n                                        \r\n                                        /* This is important to include, because if you're fully managing the\r\n                                    animation yoursimport AnimatedProgressProvider from './AnimatedProgressProvider';\r\nelf, you'll want to disable the CSS animation. */\r\n                                        styles={buildStyles({ pathTransition: \"none\",pathColor: \"rgba(255,255,255,.95)\", trailColor: \"rgba(255,255,255,.1)\" })}\r\n                                        >\r\n                                    <div className=\"text-white d-40 rounded-circle btn-icon\">\r\n                                        <FontAwesomeIcon icon={faUserCircle} className=\"font-size-lg icon1 \" />\r\n                                    </div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    );\r\n                                    }}\r\n                                </AnimatedProgressProvider>\r\n                                <div className=\"pl-3\">\r\n                                    <div className=\" text-white font-weight-bold\">Visitors</div>\r\n                                    <div className=\"value font-weight-bold text-white pt-2  \">\r\n                                        <CountUp\r\n                                            start={0}\r\n                                            end={54}\r\n                                            duration={6}\r\n                                            delay={2}\r\n                                            separator=\"\"\r\n                                            decimals={0}\r\n                                            decimal=\",\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col lg={3} sm={6}>\r\n                        <Card className=\"card-box card3 bg-deep-sky p-3 mb-5\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                            <AnimatedProgressProvider\r\n                                    valueStart={0}\r\n                                    \r\n                                    valueEnd={54}\r\n                                    duration={3}\r\n                                    easingFunction={easeQuadInOut}\r\n                                    \r\n                                >\r\n                                    {value => {\r\n                                    const roundedValue = Math.round(value);\r\n                                    return (\r\n                                        <CircularProgressbarWithChildren\r\n                                        value={value}\r\n                                        \r\n                                        /* This is important to include, because if you're fully managing the\r\n                                    animation yoursimport AnimatedProgressProvider from './AnimatedProgressProvider';\r\nelf, you'll want to disable the CSS animation. */\r\n                                        styles={buildStyles({ pathTransition: \"none\",pathColor: \"rgba(255,255,255,.95)\", trailColor: \"rgba(255,255,255,.1)\" })}\r\n                                        >\r\n                                    <div className=\"text-white d-40 rounded-circle btn-icon\">\r\n                                        <FontAwesomeIcon icon={faCommentDollar} className=\"font-size-lg icon1 \" />\r\n                                    </div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    );\r\n                                    }}\r\n                                </AnimatedProgressProvider>\r\n                                <div className=\"pl-3\">\r\n                                    <div className=\" text-white font-weight-bold\">Income</div>\r\n                                    <div className=\"value font-weight-bold pt-2 text-white \">\r\n                                        $<CountUp\r\n                                            start={0}\r\n                                            end={134.7}\r\n                                            duration={6}\r\n                                            delay={0}\r\n                                            separator=\"\"\r\n                                            decimals={0}\r\n                                            decimal=\",\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col lg={3} sm={6}>\r\n                        <Card className=\"card-box card4 bg-plum-plate p-3 mb-5\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                            <AnimatedProgressProvider\r\n                                    valueStart={0}\r\n                                    \r\n                                    valueEnd={54}\r\n                                    duration={3}\r\n                                    easingFunction={easeQuadInOut}\r\n                                    \r\n                                >\r\n                                    {value => {\r\n                                    const roundedValue = Math.round(value);\r\n                                    return (\r\n                                        <CircularProgressbarWithChildren\r\n                                        value={value}\r\n\r\n\r\n                                        styles={buildStyles({ pathTransition: \"none\",pathColor: \"rgba(255,255,255,.95)\", trailColor: \"rgba(255,255,255,.1)\" })}\r\n                                        > <div className=\"text-white d-40 rounded-circle btn-icon\">\r\n                                        <FontAwesomeIcon icon={faCommentDollar} className=\"font-size-lg icon1 \" />\r\n                                    </div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    );\r\n                                    }}\r\n                                </AnimatedProgressProvider>\r\n                                <div className=\"pl-3\">\r\n                                    <div className=\"text-white  font-weight-bold\">Expenses</div>\r\n                                    <div className=\"value font-weight-bold pt-2  text-white\">\r\n                                        $<CountUp\r\n                                        start={0}\r\n                                        end={3.496}\r\n                                        duration={6}\r\n                                        delay={2}\r\n                                        separator=\"\"\r\n                                        decimals={3}\r\n                                        decimal=\",\"\r\n                                    />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n        </Container>\r\n            </>\r\n        );\r\n    }","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Bodycopy.js",["323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347"],"import React, { Component } from 'react';\r\nimport { Media,CardSubtitle, Spinner, Row, Container, Col, Card, CardBody, Button, CardTitle, CardText, CardImg, CardLink} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\n\r\nimport EditModal1 from './auth/EditModal1'\r\nimport E2 from './auth/E2';\r\nimport EditModal from './auth/EditModal'\r\nimport { getItems,deleteItem } from \"../action/itemAction\";\r\nimport Body2 from './auth/Body2';\r\nimport Pagination from './Pagination';\r\nimport { PropTypes } from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes,faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport ProductList from './ProductsList/ProductList';\r\n\r\n\r\nconst styles = {\r\n  mediaItem: {\r\n    border: \"1px solid gray\",\r\n    backgroundColor: \"#f5f5f5\",\r\n\r\n  },\r\n  mediaItemButtons: {\r\n    paddingTop: \"5px\",\r\n    paddingBottom: \"5px\"\r\n  }\r\n};\r\n\r\nclass Bodycopy extends Component {\r\n  state = {\r\n    products: this.props.products,\r\n    pageOfItems: [],\r\n    Index1:0,\r\n    Index2:8,\r\n\r\n  };\r\n  \r\n\r\n  componentDidMount(){\r\n this.props.getItems()\r\n    this.setState({products:this.props.products})\r\n \r\n    // console.log(\"ProductS\",this.props.products)\r\n    // console.log(\"Products:\",this.props.products);\r\n  }\r\n  componentDidUpdate(){\r\n//  this.props.getItems()\r\n    // this.setState({products:this.props.products})\r\n \r\n    // console.log(\"ProductSU\",this.state.products)\r\n    // console.log(\"Products:\",this.props.products);\r\n  }\r\n  handleView=()=>{\r\n    if(!this.props.isAuthenticated){\r\n      \r\n    }\r\n  }\r\n  onChangePage(pageOfItems) {\r\n    // update state with new page of items\r\n    this.setState({ pageOfItems: pageOfItems });\r\n\r\n}\r\n\r\n  \r\n    render(){\r\n      \r\n      const maxlimit=100;\r\n      var products=this.props.products;\r\n      \r\n      products=products.slice(this.state.Index1,this.state.Index2)\r\n     \r\n    \r\n        return (\r\n            <div>\r\n            <ProductList/>\r\n                            \r\n            \r\n            </div>\r\n          );\r\n    }\r\n  \r\n};\r\nconst mapStateToProps= state=>{\r\n    return({\r\n        isAuthenticated:state.auth.isAuthenticated,\r\n        isLoading:state.auth.isLoading,\r\n        user:state.auth.user,\r\n        products:state.item.items,\r\n        itemsLoading:state.item.itemsLoading,\r\n        itemsLoaded:state.item.itemsLoaded\r\n        // error:state.error\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{getItems,deleteItem})(Bodycopy);","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Test1.js",["348","349"],"import './Test1.css';\r\nimport React,{useState} from 'react';\r\nimport Rating from 'react-rating';\r\nimport clsx from 'clsx';\r\nimport Nouislider from 'nouislider-react';\r\nimport product1 from '../assets/images/product-1.png';\r\nimport product2 from '../assets/images/product-2.png';\r\nimport product3 from '../assets/images/product-3.png';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {Input,CardHeader,PaginationItem,PaginationLink,Pagination} from 'reactstrap';\r\nimport {Card,Container,Col,Row,Collapse,Button} from 'react-bootstrap'\r\nimport {  faHeart,faTrash,faStar,faAngleUp } from '@fortawesome/free-solid-svg-icons';\r\n// import product4 from '../../../assets/images/stock-products/product-4.png';\r\n// import product5 from '../../../assets/images/stock-products/product-5.png';\r\n// import product6 from '../../../assets/images/stock-products/product-6.png';\r\n\r\n\r\nexport default function Test1() {\r\n\r\n        const [isPrice, setPrice] = useState(true);\r\n        const togglePrice = () => setPrice(!isPrice);\r\n\r\n        const [isBrand, setBrand] = useState(true);\r\n        const toggleBrand = () => setBrand(!isBrand);\r\n\r\n        const [isColor, setColor] = useState(true);\r\n        const toggleColor = () => setColor(!isColor);\r\n\r\n        const [isCpu, setCpu] = useState(false);\r\n        const toggleCpu = () => setCpu(!isCpu);\r\n\r\n\r\n        return (\r\n            <>\r\n\r\n               <Row>\r\n                   <Col xl=\"4\">\r\n                       <Card className=\"card1 card-box mb-5 accordion\">\r\n                           <Card className={clsx(\"border-0 bg-transparent shadow-none rounded-0 card-box\", {'panel-open': isPrice})}>\r\n                               <Card className=\" border-0 bg-transparent shadow-none rounded-top\">\r\n                                   <CardHeader className=\"rounded-top\">\r\n                                       <div className=\"panel-title\">\r\n                                           <div className=\"accordion-toggle rounded-top overflow-hidden\">\r\n                                               <Button color=\"link\" size=\"lg\" className=\"border-bottom-0 d-flex align-items-center justify-content-between\"\r\n                                                       onClick={togglePrice}>\r\n                                                   <span className=\"font-weight-bold\">Price</span>\r\n                                                   <FontAwesomeIcon icon={faAngleUp} className=\"font-size-xl accordion-icon\"/>\r\n                                               </Button>\r\n                                           </div>\r\n                                       </div>\r\n                                   </CardHeader>\r\n                                   <Collapse isOpen={isPrice}>\r\n                                       <div className=\"px-4 pt-5 pb-4\">\r\n                                           <Nouislider connect range={{ min: 50, max: 3965 }} start={[650, 2999]} step={1} tooltips />\r\n\r\n                                       </div>\r\n                                   </Collapse>\r\n                               </Card>\r\n                           </Card>\r\n                           <div className=\"divider bg-dark opacity-4\" />\r\n                           <Card className={clsx(\"border-0 bg-transparent shadow-none rounded-0 card-box\", {'panel-open': isBrand})}>\r\n                               <Card className=\"border-0 bg-transparent shadow-none rounded-0\">\r\n                                   <CardHeader className=\"rounded-0\">\r\n                                       <div className=\"panel-title\">\r\n                                           <div className=\"accordion-toggle rounded-0 overflow-hidden\">\r\n                                               <Button color=\"link\" size=\"lg\" className=\"border-bottom-0 d-flex align-items-center justify-content-between\"\r\n                                                       onClick={toggleBrand}>\r\n                                                   <span className=\"font-weight-bold\">Brand</span>\r\n                                                   <FontAwesomeIcon icon={faAngleUp} className=\"font-size-xl accordion-icon\"/>\r\n                                               </Button>\r\n                                           </div>\r\n                                       </div>\r\n                                   </CardHeader>\r\n                                   <Collapse isOpen={isBrand}>\r\n                                       <div className=\"px-4 pt-2 pb-4\">\r\n                                           <Row>\r\n                                               <Col md=\"6\">\r\n                                                   <Input type=\"checkbox\" id=\"CustomCheckbox1001\" className=\"m-2 align-self-center\" label=\"Lenovo\" />\r\n                                               </Col>\r\n                                               <Col md=\"6\">\r\n                                                   <Input type=\"checkbox\" id=\"CustomCheckbox1003\" className=\"m-2 align-self-center\" label=\"Intel\" />\r\n                                               </Col>\r\n                                               <Col md=\"6\">\r\n                                                   <Input type=\"checkbox\" id=\"CustomCheckbox1000\" className=\"m-2 align-self-center\" label=\"Apple\" />\r\n                                               </Col>\r\n                                               <Col md=\"6\">\r\n                                                   <Input type=\"checkbox\" id=\"CustomCheckbox1004\" className=\"m-2 align-self-center\" label=\"Huawei\" />\r\n                                               </Col>\r\n                                               <Col md=\"6\">\r\n                                                   <Input type=\"checkbox\" id=\"CustomCheckbox1005\" className=\"m-2 align-self-center\" label=\"Xiaomi\" />\r\n                                               </Col>\r\n                                               <Col md=\"6\">\r\n                                                   <Input type=\"checkbox\" id=\"CustomCheckbox1006\" className=\"m-2 align-self-center\" label=\"LG\" />\r\n                                               </Col>\r\n                                           </Row>\r\n                                       </div>\r\n                                   </Collapse>\r\n                               </Card>\r\n                           </Card>\r\n                           <div className=\"divider bg-dark opacity-4\" />\r\n                           <Card className={clsx(\"border-0 bg-transparent shadow-none rounded-0 card-box\", {'panel-open': isColor})}>\r\n                               <Card className=\"border-0 bg-transparent shadow-none rounded-0\">\r\n                                   <CardHeader className=\"rounded-0\">\r\n                                       <div className=\"panel-title\">\r\n                                           <div className=\"accordion-toggle rounded-0 overflow-hidden\">\r\n                                               <Button color=\"link\" size=\"lg\" className=\"border-bottom-0 d-flex align-items-center justify-content-between\"\r\n                                                       onClick={toggleColor}>\r\n                                                   <span className=\"font-weight-bold\">Color</span>\r\n                                                   <FontAwesomeIcon icon={faAngleUp} className=\"font-size-xl accordion-icon\"/>\r\n                                               </Button>\r\n                                           </div>\r\n                                       </div>\r\n                                   </CardHeader>\r\n                                   <Collapse isOpen={isColor}>\r\n                                       <div className=\"px-4 pt-2 pb-4\">\r\n                                           <div className=\"py-2 d-flex align-items-center justify-content-center flex-wrap\">\r\n                                               <a href=\"#/\" onClick={e => e.preventDefault()} className=\"m-2 d-40 rounded hover-scale-rounded btn-swatch btn-swatch--lg bg-danger\">&nbsp;</a>\r\n                                               <a href=\"#/\" onClick={e => e.preventDefault()} className=\"m-2 d-40 rounded hover-scale-rounded btn-swatch btn-swatch--lg bg-first\">&nbsp;</a>\r\n                                               <a href=\"#/\" onClick={e => e.preventDefault()} className=\"m-2 d-40 rounded hover-scale-rounded btn-swatch btn-swatch--lg active bg-second\">&nbsp;</a>\r\n                                               <a href=\"#/\" onClick={e => e.preventDefault()} className=\"m-2 d-40 rounded hover-scale-rounded btn-swatch btn-swatch--lg bg-warning\">&nbsp;</a>\r\n                                               <a href=\"#/\" onClick={e => e.preventDefault()} className=\"m-2 d-40 rounded hover-scale-rounded btn-swatch btn-swatch--lg bg-deep-blue\">&nbsp;</a>\r\n                                               <a href=\"#/\" onClick={e => e.preventDefault()} className=\"m-2 d-40 rounded hover-scale-rounded btn-swatch btn-swatch--lg bg-plum-plate\">&nbsp;</a>\r\n                                               <a href=\"#/\" onClick={e => e.preventDefault()} className=\"m-2 d-40 rounded hover-scale-rounded btn-swatch btn-swatch--lg bg-amy-crisp\">&nbsp;</a>\r\n                                               <a href=\"#/\" onClick={e => e.preventDefault()} className=\"m-2 d-40 rounded hover-scale-rounded btn-swatch btn-swatch--lg bg-success\">&nbsp;</a>\r\n                                           </div>\r\n                                       </div>\r\n                                   </Collapse>\r\n                               </Card>\r\n                           </Card>\r\n                           <div className=\"divider bg-dark opacity-4\" />\r\n                           <Card className={clsx(\"border-0 bg-transparent shadow-none rounded-0 card-box\", {'panel-open': isCpu})}>\r\n                               <Card className=\"border-0 bg-transparent shadow-none rounded-bottom\">\r\n                                   <CardHeader className=\"rounded-bottom\">\r\n                                       <div className=\"panel-title\">\r\n                                           <div className=\"accordion-toggle rounded-bottom overflow-hidden\">\r\n                                               <Button color=\"link\" size=\"lg\" className=\"border-bottom-0 d-flex align-items-center justify-content-between\"\r\n                                                       onClick={toggleCpu}>\r\n                                                   <span className=\"font-weight-bold\">CPU Cores</span>\r\n                                                   <FontAwesomeIcon icon={faAngleUp} className=\"font-size-xl accordion-icon\"/>\r\n                                               </Button>\r\n                                           </div>\r\n                                       </div>\r\n                                   </CardHeader>\r\n                                   <Collapse isOpen={isCpu}>\r\n                                       <div className=\"px-4 pt-2 pb-4\">\r\n                                           <Row>\r\n                                               <Col md=\"6\">\r\n                                                   <Input type=\"checkbox\" id=\"CustomCheckbox1007\" className=\"m-2 align-self-center\" label=\"Atom\" />\r\n                                               </Col>\r\n                                               <Col md=\"6\">\r\n                                                   <Input type=\"checkbox\" id=\"CustomCheckbox1008\" className=\"m-2 align-self-center\" label=\"Multi\" />\r\n                                               </Col>\r\n                                           </Row>\r\n\r\n                                           <div className=\"p-4\">\r\n                                            <Nouislider connect range={{ min: 1, max: 8 }} start={[2, 4]} step={1} decimals={0} />\r\n                                           </div>\r\n\r\n                                       </div>\r\n                                   </Collapse>\r\n                               </Card>\r\n                           </Card>\r\n                       </Card>\r\n                   </Col>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                   <Col xl=\"8\">\r\n                       <Card className=\"mb-5\">\r\n                           {/* <div className=\"card-tr-actions z-over\">\r\n                               <Button href=\"#/\" onClick={e => e.preventDefault()} color=\"neutral-danger\" className=\"btn-transition-none btn-pill d-30 btn-icon p-0\">\r\n                                   <FontAwesomeIcon icon={faHeart} />\r\n                               </Button>\r\n                           </div> */}\r\n                           <Row className=\"product_list\">\r\n                               <Col lg=\"4\" className=\"d-flex align-items-center justify-content-center r-border\">\r\n                                   <div className=\"divider-v divider-v-md d-none d-lg-block\" />\r\n                                   <a href=\"#/\" onClick={e => e.preventDefault()} className=\"card-img-wrapper card-box-hover rounded\">\r\n                                       <img alt=\"...\" className=\"img-fluid hover-scale-lg\" src={product1}  />\r\n                                   </a>\r\n                               </Col>\r\n                               <Col lg=\"5\" className=\"t-a-left d-flex align-items-center justify-content-centerr-border r-border\">\r\n                                   <div className=\"divider-v divider-v-md d-none d-lg-block\" />\r\n                                   <div className=\"py-4\">\r\n                                       <div className=\"font-weight-bold font-size-xxl\">\r\n                                           Apple TV Gen. 4 2020\r\n                                       </div>\r\n                                       <div className=\"d-flex flex-wrap pt-2 pb-3\">\r\n                                           <Rating initialRating={4} stop={5}\r\n                                                   emptySymbol={<span className=\"text-black-50 mr-1 font-size-xl opacity-3\"><FontAwesomeIcon icon={faStar}/></span>}\r\n                                                   fullSymbol={<span className=\"text-warning mr-1 font-size-xl\"><FontAwesomeIcon icon={faStar}/></span>}\r\n                                           />\r\n                                       </div>\r\n                                       <div className=\"font-size-sm text-black-50 pb-3\">\r\n                                           All components from the General dashboard template can be used in the individual applications pages, without modifications.\r\n                                       </div>\r\n                                       <div className=\"font-size-sm\">\r\n                                           <div className=\"py-2\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Color:\r\n                                               </span>\r\n                                               Black\r\n                                           </div>\r\n                                           <div className=\"py-1\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Operating System:\r\n                                               </span>\r\n                                               MacOS\r\n                                           </div>\r\n                                           <div className=\"py-1\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Version:\r\n                                               </span>\r\n                                               Gen 5\r\n                                           </div>\r\n                                           <div className=\"pt-1\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Processor:\r\n                                               </span>\r\n                                               i5 9700k\r\n                                           </div>\r\n                                       </div>\r\n                                   </div>\r\n                               </Col>\r\n                               <Col lg=\"3\" className=\"d-flex align-items-center justify-content-center\">\r\n                                   <div className=\"px-xl-3\">\r\n                                       <div className=\"font-weight-bold font-size-xxl\">\r\n                                           $ 999,45\r\n                                       </div>\r\n                                       <div className=\"font -size-sm\">\r\n                                           <div className=\"py-2\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Stock:\r\n                                               </span>\r\n                                               <b>45</b> pcs.\r\n                                           </div>\r\n                                       </div>\r\n                                       <div className=\"pt-3\">\r\n                                           <Button size=\"sm\" className=\"add_cart\">\r\n                                               Add to cart\r\n                                           </Button>\r\n                                       </div>\r\n                                       <div className=\"pt-3\">\r\n                                           <Button size=\"sm\" className=\"danger\" >\r\n                                               <span className=\"btn-wrapper--icon\">\r\n                                                    <FontAwesomeIcon icon={faTrash} />\r\n                                               </span>\r\n                                           </Button>\r\n                                       </div>\r\n                                   </div>\r\n                               </Col>\r\n                           </Row>\r\n                       </Card>\r\n                       <Card className=\"mb-5\">\r\n                           <div className=\"card-tr-actions z-over\">\r\n                               <Button href=\"#/\" onClick={e => e.preventDefault()} color=\"neutral-danger\" className=\"btn-transition-none btn-pill d-30 btn-icon p-0\">\r\n                                   <FontAwesomeIcon icon={['far', 'heart']} />\r\n                               </Button>\r\n                           </div>\r\n                           <Row>\r\n                               <Col lg=\"4\" className=\"d-flex align-items-center justify-content-center\">\r\n                                   <div className=\"divider-v divider-v-md d-none d-lg-block\" />\r\n                                   <a href=\"#/\" onClick={e => e.preventDefault()} className=\"card-img-wrapper card-box-hover rounded\">\r\n                                       <img alt=\"...\" className=\"img-fluid hover-scale-lg\" src={product2}  />\r\n                                   </a>\r\n                               </Col>\r\n                               <Col lg=\"5\" className=\"d-flex align-items-center justify-content-center\">\r\n                                   <div className=\"divider-v divider-v-md d-none d-lg-block\" />\r\n                                   <div className=\"py-4\">\r\n                                       <div className=\"font-weight-bold font-size-xxl\">\r\n                                           iPhone 11 PRO Max\r\n                                       </div>\r\n                                       <div className=\"d-flex flex-wrap pt-2 pb-3\">\r\n                                           <Rating initialRating={5} stop={5}\r\n                                                   emptySymbol={<span className=\"text-black-50 mr-1 font-size-xl opacity-3\"><FontAwesomeIcon icon={['far', 'star']}/></span>}\r\n                                                   fullSymbol={<span className=\"text-warning mr-1 font-size-xl\"><FontAwesomeIcon icon={['fas', 'star']}/></span>}\r\n                                           />\r\n                                       </div>\r\n                                       <div className=\"font-size-sm text-black-50 pb-3\">\r\n                                           All components from the General dashboard template can be used in the individual applications pages, without modifications.\r\n                                       </div>\r\n                                       <div className=\"font-size-sm\">\r\n                                           <div className=\"py-2\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Color:\r\n                                               </span>\r\n                                               Black\r\n                                           </div>\r\n                                           <div className=\"py-1\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Operating System:\r\n                                               </span>\r\n                                               MacOS\r\n                                           </div>\r\n                                           <div className=\"py-1\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Version:\r\n                                               </span>\r\n                                               Gen 5\r\n                                           </div>\r\n                                           <div className=\"pt-1\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Processor:\r\n                                               </span>\r\n                                               i5 9700k\r\n                                           </div>\r\n                                       </div>\r\n                                   </div>\r\n                               </Col>\r\n                               <Col lg=\"3\" className=\"d-flex align-items-center justify-content-center\">\r\n                                   <div className=\"px-xl-3\">\r\n                                       <div className=\"font-weight-bold font-size-xxl\">\r\n                                           $ 1299,00\r\n                                       </div>\r\n                                       <div className=\"font-size-sm\">\r\n                                           <div className=\"py-2\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Stock:\r\n                                               </span>\r\n                                               <b>99</b> pcs.\r\n                                           </div>\r\n                                       </div>\r\n                                       <div className=\"pt-3\">\r\n                                           <Button size=\"sm\" color=\"first\">\r\n                                               Add to cart\r\n                                           </Button>\r\n                                       </div>\r\n                                       <div className=\"pt-3\">\r\n                                           <Button size=\"sm\" color=\"danger\">\r\n                                               <span className=\"btn-wrapper--icon\">\r\n                                                    <FontAwesomeIcon icon={['far', 'trash-alt']} />\r\n                                               </span>\r\n                                           </Button>\r\n                                       </div>\r\n                                   </div>\r\n                               </Col>\r\n                           </Row>\r\n                       </Card>\r\n                       <Card className=\"mb-5\">\r\n                           <div className=\"card-tr-actions z-over\">\r\n                               <Button href=\"#/\" onClick={e => e.preventDefault()} color=\"neutral-danger\" className=\"btn-transition-none btn-pill d-30 btn-icon p-0\">\r\n                                   <FontAwesomeIcon icon={['far', 'heart']} />\r\n                               </Button>\r\n                           </div>\r\n                           <Row>\r\n                               <Col lg=\"4\" className=\"d-flex align-items-center justify-content-center\">\r\n                                   <div className=\"divider-v divider-v-md d-none d-lg-block\" />\r\n                                   <a href=\"#/\" onClick={e => e.preventDefault()} className=\"card-img-wrapper card-box-hover rounded\">\r\n                                       <img alt=\"...\" className=\"img-fluid hover-scale-lg\" src={product3}  />\r\n                                   </a>\r\n                               </Col>\r\n                               <Col lg=\"5\" className=\"d-flex align-items-center justify-content-center\">\r\n                                   <div className=\"divider-v divider-v-md d-none d-lg-block\" />\r\n                                   <div className=\"py-4\">\r\n                                       <div className=\"font-weight-bold font-size-xxl\">\r\n                                           iPad PRO 13\" 2019\r\n                                       </div>\r\n                                       <div className=\"d-flex flex-wrap pt-2 pb-3\">\r\n                                           <Rating initialRating={3} stop={5}\r\n                                                   emptySymbol={<span className=\"text-black-50 mr-1 font-size-xl opacity-3\"><FontAwesomeIcon icon={['far', 'star']}/></span>}\r\n                                                   fullSymbol={<span className=\"text-warning mr-1 font-size-xl\"><FontAwesomeIcon icon={['fas', 'star']}/></span>}\r\n                                           />\r\n                                       </div>\r\n                                       <div className=\"font-size-sm text-black-50 pb-3\">\r\n                                           All components from the General dashboard template can be used in the individual applications pages, without modifications.\r\n                                       </div>\r\n                                       <div className=\"font-size-sm\">\r\n                                           <div className=\"py-2\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Color:\r\n                                               </span>\r\n                                               Black\r\n                                           </div>\r\n                                           <div className=\"py-1\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Operating System:\r\n                                               </span>\r\n                                               MacOS\r\n                                           </div>\r\n                                           <div className=\"py-1\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Version:\r\n                                               </span>\r\n                                               Gen 5\r\n                                           </div>\r\n                                           <div className=\"pt-1\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Processor:\r\n                                               </span>\r\n                                               i5 9700k\r\n                                           </div>\r\n                                       </div>\r\n                                   </div>\r\n                               </Col>\r\n                               <Col lg=\"3\" className=\"d-flex align-items-center justify-content-center\">\r\n                                   <div className=\"px-xl-3\">\r\n                                       <div className=\"font-weight-bold font-size-xxl\">\r\n                                           $ 399,34\r\n                                       </div>\r\n                                       <div className=\"font-size-sm\">\r\n                                           <div className=\"py-2\">\r\n                                               <span className=\"text-black-50 pr-2\">\r\n                                                   Stock:\r\n                                               </span>\r\n                                               <b>21</b> pcs.\r\n                                           </div>\r\n                                       </div>\r\n                                       <div className=\"pt-3\">\r\n                                           <Button size=\"sm\" color=\"first\">\r\n                                               Add to cart\r\n                                           </Button>\r\n                                       </div>\r\n                                       <div className=\"pt-3\">\r\n                                           <Button size=\"sm\" color=\"danger\">\r\n                                               <span className=\"btn-wrapper--icon\">\r\n                                                    <FontAwesomeIcon icon={['far', 'trash-alt']} />\r\n                                               </span>\r\n                                           </Button>\r\n                                       </div>\r\n                                   </div>\r\n                               </Col>\r\n                           </Row>\r\n                       </Card>\r\n                       <div className=\"d-flex align-items-center justify-content-center flex-wrap\">\r\n                           <Pagination size=\"lg\" className=\"pagination-icons\">\r\n                               <PaginationItem disabled>\r\n                                   <PaginationLink first href=\"#/\" onClick={e => e.preventDefault()}>\r\n                                       <FontAwesomeIcon icon={['fas', 'angle-double-left']}/>\r\n                                   </PaginationLink>\r\n                               </PaginationItem>\r\n                               <PaginationItem disabled>\r\n                                   <PaginationLink previous href=\"#/\" onClick={e => e.preventDefault()}>\r\n                                       <FontAwesomeIcon icon={['fas', 'chevron-left']}/>\r\n                                   </PaginationLink>\r\n                               </PaginationItem>\r\n                               <PaginationItem active>\r\n                                   <PaginationLink href=\"#/\" onClick={e => e.preventDefault()}>\r\n                                       1\r\n                                   </PaginationLink>\r\n                               </PaginationItem>\r\n                               <PaginationItem>\r\n                                   <PaginationLink href=\"#/\" onClick={e => e.preventDefault()}>\r\n                                       2\r\n                                   </PaginationLink>\r\n                               </PaginationItem>\r\n                               <PaginationItem>\r\n                                   <PaginationLink href=\"#/\" onClick={e => e.preventDefault()}>\r\n                                       3\r\n                                   </PaginationLink>\r\n                               </PaginationItem>\r\n                               <PaginationItem>\r\n                                   <PaginationLink next href=\"#/\" onClick={e => e.preventDefault()}>\r\n                                       <FontAwesomeIcon icon={['fas', 'chevron-right']}/>\r\n                                   </PaginationLink>\r\n                               </PaginationItem>\r\n                               <PaginationItem>\r\n                                   <PaginationLink last href=\"#/\" onClick={e => e.preventDefault()}>\r\n                                       <FontAwesomeIcon icon={['fas', 'angle-double-right']}/>\r\n                                   </PaginationLink>\r\n                               </PaginationItem>\r\n                           </Pagination>\r\n                       </div>\r\n                   </Col>\r\n               </Row>\r\n\r\n            </>\r\n        );\r\n    }\r\n",["350","351"],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\Logout.js",["352","353"],"import React, { Component,Fragment } from 'react'\r\nimport {logout} from '../../action/authActions';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignOutAlt, faUserEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Logout extends Component {\r\n    static propTypes={\r\n        logout:PropTypes.func.isRequired\r\n    };\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"dropdown-list-item-logout\" onClick={this.props.logout}>\r\n                            <FontAwesomeIcon style={{marginRight:'.5rem'}} icon={faSignOutAlt}/><h7>Logout</h7>    \r\n                            </div> \r\n                {/* <NavLink style={{color:'red'}} onClick={this.props.logout} href=\"#\">Logout</NavLink> */}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,\r\n    {logout}\r\n    )(Logout);","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\LoginModal.js",["354","355","356"],"import React,{Component} from 'react';\r\nimport {Col, Alert,NavLink, Button, Modal,Form,FormGroup,Label, Input, InputGroup} from 'react-bootstrap';\r\n\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {login} from '../../action/authActions';\r\nimport {clearErrors}  from '../../action/errorActions';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport back from '../../assets/images/back.jpg';\r\n\r\n// import e from 'express';\r\nconst schema = yup.object({\r\n    email: yup.string().required(),\r\n    password: yup.string().required(),\r\n})\r\n\r\nclass LoginModal extends Component{\r\n    state={\r\n        modal:false,   // modal for adding item is false initially\r\n        msg:null\r\n    };\r\n    componentDidUpdate(prevProps){\r\n        const {error,isAuthenticated}=this.props;\r\n        if(error!==prevProps.error){\r\n            if(error.id===\"LOGIN_FAIL\"){\r\n                this.setState({msg:error.msg.msg});\r\n            }\r\n            else{\r\n                this.setState({msg:null});\r\n            }\r\n        }\r\n        // if authenticated close Modal\r\n        if(this.state.modal){\r\n            \r\n            if(isAuthenticated){\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n    static propTypes={\r\n        isAuthenticated:PropTypes.bool,\r\n        error:PropTypes.object.isRequired,\r\n        login:PropTypes.func.isRequired,\r\n        clearErrors:PropTypes.func.isRequired\r\n    }\r\n\r\n    toggle=()=>{  \r\n        // clear the error\r\n        this.props.clearErrors();\r\n        // to toggle the modal \r\n        console.log(this.state.modal)\r\n        this.setState({\r\n            modal:!this.state.modal\r\n        })\r\n    }\r\nrender(){\r\n    return(\r\n        <div>\r\n            <NavLink onClick={this.toggle} href=\"#\">\r\n                Login\r\n            </NavLink>\r\n\r\n            <Modal show={this.state.modal} onHide={this.toggle} >\r\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Login</b></Modal.Header>\r\n                <Modal.Body>\r\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n\r\n\r\n\r\n\r\n\r\n    <Formik\r\n      validationSchema={schema}\r\n     \r\n\r\n      initialValues={{\r\n        email:'',\r\n        password:'',\r\n\r\n      }}\r\n      onSubmit={(values)=>{ console.log(\"onSUbmit\");\r\n      const {email,password}=values;\r\n      console.log(\"On Submit Called\",email);\r\n      const user={\r\n          email,password\r\n      }\r\n      this.props.login(user);\r\n    }\r\n    }\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n         }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          \r\n          \r\n          <Form.Row>\r\n          <Form.Group as={Col} md=\"12\" controlId=\"validationFormikemail\">\r\n              <Form.Label>Email ID</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Email ID\"\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.email}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormikPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.password}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.password}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n          {/* <Form.Group>\r\n            <Form.Check\r\n              required\r\n              name=\"terms\"\r\n              label=\"Agree to terms and conditions\"\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.terms}\r\n              feedback={errors.terms}\r\n              id=\"validationFormik0\"\r\n            />\r\n          </Form.Group> */}\r\n          <Button type=\"submit\">Login</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n}\r\nconst mapStateToProps= state=>{\r\n    return({\r\n        isAuthenticated:state.auth.isAuthenticated,\r\n        error:state.error\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{login,clearErrors})(LoginModal);","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\RegisterModal.js",["357","358"],"import React,{Component} from 'react';\r\nimport { Button,InputGroup,Col,Alert,NavLink, Modal,Form } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {register,login,TokenExpireExtend,loginModalOpen} from '../../action/authActions';\r\nimport {clearErrors}  from '../../action/errorActions';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport back from '../../assets/images/back.jpg';\r\n\r\n\r\nconst schemaLogin = yup.object({\r\n    email: yup.string().email('Invalid email').required(),\r\n    password: yup.string().min(0, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\r\n})\r\nconst schemaRegister = yup.object({\r\n    name:yup.string().min(3, 'Name must be at least 3 characters').max(24, 'Password can be maximum 20 characters').required(),   \r\n    email: yup.string().email('Invalid email').required(),\r\n    password: yup.string().min(6, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\r\n})\r\n\r\n\r\n\r\nclass RegisterModal extends Component{\r\n    state={\r\n        imageURL:\"\",\r\n        signIn:false,\r\n        remember:false,\r\n        modal:this.props.isModalOpen,   // modal for adding item is false initially\r\n        msg:null\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps){\r\n        const {error,isAuthenticated}=this.props;\r\n        if(error!==prevProps.error){\r\n            if(error.id===\"REGISTER_FAIL\"){\r\n                this.setState({msg:error.msg.msg});\r\n            }\r\n            else if(error.id===\"LOGIN_FAIL\"){\r\n                this.setState({msg:error.msg.msg});\r\n            }\r\n            else{\r\n                this.setState({msg:null});\r\n            }\r\n        }\r\n        // if authenticated close Modal\r\n        if(this.state.modal){\r\n            \r\n            if(isAuthenticated){\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n    static propTypes={\r\n        isAuthenticated:PropTypes.bool,\r\n        error:PropTypes.object.isRequired,\r\n        register:PropTypes.func.isRequired,\r\n        clearErrors:PropTypes.func.isRequired\r\n    }\r\n\r\n    toggle=()=>{  \r\n        // clear the error\r\n        this.props.clearErrors();\r\n        // to toggle the modal \r\n\r\n        this.setState({\r\n            modal:!this.state.modal\r\n        })\r\n        // this.props.loginModalOpen(this.state.modal)\r\n    }\r\n\r\n    handleCheckboxChange=(e)=>{\r\n        e.preventDefault();\r\n        this.setState((prevState)=>{\r\n            return {remember:!prevState.remember}\r\n        })\r\n        \r\n    }\r\n\r\n    handleSignIn=()=>{\r\n        console.log(\"Sign in  Toggle Called\",this.state.signIn);\r\n        this.props.clearErrors();\r\n        this.setState((prevState)=>{\r\n            return {signIn:!prevState.signIn}\r\n        })\r\n    }\r\n     encodeImageFileAsURL=()=> {\r\n        console.log(\"image uploading func. called\");\r\n        var filesSelected = document.getElementById(\"inputFileToLoad\").files;\r\n        if (filesSelected.length > 0) {\r\n          var fileToLoad = filesSelected[0];\r\n    \r\n          var fileReader = new FileReader();\r\n    \r\n          fileReader.onload = (fileLoadedEvent)=> {\r\n            var srcData = fileLoadedEvent.target.result; // <--- data: base64\r\n    \r\n            var newImage = document.createElement('img');\r\n            newImage.src = srcData;\r\n            this.setState({imageURL:newImage.src});\r\n            // document.getElementById(\"imgTest\").innerHTML = newImage.outerHTML;\r\n            // alert(\"Converted Base64 version is \" + document.getElementById(\"imgTest\").innerHTML);\r\n            // console.log(\"Converted Base64 version is \" + this.state.imageURL);\r\n           \r\n          }\r\n          fileReader.readAsDataURL(fileToLoad);\r\n        }\r\n        // return newImage.src;\r\n      }\r\n\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n            <NavLink onClick={this.toggle} href=\"#\">\r\n               <Button style={{paddingLeft:' 1.5rem',paddingRight:'1.5rem'}}><b> Register</b></Button>\r\n            </NavLink>\r\n\r\n            <Modal show={this.state.modal} onHide={this.toggle} >\r\n            {this.state.signIn?           <>\r\n            {/* <Modal.Header toggle={this.toggle}>Register</Modal.Header> */}\r\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Register</b></Modal.Header>\r\n                <Modal.Body>\r\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n\r\n    <Formik\r\n    // validator={() => ({})}\r\n      validationSchema={schemaRegister}\r\n      initialValues={{\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n\r\n      }}\r\n      onSubmit={(values)=>{ \r\n        this.encodeImageFileAsURL();\r\n        const imageURL=this.state.imageURL;\r\n        console.log(\"Image URL\",imageURL);\r\n        const {name,email,password}=values;\r\n        let img=this.state.imageURL;\r\n        const newUser={\r\n            name,email,password,img\r\n        }\r\n        this.props.register(newUser);\r\n    }\r\n    }\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n         }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          \r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik01\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.name}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.name}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n          <Form.Row>\r\n          <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\r\n              <Form.Label>Email ID</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Email ID\"\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.email}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.password}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.password}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"12\">\r\n                <div className=\"mb-3\">\r\n                    <Form.File id=\"formcheck-api-regular\">\r\n                    <Form.File.Label>Profile Image</Form.File.Label>\r\n                    <input id=\"inputFileToLoad\"  type=\"file\" onChange={this.encodeImageFileAsURL} />\r\n                    </Form.File>\r\n                </div>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n          <Button type=\"submit\">Register</Button>\r\n          <input defaultChecked={this.state.remember} style={{marginLeft:'1rem',marginTop:'.5rem'}} type=\"checkbox\" onChange={this.handleCheckboxChange}/><span>  Remember me!</span>\r\n                            <div style={{}} className=\"forgot-password text-right\">\r\n                                Already registered <span onClick={this.handleSignIn} ><a href=\"#\"><b>Sign in?</b></a></span>\r\n                            </div>\r\n                            <div id=\"imgTest\"></div>\r\n                        </Form>\r\n                        \r\n                    )}\r\n                    </Formik>\r\n                </Modal.Body>            </>:\r\n                <>\r\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Login</b></Modal.Header>\r\n                    <Modal.Body>\r\n                      {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n                       \r\n                       \r\n                 <Formik\r\n                        validationSchema={schemaLogin}\r\n                        initialValues={{\r\n                            email:'',\r\n                            password:'',\r\n\r\n                        }}\r\n                        onSubmit={(values)=>{ \r\n                            console.log(\"onSUbmit\");\r\n                        const {email,password}=values;\r\n                        console.log(\"On Submit Called\",email);\r\n                        const user={\r\n                            email,password\r\n                        }\r\n                        this.props.login(user);\r\n                        }\r\n                        }\r\n                        >\r\n                        {({\r\n                            handleSubmit,\r\n                            handleChange,\r\n                            values,\r\n                            errors,\r\n                            touched\r\n                            }) => (\r\n                            <Form noValidate onSubmit={handleSubmit}>\r\n                            \r\n                            \r\n                            <Form.Row>\r\n                            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\r\n                                <Form.Label>Email ID</Form.Label>\r\n                                <InputGroup>\r\n                                    <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email ID\"\r\n                                    aria-describedby=\"inputGroupPrepend\"\r\n                                    name=\"email\"\r\n                                    value={values.email}\r\n                                    onChange={handleChange}\r\n                                    isInvalid={!!errors.email}\r\n                                    />\r\n                                     <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                    {touched.email && errors.email}\r\n                                    </Form.Control.Feedback>\r\n                                   \r\n                                </InputGroup>\r\n                                </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                \r\n                                <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    value={values.password}\r\n                                    onChange={handleChange}\r\n                                    isInvalid={!!errors.password}\r\n                                />\r\n                                 <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {touched.password && errors.password}\r\n                                </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                            </Form.Row>\r\n                            {/* <Form.Group>\r\n                                <Form.Check\r\n                                required\r\n                                name=\"terms\"\r\n                                label=\"Agree to terms and conditions\"\r\n                                onChange={handleChange}\r\n                                isInvalid={!!errors.terms}\r\n                                feedback={errors.terms}\r\n                                id=\"validationFormik0\"\r\n                                />\r\n                            </Form.Group> */}\r\n                            <Button type=\"submit\">Login</Button>\r\n                            <input defaultChecked={this.state.remember} style={{marginLeft:'1rem',marginTop:'.5rem'}} type=\"checkbox\" onChange={this.handleCheckboxChange}/><span>  Remember me!</span>\r\n                                                    <div style={{marginTop:'1rem',}} className=\"forgot-password text-right\">\r\n                                                    Don't have an account?  <span onClick={this.handleSignIn} ><a href=\"#\"><b>Create an Account</b></a></span>\r\n                                    </div> \r\n                            </Form>\r\n                        )}\r\n                        </Formik>\r\n                </Modal.Body>\r\n            </>\r\n            \r\n }\r\n            \r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n}\r\nconst mapStateToProps= state=>{\r\n    return({\r\n        isModalOpen:state.auth.isModalOpen,\r\n        isAuthenticated:state.auth.isAuthenticated,\r\n        rememberMe:state.auth.rememberMe,\r\n        error:state.error\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{loginModalOpen,login,register,clearErrors,TokenExpireExtend})(RegisterModal);","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Body.js",[],["359","360"],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\action\\authActions.js",["361","362"],"import axios from 'axios';\r\nimport { returnErrors} from './errorActions';\r\n\r\nimport { BLOCK,FREE_BLOCK,UPDATE_FAIL, UPDATE_SUCCESS, USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT_SUCCESS, REGISTER_FAIL, REGISTER_SUCCESS, EXPIRE_EXTEND } from './types';\r\n\r\n// check token & load user\r\nexport const loadUser= ()=> (dispatch,getState)=>{\r\n    // User loading\r\n    dispatch({type:USER_LOADING});\r\n    // get token from localstorage\r\n    const token=getState().auth.token;\r\n    console.log(\"Token from load User\",token);\r\n \r\n    // Header\r\nconst config={\r\n    headers:{\r\n        \"Content-Type\":\"application/json\"\r\n    }\r\n}\r\n// if token , add to headers\r\nif(token){\r\n    config.headers['x-auth-token']=token;\r\n\r\n    axios.get(\"/auth/user\",config)\r\n    .then(res=> dispatch({\r\n        type:USER_LOADED,\r\n        payload:res.data\r\n        \r\n    }))\r\n    .catch(err=>{\r\n        console.log(err);\r\n        dispatch(returnErrors(err.response.data, err.response.status));\r\n        dispatch({\r\n            type:AUTH_ERROR\r\n        });\r\n    }) }\r\n}\r\n\r\nexport const isBlockedF=(isBlocked)=>dispatch=>{\r\n    const type=isBlocked?\"BLOCK\":\"FREE_BLOCK\";\r\n    dispatch({\r\n        type:type,\r\n        payload:isBlocked\r\n    })\r\n}\r\n\r\nexport const TokenExpireExtend=({rememberMe})=>dispatch=>{\r\n    // Headers\r\n    dispatch({\r\n        type:EXPIRE_EXTEND,\r\n        payload:rememberMe\r\n    })\r\n   \r\n    }\r\n\r\n\r\n\r\nexport const loginModalOpen=(isOpen)=>dispatch=>{\r\n    const type=isOpen?\"LOGIN_MODAL_OPEN\":\"LOGIN_MODAL_CLOSE\";\r\n    dispatch({\r\n        type:type,\r\n        payload:isOpen})\r\n}\r\n\r\n\r\n// Login User\r\nexport const login=({email,password})=>dispatch=>{\r\n    // Headers\r\n    const config={\r\n        headers:{'Content-Type':'application/json'}\r\n    }\r\n    // Request body\r\n\r\n    const body=JSON.stringify({email,password});\r\n    console.log(body);\r\n\r\n    axios.post(\"/auth/login\",body,config)\r\n    .then(res=> dispatch({\r\n        type:LOGIN_SUCCESS,\r\n        payload:res.data\r\n    }))\r\n    .catch(err=>{\r\n        console.log(\"catch block error\")\r\n        dispatch(returnErrors(err.response.data, err.response.status,\"LOGIN_FAIL\"));\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        });\r\n    })\r\n\r\n}\r\n\r\n\r\n// Register User\r\n\r\nexport const register=({fname,lname,email,password,img,city,state,postal,country,ip})=>dispatch=>{\r\n    // Headers\r\n    const config={\r\n        headers:{'Content-Type':'application/json'}\r\n    }\r\n    // Request body\r\n\r\n    const body=JSON.stringify({fname,lname,email,password,img,city,state,postal,country,ip});\r\n    console.log(body);\r\n\r\n    axios.post(\"/auth/register\",body,config)\r\n    .then(res=> dispatch({\r\n        type:REGISTER_SUCCESS,\r\n        payload:res.data\r\n    }))\r\n    .catch(err=>{\r\n        console.log(\"catch block error\")\r\n        dispatch(returnErrors(err.response.data, err.response.status,\"REGISTER_FAIL\"));\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        });\r\n    })\r\n\r\n}\r\n\r\n\r\nexport const update=({id,fname,lname,email,password,img,city,state,postal,country,ip})=>(dispatch,getState)=>{\r\n    // Headers\r\n    const config={\r\n        headers:{'Content-Type':'application/json'}\r\n    }\r\n    const token=getState().auth.token;\r\n    if(token){\r\n        config.headers['x-auth-token']=token;\r\n    }\r\n    // Request body\r\n\r\n    const body=JSON.stringify({id,fname,lname,email,password,img,city,state,postal,country,ip});\r\n    console.log(body);\r\n    axios.post(\"/auth/update\",body,config)\r\n    .then(res=> dispatch({\r\n        type:UPDATE_SUCCESS,\r\n        payload:res.data\r\n    }))\r\n    .catch(err=>{\r\n        console.log(\"catch block error-- \")\r\n        dispatch(returnErrors(err.response.data, err.response.status,\"UPDATE_FAIL\"));\r\n        dispatch({\r\n            type:UPDATE_FAIL\r\n        });\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n// Logout uSER\r\nexport const logout=()=>{\r\n    return{\r\n        type:LOGOUT_SUCCESS\r\n    };\r\n};\r\n// export const tokenConfig=getState=>{\r\n//     const token=getState().auth.token;\r\n// }\r\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\action\\itemAction.js",["363","364","365"],"import  {DELETE_SELECTED_ITEM,UPDATE_ITEM,GET_ITEM,ADD_ITEM,DELETE_ITEM, ITEMS_LOAD} from './types';\r\nimport axios from 'axios';\r\nimport {tokenConfig} from './authActions';\r\nimport {returnErrors} from './errorActions';\r\n\r\n\r\nexport const getItems=()=> dispatch =>{\r\n    dispatch(setItemsLoading());\r\n\r\n    axios.get('/products').then(res=>\r\n    dispatch({\r\n        type:GET_ITEM,\r\n        payload:res.data\r\n    }))\r\n    .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));   \r\n};\r\nexport const addItem=item=> dispatch =>{\r\n    axios.post('/add_product',item)\r\n    .then(res=>dispatch({\r\n        type:ADD_ITEM,\r\n        payload:res.data\r\n    })).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\r\n};\r\n\r\nexport const deleteItem=id=>dispatch=>{\r\n    console.log(\"Id of Item\",id);\r\n    const config={\r\n        headers:{'Content-Type':'application/json'}\r\n    }\r\n    const body=JSON.stringify({id});\r\n    console.log(\"Action Product Id\",id);\r\n    axios.post('/delete_product',body,config).then(\r\n        res=>dispatch({\r\n            type:DELETE_ITEM,\r\n            payload:id\r\n        })\r\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\r\n}\r\n\r\n\r\nexport const deleteSelectedItem=ids=>dispatch=>{\r\n    console.log(\"Id of Item\",ids);\r\n    const config={\r\n        headers:{'Content-Type':'application/json'}\r\n    }\r\n    var body=JSON.stringify({ids});\r\n    var {ids}=body\r\n    console.log(\"Action Product Id\",typeof ids);\r\n    console.log(\"Body\",body,body[0],ids);\r\n    axios.post('/delete_selected_product',body,config).then(\r\n        res=>dispatch({\r\n            type:DELETE_SELECTED_ITEM,\r\n            payload:ids\r\n        })\r\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\r\n}\r\n\r\nexport const rankItem=(id)=>dispatch=>{\r\n    const config={\r\n        headers:{'Content-Type':'application/json'}\r\n    }\r\n    const body=JSON.stringify({id});\r\n    console.log(\"Action Product Id\",id);\r\n    axios.post('/rank_product',body,config).then(\r\n        res=>dispatch({\r\n            type:UPDATE_ITEM,\r\n            payload:res.data\r\n        })\r\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\r\n}\r\n\r\nexport const updateItem=({id,name,manufacturer,description,stock,price,rating,user})=>dispatch=>{\r\n    dispatch(setItemsLoading());\r\n    console.log(\"Id of Item\",id,user);\r\n    const config={\r\n        headers:{'Content-Type':'application/json'}\r\n    }\r\n    const body=JSON.stringify({id,name,description,manufacturer,price,stock,rating,user});\r\n    console.log(\"Action Product Id\",id);\r\n    axios.post('/update_product',body,config).then(\r\n        res=>dispatch({\r\n            type:UPDATE_ITEM,\r\n            payload:res.data\r\n        })\r\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\r\n    // Wait for 1/2 Seconds \r\n    setTimeout(() => {\r\n        dispatch(getItems());\r\n    }, 500);\r\n}\r\n\r\n\r\nexport const setItemsLoading=()=>{\r\n    return{\r\n        type:ITEMS_LOAD\r\n    };\r\n}","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Navbars\\AdminNavbar.js",["366","367","368","369"],"import React, { Component } from \"react\";\nimport { Navbar,Nav,Dropdown, NavLink } from \"react-bootstrap\";\nimport avatar from '../../assets/images/avatar.png'\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\nimport './AdminNavbar.css';\nimport LoginModal from \"../auth/LoginModal\";\nimport RegisterModal from \"../auth/RegisterModal\";\nimport Logout from \"../auth/Logout\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog, faDatabase, faShoppingBag, faUserEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      sidebarExists: false\n    };\n  }\n  mobileSidebarToggle(e) {\n    if (this.state.sidebarExists === false) {\n      this.setState({\n        sidebarExists: true\n      });\n    }\n    e.preventDefault();\n    console.log(\"classlist1\",document.documentElement.classList);\n\n    document.documentElement.classList.toggle(\"nav-open\");\n    console.log(\"classlist2\",document.documentElement.classList);\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function() {\n      console.log(\"Body CLicked\");\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n    console.log(\"Body:\",document.body);\n  }\n  \n  render() {\n    const {isAuthenticated, user}=this.props.auth;\n    const authLinks=(\n      < >\n      \n          <Nav.Item>\n              \n          <Dropdown className=\"user-dropdown\" style={{padding:'0rem !important'}} isOpen={this.state.dropdownOpen} toggle={this.toggled}>\n              \n              <Dropdown.Toggle id=\"dropdown-basic\" caret>\n              {user? <div className=\"user-avatar\">\n              <img className=\"avatar\" style={{width:'2rem',borderRadius:'50%'}} src={avatar} />\n              <div class=\"status-overlay\">\n                  <i class=\"bowtie-icon bowtie-status-success success\"></i>\n              </div>\n              </div>:'X'}\n              <div>\n                  <span style={{color:'red',fontWeight:400,fontSize:'80%'}}>Shop Admin</span>\n                  <div style={{color:'#3b3e66'}}>{user? user.fname+\" \"+user.lname:'Hello Guest'}</div>\n              </div>\n             \n              \n              </Dropdown.Toggle>\n              <Dropdown.Menu bottom>\n                      <Dropdown.Item header>\n                      {user? <div className=\"user-avatar\">\n              <img className=\"avatar\" style={{width:'2rem',borderRadius:'50%'}} src={avatar} />\n              {/* <div class=\"status-overlay\">\n                  <i class=\"bowtie-icon bowtie-status-success success\"></i>\n              </div> */}\n              </div>:'X'}\n              <div>\n                  <span style={{color:'red',fontWeight:400,fontSize:'80%'}}>Shop Admin</span>\n                  <div style={{color:'#3b3e66'}}>{user? user.email:'Hello Guest'}</div>\n              </div>\n                      </Dropdown.Item><hr/>\n                       <Dropdown.Item className=\"dropdown-list-nav\"> <Nav.Item  >\n                      <div className=\"dropdown-list-item\">\n                      <FontAwesomeIcon style={{marginRight:'.5rem'}} icon={faCog}/><h7>Settings</h7>    \n                      </div>    \n              </Nav.Item></Dropdown.Item>\n                       <Dropdown.Item className=\"dropdown-list-nav\" href=\"/admin/user\"> <Nav.Item >\n                         \n                      <div className=\"dropdown-list-item\">\n                      <FontAwesomeIcon style={{marginRight:'.5rem'}} icon={faUserEdit}/><h7>Profile</h7>    \n                      </div>     \n              </Nav.Item></Dropdown.Item>\n              <Dropdown.Item> <Nav.Item ><Logout/></Nav.Item></Dropdown.Item>\n             \n              </Dropdown.Menu>\n             \n          </Dropdown>\n\n          </Nav.Item>    \n      </>\n  );\n  const guestLinks=(\n      < >\n          <Nav.Item>\n              <RegisterModal/>\n          </Nav.Item>\n          <Nav.Item>\n              <LoginModal/>\n          </Nav.Item>\n      </ >\n  );\n  const icon=()=>{\n    if(this.props.brandText===\"User Profile\"){\n      return faUserEdit;\n    }\n    else if(this.props.brandText===\"Dashboard\"){\n      return faDatabase;\n    }\n    else if(this.props.brandText===\"Products\"){\n      return faShoppingBag;\n    }\n  }\n    return (\n      <Navbar bg=\"dark\" expand=\"lg\" className=\"navbar\" >\n          <Navbar.Brand>\n            <div className=\"fontIcon-wrapper\"><FontAwesomeIcon className=\"NavIcon-brand\" icon={icon()}/></div>\n            <a href=\"#\">{this.props.brandText}</a>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"  onClick={this.mobileSidebarToggle} />\n        <Navbar.Collapse>\n          {/* <AdminNavbarLinks /> */}\n          <NavLink className=\"ml-auto\"  href='/'><b>Home</b></NavLink>\n                        {/* <NavLink  href='/admin/dashboard'><b>Dashboard</b></NavLink> */}\n                        <NavLink  href='/productsGrid'><b>Products</b></NavLink>\n          <Nav  navbar>\n                        {isAuthenticated?authLinks:guestLinks}    \n                        </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps=state=>({\n  auth:state.auth\n})\nexport default connect(mapStateToProps,null)(Header);\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Variables\\Variables.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Home\\Home1.js",["370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386"],"import React, { Component } from \"react\";\r\nimport ChartistGraph from \"react-chartist\";\r\nimport { Container, Row, Col,Button,Media,Form,Tooltip } from \"react-bootstrap\";\r\n// import  Card  from \"../Card/Card.js\";\r\nimport './Home1.css'\r\nimport {Card} from 'react-bootstrap';   \r\nimport  StatsCard  from \"../StatsCard/StatsCard.js\";\r\nimport  Tasks  from \"../Tasks/Tasks.js\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes,faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport banner from '../../assets/images/Banner.png'\r\nimport back from '../../assets/images/back.jpg'\r\nimport AppNavbar from \"../AppNavbar\";\r\nimport ApexChart from './ApexChart';\r\n\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport TrendingProductList from \"../ProductsList/TrendingProductList\";\r\nconst styles = {\r\n    mediaItem: {\r\n      border: \"1px solid gray\",\r\n      backgroundColor: \"#f5f5f5\",\r\n \r\n    },\r\n    mediaItemButtons: {\r\n      paddingTop: \"5px\",\r\n      paddingBottom: \"5px\"\r\n    }\r\n  };\r\n\r\nclass Home1 extends Component {\r\n  createLegend(json) {\r\n    var legend = [];\r\n    for (var i = 0; i < json[\"names\"].length; i++) {\r\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\r\n      legend.push(<i className={type} key={i} />);\r\n      legend.push(\" \");\r\n      legend.push(json[\"names\"][i]);\r\n    }\r\n    return legend;\r\n  }\r\n  render() {\r\n    return (\r\n<>\r\n<div className='App1' >\r\n\r\n        <Container>\r\n          <Row>\r\n          \r\n           \r\n            \r\n            <Col md={6}>\r\n            \r\n             <TrendingProductList/>\r\n             \r\n            </Col>\r\n            <Col md={6} >\r\n                <Card className=\"intro_card\">\r\n                    <div className=\"text-black mt-3 card-content\">\r\n                        <h1 className=\" mb-3 font-weight-bold\">A magical and revolutionary device at an unbelievable price</h1>\r\n                        <p>Fully coded, perfectly responsive on all screen sizes. Start working on your project today!</p><p className=\"font-size-lg text-black-50\">Use this individual application for a head start in building a product that is related to the commerce niche. This template comes with pre-built pages for orders, customers and various sales releated analytics.</p>\r\n                        <div className=\"divider border-2 border-dark my-4 border-light opacity-2 rounded-circle w-25\"></div>\r\n                            <div>\r\n                                <a className=\"d-block d-sm-inline-block btn btn-primary btn-lg\">\r\n                                <span className=\"btn-wrapper--icon\">\r\n                                </span><span className=\"btn-wrapper--label\"><NavLink style={{color:'white'}} to='/admin/dashboard'>Dashboard</NavLink></span></a>\r\n                                <a className=\"d-block d-sm-inline-block ml-0 mt-3 mt-sm-0 ml-sm-3 btn btn-outline-primary btn-lg\" href=\"#\"><span>Products Filters</span></a>\r\n                            </div>\r\n                        </div>\r\n                </Card>\r\n            </Col>\r\n          </Row>\r\n          </Container>\r\n          </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home1;\r\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Sidebar\\Sidebar.jsx",["387"],"import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks\";\n\nimport logo from \"../../assets/images/logo.jpg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Navbar } from \"react-bootstrap\";\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth\n    };\n  }\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  updateDimensions() {\n    this.setState({ width: window.innerWidth });\n  }\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n  render() {\n    const sidebarBackground = {\n      backgroundImage: \"url(\" + this.props.image + \")\"\n    };\n    return (\n      <div\n        id=\"sidebar\"\n        className=\"sidebar\"\n        data-color={this.props.color}\n        data-image={this.props.image}\n      >\n          {this.props.hasImage ? (\n            <div className=\"sidebar-background\" style={sidebarBackground} />\n          ) : (\n            null\n          )}\n         <Navbar.Brand href=\"/\"><div className=\"nav-brand1\"><img className=\"nav-logo1\" src={logo}/><div className=\"brand-text1\"><span>inventory</span><b>ShopperZ</b></div></div></Navbar.Brand>\n       \n        <div className=\"sidebar-wrapper\">\n          <ul className=\"nav\">\n            {this.state.width <= 991 ? <AdminNavbarLinks /> : null}\n            \n            {this.props.routes.map((prop, key) => {\n              if (!prop.redirect)\n                return (\n                  <li\n                    className={\n                      prop.upgrade\n                        ? \"active active-pro\"\n                        : this.activeRoute(prop.layout + prop.path)\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      style={{display:prop.display}}\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                    >\n                      <FontAwesomeIcon icon={prop.icon} />\n                      <p>{prop.name}</p>\n                    </NavLink>\n                  </li>\n                );\n              return null;\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Card\\Card.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\CustomCheckbox\\CustomCheckbox.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\CustomButton\\CustomButton.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\views\\UserProfile.js",["388","389"],"import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,InputGroup,Card, Spinner\r\n\r\n} from \"react-bootstrap\";\r\nimport {update,loadUser} from '../../action/authActions'\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport { FormInputs } from \"../../components/FormInputs/FormInputs.jsx\";\r\nimport { UserCard } from \"../../components/UserCard/UserCard.jsx\";\r\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\r\n\r\nimport avatar from '../../assets/images/avatar.png' //\"assets/img/faces/face-3.jpg\";\r\nimport { connect } from \"react-redux\";\r\nimport { Prompt } from \"react-router-dom\";\r\n\r\nconst schemaRegister = yup.object({\r\n  fname:yup.string().min(1, 'At least 1 characters').max(10, 'First Name can be maximum 10 characters').required(),   \r\n  lname:yup.string().min(1, 'At least 1 characters').max(10, 'Last Name can be maximum 10 characters').required(),   \r\n  city:yup.string().min(3, 'City must be at least 3 characters').max(24, 'City can be maximum 20 characters'),   \r\n  state:yup.string().min(3, 'State must be at least 3 characters').max(24, 'State can be maximum 20 characters'),   \r\n  country:yup.string().min(3, 'Country must be at least 3 characters').max(24, 'Country can be maximum 20 characters'),   \r\n  postal:yup.number().integer(),   \r\n  email: yup.string().email('Invalid email').required(),\r\n  // password: yup.string().min(6, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required(),\r\n  // mobile_number:yup.number().max(9999999999,'Invalid Number').required()//.matches(phoneRegExp,\"Number is Not Like Mobile number\"),   \r\n})\r\n\r\nclass UserProfile extends Component {\r\n  // constructor\r\n  state={\r\n    imageURL:\"\",  \r\n    msg:null,\r\n    isBlocking:false\r\n};\r\n\r\n\r\n\r\nencodeImageFileAsURL=()=> {\r\n  console.log(\"image uploading func. called\");\r\n  var filesSelected = document.getElementById(\"inputFileToLoad\").files;\r\n  if (filesSelected.length > 0) {\r\n    var fileToLoad = filesSelected[0];\r\n\r\n    var fileReader = new FileReader();\r\n\r\n    fileReader.onload = (fileLoadedEvent)=> {\r\n      var srcData = fileLoadedEvent.target.result; // <--- data: base64\r\n\r\n      var newImage = document.createElement('img');\r\n      newImage.src = srcData;\r\n      this.setState({imageURL:newImage.src});\r\n      // document.getElementById(\"imgTest\").innerHTML = newImage.outerHTML;\r\n      // alert(\"Converted Base64 version is \" + document.getElementById(\"imgTest\").innerHTML);\r\n      // console.log(\"Converted Base64 version is \" + this.state.imageURL);\r\n     \r\n    }\r\n    fileReader.readAsDataURL(fileToLoad);\r\n  }\r\n  // return newImage.src;\r\n}\r\n  render() {\r\n    var isLoaded=this.props.isLoaded;\r\n    var isLoading=this.props.isLoading;\r\n    var id=this.props.user?this.props.user._id:null;\r\n    var email=this.props.user?this.props.user.email:\"XYZ@gmail.com\";\r\n    var fname=this.props.user?this.props.user.fname:\"Guest\";\r\n    var lname=this.props.user?this.props.user.lname:\"Surname\";\r\n    var city=this.props.user?this.props.user.city:\"Not Given\";\r\n    var state=this.props.user?this.props.user.state:\"Not Given\";\r\n    var postal=this.props.user?this.props.user.postal:\"Not Given\";\r\n    var country=this.props.user?this.props.user.country:\"Not Given\";\r\n    var img=this.props.user?this.props.user.img:avatar;\r\n    var date=this.props.user?this.props.user.date:\"X:X:X:X\";\r\n    var ip=this.props.user?this.props.user.ip:\"X:X:X:X\";\r\n    // console.log(\"user from UserProfile::\",this.props.user.email);\r\n    return (\r\n      <div className=\"content\">\r\n        <Container fluid>\r\n          <Prompt\r\n                when={this.state.isBlocking}\r\n                message={(location)=> `Are You Sure Want To Go To ${location.pathname}`}\r\n/> \r\n          <Row>\r\n            <Col md={8}>\r\n<Card style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\r\n  <Card.Header>\r\n    <p style={{fontSize:'1.5rem',fontWeight:'bold',color:'#3b44c1'}}>Edit User</p>\r\n  </Card.Header>\r\n  {isLoaded?\r\n  <Formik\r\n    \r\n      validationSchema={schemaRegister}\r\n      initialValues={{\r\n        fname:fname,\r\n        lname:lname,\r\n        email:email,\r\n        password:'',\r\n        city:city,\r\n        state:state,\r\n        postal:postal,\r\n        country:country,\r\n        ip:ip,\r\n        date:date\r\n        // mobile_number:''\r\n\r\n      }}\r\n      onSubmit={(values)=>{ \r\n        this.encodeImageFileAsURL();\r\n        const img=this.state.imageURL;\r\n        // console.log(\"Image URL\",imageURL);\r\n        const {fname,lname,email,password,city,state,postal,country,ip}=values;\r\n        const updatedUser={\r\n            id,fname,lname,email,password,img,city,state,postal,country,ip\r\n        }\r\n        this.props.update(updatedUser);\r\n        setTimeout(() => {\r\n          this.props.loadUser();\r\n          \r\n        }, 1500);\r\n    }\r\n    }\r\n    >\r\n       \r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n         }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          \r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\" style={{width:'92%',paddingLeft:'2rem'}}>\r\n           \r\n              <Form.Label>Company</Form.Label>\r\n              \r\n              <Form.Control\r\n              disabled\r\n                type=\"text\"\r\n                placeholder=\"Comnpany\"\r\n                name=\"company\"\r\n                value=\"ShopperZ Inc.\"\r\n              \r\n              />\r\n             \r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\" style={{width:'92%',paddingLeft:'2rem'}}>\r\n              <Form.Label>IP Address</Form.Label>\r\n              <Form.Control\r\n              disabled\r\n                type=\"text\"\r\n                placeholder=\"Last Name\"\r\n                name=\"ip\"\r\n                value={values.ip}\r\n              />\r\n              \r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\" style={{width:'92%',paddingLeft:'2rem'}}>\r\n              <Form.Label>Registered On</Form.Label>\r\n              \r\n                <Form.Control\r\n                disabled\r\n                  type=\"text\"\r\n                  placeholder=\"Email ID\"\r\n                 \r\n                  name=\"date\"\r\n                  value={values.date?values.date:'Unable To Fetch'}\r\n                  \r\n                />\r\n               \r\n              \r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\" style={{width:'92%',paddingLeft:'2rem'}}>\r\n           \r\n              <Form.Label>First Name</Form.Label>\r\n              \r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"First Name\"\r\n                name=\"fname\"\r\n                value={values.fname}\r\n                // onChangeCapture={(e)=>this.setState({isBlocking:e.target.value>0})}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.fname}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.fname}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\" style={{width:'92%',paddingLeft:'2rem'}}>\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Last Name\"\r\n                name=\"lname\"\r\n                value={values.lname}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0});handleChange(e)}}\r\n                isInvalid={!!errors.lname}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.lname}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\" style={{width:'92%',paddingLeft:'2rem'}}>\r\n              <Form.Label>Email ID</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                disabled\r\n                  type=\"text\"\r\n                  placeholder=\"Email ID\"\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                  isInvalid={!!errors.email}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n          <Form.Row>\r\n         \r\n            </Form.Row>\r\n  \r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\" style={{width:'92%',paddingLeft:'2rem'}}>\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                name=\"city\"\r\n                value={values.city?values.city:this.state.city}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.city}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.city}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\" style={{width:'92%',paddingLeft:'2rem'}}>\r\n              <Form.Label>State</Form.Label>\r\n              <Form.Control\r\n               disabled\r\n                type=\"text\"\r\n                placeholder=\"State\"\r\n                name=\"state\"\r\n                value={values.state?values.state:this.state.State}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.state}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.state}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\" style={{width:'92%',paddingLeft:'2rem'}}>\r\n              <Form.Label>Postal</Form.Label>\r\n              <Form.Control\r\n             \r\n                type=\"number\"\r\n                placeholder=\"Postal\"\r\n                name=\"postal\"\r\n                value={values.postal?values.postal:this.state.postal}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.postal}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.postal}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\" style={{width:'92%',paddingLeft:'2rem'}}>\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n               disabled\r\n                type=\"text\"\r\n                placeholder=\"Country\"\r\n                name=\"country\"\r\n                value={values.country?values.country:this.state.country}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.country}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.country}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            \r\n          </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"12\" style={{width:'92%',paddingLeft:'2rem'}}>\r\n                <div className=\"mb-3\">\r\n                    <Form.File id=\"formcheck-api-regular\">\r\n                    <Form.File.Label >Profile Image </Form.File.Label>\r\n                    <input id=\"inputFileToLoad\"  style={{marginLeft:'1rem'}} type=\"file\" onChange={this.encodeImageFileAsURL} />\r\n                    </Form.File>\r\n                </div>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n\r\n          {/* <Form.Row>\r\n          <Map\r\n                google={this.props.google}\r\n                center={{lat: 18.5204, lng: 73.8567}}\r\n                height='300px'\r\n                zoom={15}\r\n    />\r\n          </Form.Row> */}\r\n          {/* <Form.Row>\r\n         \r\n          </Form.Row> */}\r\n          {/* <Form.Row>\r\n         \r\n          </Form.Row> */}\r\n          <Form.Row  style={{margin:'0 1rem 1rem 1rem',width:'92%',paddingLeft:'2rem'}}>\r\n          <Button type=\"submit\">Update Your Account</Button>\r\n         \r\n          </Form.Row>\r\n\r\n\r\n                        </Form>\r\n                        \r\n                    )}\r\n                    </Formik>:<Spinner style={{width:'5rem',height:'5rem'}} animation=\"border\" variant=\"primary\" />}\r\n\r\n</Card>\r\n\r\n                        </Col>\r\n\r\n\r\n\r\n\r\n            <Col md={4}>\r\n              <UserCard\r\n                bgImage=\"https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400\"\r\n                avatar={img?img:avatar}\r\n                name={fname+\" \"+lname}\r\n                userName={email}\r\n                city={city}\r\n                country={country}\r\n                postal={postal}\r\n                state={state}\r\n                description={\r\n                  <span>\r\n                    City:{city}\r\n                    <br />\r\n                    State:{state}\r\n                    <br />\r\n                    Zip Code:{postal}\r\n                  </span>\r\n                }\r\n                socials={\r\n                  <div style={{display:'flex',justifyContent:'space-around',margin:'2rem'}}>\r\n                    <Button simple>\r\n                      <i className=\"fa fa-facebook-square\" />\r\n                    </Button>\r\n                    <Button simple>\r\n                      <i className=\"fa fa-twitter\" />\r\n                    </Button>\r\n                    <Button simple>\r\n                      <i className=\"fa fa-youtube-square\" />\r\n                    </Button>\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return {\r\n    user:state.auth.user,\r\n    isLoaded:state.auth.isLoaded,\r\n    isLoading:state.auth.isLoading,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{update,loadUser})(UserProfile);\r\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\AnimatedProgressProvider.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\EditModal.js",["390","391","392","393"],"import React,{Component} from 'react';\r\nimport { Alert,NavLink, Button, Modal, ModalHeader, ModalBody,Form,FormGroup,Label, Input, Collapse } from 'reactstrap';\r\n\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {update,loadUser} from '../../action/authActions';\r\n\r\nimport {clearErrors}  from '../../action/errorActions';\r\n\r\n// import e from 'express';\r\n\r\nclass EditModal extends Component{\r\n    \r\n    state={\r\n        modal:false,   // modal for adding item is false initially\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        msg:null,\r\n        isUpdate:false\r\n    };\r\n    componentDidMount(){\r\n        const {name,email}=this.props.user;\r\n        this.setState({name:name,email:email});\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        const {error,isUpdate}=this.props;\r\n        if(error!==prevProps.error){\r\n            if(error.id===\"UPDATE_FAIL\"){\r\n                this.setState({msg:error.msg.msg});\r\n            }\r\n            else{\r\n                this.setState({msg:null});\r\n            }\r\n        }\r\n        // if Update close Modal\r\n        if(this.state.modal){\r\n            \r\n            if(isUpdate){\r\n                this.toggle();\r\n                this.props.loadUser();\r\n            }\r\n        }\r\n        \r\n    }\r\n    static propTypes={\r\n        isUpdate:PropTypes.bool,\r\n        isAuthenticated:PropTypes.bool,\r\n        error:PropTypes.object.isRequired,\r\n        register:PropTypes.func.isRequired,\r\n        clearErrors:PropTypes.func.isRequired\r\n    }\r\n\r\n    toggle=()=>{  \r\n        // clear the error\r\n        this.props.clearErrors();\r\n        // to toggle the modal \r\n        console.log(\"from Toggle-> Modal Open:: \"+this.state.modal)\r\n        this.setState({\r\n            modal:!this.state.modal\r\n        })\r\n    }\r\n\r\n\r\n    onChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    // On Submit  method \r\n    onSubmit=e=>{\r\n        const {error,isUpdate}=this.props;\r\n        console.log(\"From Submit-> isUpdate:: \"+this.props.isUpdate)\r\n        e.preventDefault();\r\n        const id=this.props.user._id;\r\n        console.log(\"User Id Given for Update: \"+id)\r\n        const {name,email}=this.state;\r\n        const editUser={\r\n            id,name,email\r\n        }\r\n        this.props.update(editUser);\r\n\r\n        // this.props.addItem(newItem);\r\n   \r\n        \r\n    }\r\n\r\nrender(){\r\n    const {name,email}=this.props.user;\r\n    return(\r\n        <div>\r\n            <Button onClick={this.toggle} style={{}}>\r\n               Edit\r\n            </Button>\r\n\r\n            <Modal isOpen={this.state.modal}  >\r\n                <ModalHeader toggle={this.toggle}>Update</ModalHeader>\r\n                <ModalBody>\r\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Name</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                placeholder={name}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input \r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                placeholder={email}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            {/* <Label for=\"password\">Password</Label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={this.onChange}\r\n                            /> */}\r\n                            <Button color=\"dark\" style={{marginTop:'2rem'}} block>\r\n\r\n                            Update</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n}\r\nconst mapStateToProps= state=>{\r\n    return({\r\n        isUpdate:state.auth.isUpdate,\r\n        isAuthenticated:state.auth.isAuthenticated,\r\n        user:state.auth.user,\r\n        error:state.error\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{update,loadUser,clearErrors})(EditModal);","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\E2.js",["394","395"],"import React,{useState} from 'react';\r\nimport {Formik} from 'formik';\r\nimport {Form,Button,Col,Row,InputGroup,Modal,Accordion,AccordionCollapse,Media} from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\nimport { Input } from 'reactstrap';\r\n// const { Formik } = formik;\r\n\r\nconst styles = {\r\n    mediaItem: {\r\n      border: \"1px solid black\",\r\n      backgroundColor: \"#f5f5f5\",\r\n      paddingTop: \"5px\",\r\n      paddingBottom: \"5px\"\r\n    },\r\n    mediaItemButtons: {\r\n      paddingTop: \"5px\",\r\n      paddingBottom: \"5px\"\r\n    }\r\n  };\r\n  \r\nconst schema = Yup.object({\r\n  firstName: Yup.string().required(),\r\n  lastName: Yup.string().required(),\r\n  username: Yup.string().required(),\r\n  city: Yup.string().required(),\r\n  state: Yup.string().required(),\r\n  zip: Yup.string().required(),\r\n  terms: Yup.bool().required(),\r\n});\r\n\r\nfunction E2() {\r\n    const [show, setShow] = useState(false);\r\n    const [collapsed,setCollapsed]=useState(false);\r\n    // collapsed: false\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n\r\n<>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n       Edit\r\n      </Button>\r\n      <Accordion>\r\n        <Accordion.Toggle\r\n          as={Button}\r\n          variant=\"link\"\r\n          eventKey=\"0\"\r\n          onClick={() => setCollapsed(!collapsed)}\r\n        >\r\n          {collapsed === false ? \"See\" : \"Hide\"} item details{\" \"}\r\n          {collapsed === false ? \"+\" : \"-\"}\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"0\">\r\n          <>\r\n            <Media className={styles.mediaItem}>\r\n              <img\r\n                width={100}\r\n                height={100}\r\n                className=\"align-self-center mr-3\"\r\n                src=\"https://i5.walmartimages.com/asr/e73e1252-642c-4473-93ea-fd3b564a7027_1.3e81ea58fa3042452fe185129a4a865f.jpeg?odnWidth=undefined&odnHeight=undefined&odnBg=ffffff\"\r\n                alt=\"Generic placeholder\"\r\n              />\r\n              <Media.Body className={styles.mediaBody}>\r\n                <p>Dxracer Formula Gaming Chair (Black/Red)</p>\r\n                <Row>\r\n                  <Col xs={6}>\r\n                    <strong>$48.99</strong>\r\n                  </Col>\r\n                  <Col xs={6}>1 piece</Col>\r\n                </Row>\r\n\r\n                <Row style={styles.mediaItemButtons}>\r\n                  <Col xs={6}>\r\n                    <Button variant=\"primary\" size=\"sm\">\r\n                      Details\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xs={6}>\r\n                    <Button variant=\"danger\" size=\"sm\">\r\n                      Delete\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Media.Body>\r\n            </Media>\r\n            <Media className={styles.mediaItem}>\r\n              <img\r\n                width={100}\r\n                height={100}\r\n                className=\"align-self-center mr-3\"\r\n                src=\" https://images-na.ssl-images-amazon.com/images/I/81lGKc7oDGL._SX425_.jpg\"\r\n                alt=\"Generic placeholder\"\r\n              />\r\n              <Media.Body className={styles.mediaBody}>\r\n                <p>AOC 27 inch 144hz Gaming Monitor</p>\r\n                <Row>\r\n                  <Col xs={6}>\r\n                    <strong>$299.99</strong>\r\n                  </Col>\r\n                  <Col xs={6}>1 piece</Col>\r\n                </Row>\r\n\r\n                <Row style={styles.mediaItemButtons}>\r\n                  <Col xs={6}>\r\n                    <Button variant=\"primary\" size=\"sm\">\r\n                      Details\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xs={6}>\r\n                    <Button variant=\"danger\" size=\"sm\">\r\n                      Delete\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Media.Body>\r\n            </Media>\r\n          </>\r\n        </Accordion.Collapse>\r\n      </Accordion>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n        <Formik\r\n      validationSchema={schema}\r\n      onSubmit={console.log}\r\n      initialValues={{\r\n        firstName: 'Mark',\r\n        lastName: 'Otto',\r\n      }}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        values,\r\n        touched,\r\n        isValid,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\r\n              <Form.Label>First name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n                isValid={touched.firstName && !errors.firstName}\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n                isValid={touched.lastName && !errors.lastName}\r\n              />\r\n\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\r\n              <Form.Label>Username</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Username\"\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"username\"\r\n                  value={values.username}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.username}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.username}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                name=\"city\"\r\n                value={values.city}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.city}\r\n              />\r\n\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.city}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"3\" controlId=\"validationFormik04\">\r\n              <Form.Label>State</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"State\"\r\n                name=\"state\"\r\n                value={values.state}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.state}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.state}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"3\" controlId=\"validationFormik05\">\r\n              <Form.Label>Zip</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Zip\"\r\n                name=\"zip\"\r\n                value={values.zip}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.zip}\r\n              />\r\n\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.zip}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Group>\r\n            <Form.Check\r\n              required\r\n              name=\"terms\"\r\n              label=\"Agree to terms and conditions\"\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.terms}\r\n              feedback={errors.terms}\r\n              id=\"validationFormik0\"\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\">Submit form</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default E2;","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\EditModal1.js",["396","397","398","399"],"import React,{Component} from 'react';\r\nimport { Alert,NavLink, Button, Modal, ModalHeader, ModalBody,Form,FormGroup,Label, Input, Collapse } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit} from '@fortawesome/free-solid-svg-icons';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport {loadUser,loginModalOpen} from '../../action/authActions';\r\nimport back from '../../assets/images/back.jpg';\r\nimport {clearErrors}  from '../../action/errorActions';\r\n\r\n// import e from 'express';\r\nimport { getItems,updateItem } from '../../action/itemAction';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n\r\nclass EditModal extends Component{\r\n    \r\n    state={\r\n        modal:false,   // modal for adding item is false initially\r\n        name:'',\r\n        description:'',\r\n        manufacturer:'',\r\n        stock:0,\r\n        price:0,\r\n        rating:0,\r\n        msg:null,\r\n        isUpdate:false\r\n    };\r\n    componentDidMount(){\r\n        // this.props.loadUser();\r\n        const {name,description,manufacturer,price,stock,rating}=this.props.product;\r\n        this.setState({name:name,description:description,manufacturer:manufacturer,price:price,stock:stock,rating:rating});\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        const {error,isUpdate}=this.props;\r\n        if(error!==prevProps.error){\r\n            if(error.id===\"UPDATE_FAIL\"){\r\n                this.setState({msg:error.msg.msg});\r\n            }\r\n            else{\r\n                this.setState({msg:null});\r\n            }\r\n        }\r\n        // if Update close Modal\r\n        if(this.state.modal){\r\n            \r\n            if(isUpdate){\r\n                this.toggle();\r\n                this.props.loadUser();\r\n            }\r\n        }\r\n        \r\n    }\r\n    static propTypes={\r\n        isUpdate:PropTypes.bool,\r\n        isAuthenticated:PropTypes.bool,\r\n        error:PropTypes.object.isRequired,\r\n        register:PropTypes.func.isRequired,\r\n        clearErrors:PropTypes.func.isRequired\r\n    }\r\n\r\n    toggle=()=>{  \r\n        // clear the error\r\n        this.props.clearErrors();\r\n        // to toggle the modal \r\n        console.log(\"Props\",this.props);\r\n        if(!this.props.isAuthenticated){\r\n            console.log(\"Authen\");\r\n            this.props.history.push('/')\r\n            this.props.loginModalOpen(true);\r\n           \r\n        }\r\n        // console.log(\"from Toggle-> Modal Open:: \"+this.state.modal)\r\n        else\r\n            this.setState({\r\n                modal:!this.state.modal\r\n            })\r\n    }\r\n\r\n\r\n    onChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    // On Submit  method \r\n    onSubmit=e=>{\r\n        const {error,isUpdate}=this.props;\r\n        console.log(\"From Submit-> isUpdate:: \"+this.props.isUpdate)\r\n        e.preventDefault();\r\n        const id=this.props.product.id;\r\n        var user=this.props.user;\r\n        console.log(\"User Id Given for Update: :\",user)\r\n        const {name,description,manufacturer,stock,price,rating}=this.state;\r\n        const editProduct={\r\n            id,name,description,manufacturer,price,stock,rating,user\r\n        }\r\n        this.props.updateItem(editProduct);\r\n        \r\n        this.toggle();\r\n        // this.props.getItems();\r\n        // this.props.addItem(newItem);\r\n   \r\n        \r\n    }\r\n\r\nrender(){\r\n    const {name,description,manufacturer,price,stock,rating}=this.props.product;\r\n    return(\r\n        <>\r\n            <OverlayTrigger        \r\n                        placement=\"bottom\"\r\n                    overlay={<Tooltip id=\"button-tooltip-2\">Edit Product</Tooltip>}>\r\n           \r\n            <Button onClick={this.toggle} variant=\"primary\" size=\"sm\">\r\n                    <FontAwesomeIcon icon={faEdit}/>\r\n            </Button>\r\n            </OverlayTrigger>\r\n            <Modal isOpen={this.state.modal}  >\r\n                <ModalHeader toggle={this.toggle} style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton>Update</ModalHeader>\r\n                <ModalBody>\r\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Name</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                placeholder={name}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <Label for=\"description\">Description</Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"description\"\r\n                                id=\"description\"\r\n                                placeholder={description}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <Label for=\"manufacturer\">Manufacturer</Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"manufacturer\"\r\n                                id=\"manufacturer\"\r\n                                placeholder={manufacturer}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <Label for=\"price\">Price</Label>\r\n                            <Input \r\n                                 type=\"text\"\r\n                                name=\"price\"\r\n                                id=\"price\"\r\n                                placeholder={price}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <Label for=\"stock\">Stock</Label>\r\n                            <Input \r\n                                 type=\"text\"\r\n                                name=\"stock\"\r\n                                id=\"stock\"\r\n                                placeholder={stock}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <Label for=\"rating\">Rating</Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"rating\"\r\n                                id=\"rating\"\r\n                                placeholder={rating}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <Button  style={{marginTop:'2rem'}} block>\r\n\r\n                            Update</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n}\r\nconst mapStateToProps= state=>{\r\n    return({\r\n        isUpdate:state.auth.isUpdate,\r\n\r\n        isAuthenticated:state.auth.isAuthenticated,\r\n        // user:state.auth.user,\r\n        error:state.error\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{loadUser,loginModalOpen,getItems,updateItem,clearErrors})(withRouter(EditModal));","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\Body2.js",["400","401","402","403","404"],"import React, { Component } from \"react\";\r\nimport ChartistGraph from \"react-chartist\";\r\nimport { Container, Row, Col,Button,Media,Form,Tooltip } from \"react-bootstrap\";\r\n// import  Card  from \"../Card/Card.js\";\r\nimport './Body2.css'\r\nimport {Card} from 'react-bootstrap';   \r\nimport  StatsCard  from \"../StatsCard/StatsCard.js\";\r\nimport  Tasks  from \"../Tasks/Tasks.js\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes,faEdit } from '@fortawesome/free-solid-svg-icons';\r\nconst styles = {\r\n    mediaItem: {\r\n      border: \"1px solid gray\",\r\n      backgroundColor: \"#f5f5f5\",\r\n \r\n    },\r\n    mediaItemButtons: {\r\n      paddingTop: \"5px\",\r\n      paddingBottom: \"5px\"\r\n    }\r\n  };\r\n// import {\r\n// import { faAngleUp } from '@fortawesome/free-solid-svg-icons';\r\n//  dataPie,\r\n//   legendPie,\r\n//   dataSales,\r\n//   optionsSales,\r\n//   responsiveSales,\r\n//   legendSales,\r\n//   dataBar,\r\n//   optionsBar,\r\n//   responsiveBar,\r\n//   legendBar\r\n// } from \"../Variables/Variables.js\";\r\n\r\nclass Body2 extends Component {\r\n  createLegend(json) {\r\n    var legend = [];\r\n    for (var i = 0; i < json[\"names\"].length; i++) {\r\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\r\n      legend.push(<i className={type} key={i} />);\r\n      legend.push(\" \");\r\n      legend.push(json[\"names\"][i]);\r\n    }\r\n    return legend;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Container  fluid>\r\n        \r\n          <Row >\r\n            \r\n            <div className='products'>\r\n                 <Card  className='cardp' style={{height:'30rem',marginTop:'5rem'}}>\r\n                 <Card.Header className='header'><b>Trending Products</b><p>Explore All Top Viewed Products</p></Card.Header>\r\n                 <Card.Body className='overflow-auto custom-scrollbar-css p-3'>\r\n                    <Media style={{padding:'.5rem'}} className={styles.mediaItem}>\r\n                            <img\r\n                                width={100}\r\n                                height={100}\r\n                                className=\"align-self-center mr-3\"\r\n                                src=\"https://i5.walmartimages.com/asr/e73e1252-642c-4473-93ea-fd3b564a7027_1.3e81ea58fa3042452fe185129a4a865f.jpeg?odnWidth=undefined&odnHeight=undefined&odnBg=ffffff\"\r\n                                alt=\"Generic placeholder\"\r\n                            />\r\n                            <Media.Body className={styles.mediaBody}>\r\n                                <p><b>Dxracer Formula Gaming Chair (Black/Red)</b></p>\r\n                                <Row>\r\n                                <Col xs={6}>\r\n                                    <strong>By:</strong> Apple\r\n                                </Col>\r\n                                <Col xs={6}><b>4.5</b>/5</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                <Col xs={6}>\r\n                                    <strong>$48.99</strong>\r\n                                </Col>\r\n                                <Col xs={6}><strong>Stock</strong> 100</Col>\r\n                                </Row>\r\n\r\n                                <Row style={styles.mediaItemButtons}>\r\n                                <Col xs={6}>\r\n                                    <Button variant=\"primary\" size=\"sm\">\r\n                                    <FontAwesomeIcon icon={faEdit}/>\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col xs={6}>\r\n                                    <Button variant=\"danger\" size=\"sm\">\r\n                                    <FontAwesomeIcon icon={faTimes}/>\r\n                                    </Button>\r\n                                </Col>\r\n                                </Row>\r\n                            </Media.Body>\r\n                            </Media>\r\n                   \r\n                    <Media style={{padding:'.5rem'}} className={styles.mediaItem}>\r\n              <img\r\n                width={100}\r\n                height={100}\r\n                className=\"align-self-center mr-3\"\r\n                src=\" https://images-na.ssl-images-amazon.com/images/I/81lGKc7oDGL._SX425_.jpg\"\r\n                alt=\"Generic placeholder\"\r\n              />\r\n              <Media.Body className={styles.mediaBody}>\r\n                                <p><b>Dxracer Formula Gaming Chair (Black/Red)</b></p>\r\n                                <Row>\r\n                                <Col xs={6}>\r\n                                    <strong>By:</strong> Apple\r\n                                </Col>\r\n                                <Col xs={6}><b>4.5</b>/5</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                <Col xs={6}>\r\n                                    <strong>$48.99</strong>\r\n                                </Col>\r\n                                <Col xs={6}><strong>Stock</strong> 100</Col>\r\n                                </Row>\r\n\r\n                                <Row style={styles.mediaItemButtons}>\r\n                                <Col xs={6}>\r\n                                    <Button variant=\"primary\" size=\"sm\">\r\n                                    <FontAwesomeIcon icon={faEdit}/>\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col xs={6}>\r\n                                    <Button variant=\"danger\" size=\"sm\">\r\n                                    <Tooltip >\r\n          Tooltip on <strong>Delete</strong>.\r\n        </Tooltip>\r\n                                    <FontAwesomeIcon icon={faTimes}/>\r\n                                    </Button>\r\n                                </Col>\r\n                                </Row>\r\n                            </Media.Body>\r\n            </Media>\r\n           \r\n                   \r\n                    <Media style={{padding:'.5rem'}} className={styles.mediaItem}>\r\n                            <img\r\n                                width={100}\r\n                                height={100}\r\n                                className=\"align-self-center mr-3\"\r\n                                src=\"https://i5.walmartimages.com/asr/e73e1252-642c-4473-93ea-fd3b564a7027_1.3e81ea58fa3042452fe185129a4a865f.jpeg?odnWidth=undefined&odnHeight=undefined&odnBg=ffffff\"\r\n                                alt=\"Generic placeholder\"\r\n                            />\r\n                            <Media.Body className={styles.mediaBody}>\r\n                                <p>Dxracer Formula Gaming Chair (Black/Red)</p>\r\n                                <Row>\r\n                                <Col xs={6}>\r\n                                    <strong>$48.99</strong>\r\n                                </Col>\r\n                                <Col xs={6}>1 piece</Col>\r\n                                </Row>\r\n\r\n                                <Row style={styles.mediaItemButtons}>\r\n                                <Col xs={6}>\r\n                                    <Button variant=\"primary\" size=\"sm\">\r\n                                    <FontAwesomeIcon icon={faEdit}/>\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col xs={6}>\r\n                                    <Button variant=\"danger\" size=\"sm\">\r\n                                    <FontAwesomeIcon icon={faTimes}/>\r\n                                    </Button>\r\n                                </Col>\r\n                                </Row>\r\n                            </Media.Body>\r\n                            </Media>\r\n                   \r\n                    <Media style={{padding:'.5rem'}} className={styles.mediaItem}>\r\n              <img\r\n                width={100}\r\n                height={100}\r\n                className=\"align-self-center mr-3\"\r\n                src=\" https://images-na.ssl-images-amazon.com/images/I/81lGKc7oDGL._SX425_.jpg\"\r\n                alt=\"Generic placeholder\"\r\n              />\r\n              <Media.Body className={styles.mediaBody}>\r\n                <p>AOC 27 inch 144hz Gaming Monitor</p>\r\n                <Row>\r\n                  <Col xs={6}>\r\n                    <strong>$299.99</strong>\r\n                  </Col>\r\n                  <Col xs={6}>1 piece</Col>\r\n                </Row>\r\n\r\n                <Row style={styles.mediaItemButtons}>\r\n                <Col xs={6}>\r\n                                    <Button variant=\"primary\" size=\"sm\">\r\n                                    <FontAwesomeIcon icon={faEdit}/>\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col xs={6}>\r\n                                    <Button variant=\"danger\" size=\"sm\">\r\n                                    <FontAwesomeIcon icon={faTimes}/>\r\n                                    </Button>\r\n                                </Col>\r\n                </Row>\r\n              </Media.Body>\r\n            </Media>\r\n           \r\n                    <Media style={{padding:'.5rem'}} className={styles.mediaItem}>\r\n                            <img\r\n                                width={100}\r\n                                height={100}\r\n                                className=\"align-self-center mr-3\"\r\n                                src=\"https://i5.walmartimages.com/asr/e73e1252-642c-4473-93ea-fd3b564a7027_1.3e81ea58fa3042452fe185129a4a865f.jpeg?odnWidth=undefined&odnHeight=undefined&odnBg=ffffff\"\r\n                                alt=\"Generic placeholder\"\r\n                            />\r\n                            <Media.Body className={styles.mediaBody}>\r\n                                <p>Dxracer Formula Gaming Chair (Black/Red)</p>\r\n                                <Row>\r\n                                <Col xs={6}>\r\n                                    <strong>$48.99</strong>\r\n                                </Col>\r\n                                <Col xs={6}>1 piece</Col>\r\n                                </Row>\r\n\r\n                                <Row style={styles.mediaItemButtons}>\r\n                                <Col xs={6}>\r\n                                    <Button variant=\"primary\" size=\"sm\">\r\n                                    <FontAwesomeIcon icon={faEdit}/>\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col xs={6}>\r\n                                    <Button variant=\"danger\" size=\"sm\">\r\n                                    <FontAwesomeIcon icon={faTimes}/>\r\n                                    </Button>\r\n                                </Col>\r\n                                </Row>\r\n                            </Media.Body>\r\n                            </Media>\r\n                            </Card.Body>   \r\n                             <a  className=\"m-3 p-2 btn btn-primary \"><span className=\"btn-wrapper--label\">View All</span></a>\r\n                         \r\n                    </Card>\r\n             \r\n\r\n            </div>\r\n            \r\n          </Row>\r\n\r\n         \r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body2;\r\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Pagination.js",["405","406","407","408","409"],"import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nconst propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    initialPage: PropTypes.number    \r\n}\r\n\r\nconst defaultProps = {\r\n    initialPage: 1\r\n}\r\n\r\nexport default class Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pager: {} };\r\n    }\r\n\r\n    componentWillMount() {\r\n        // set page if items array isn't empty\r\n        if (this.props.items && this.props.items.length) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // reset page if items array has changed\r\n        if (this.props.items !== prevProps.items) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    setPage(page) {\r\n        var items = this.props.items;\r\n        var pager = this.state.pager;\r\n\r\n        if (page < 1 || page > pager.totalPages) {\r\n            return;\r\n        }\r\n\r\n        // get new pager object for specified page\r\n        pager = this.getPager(items.length, page);\r\n\r\n        // get new page of items from items array\r\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n        // update state\r\n        this.setState({ pager: pager });\r\n\r\n        // call change page function in parent component\r\n        this.props.onChangePage(pageOfItems);\r\n    }\r\n\r\n    getPager(totalItems, currentPage, pageSize) {\r\n        // default to first page\r\n        currentPage = currentPage || 1;\r\n\r\n        // default page size is 10\r\n        pageSize = pageSize || 10;\r\n\r\n        // calculate total pages\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        var startPage, endPage;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        var startIndex = (currentPage - 1) * pageSize;\r\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    render() {\r\n        var pager = this.state.pager;\r\n\r\n        if (!pager.pages || pager.pages.length <= 1) {\r\n            // don't display pager if there is only 1 page\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(1)}>First</a>\r\n                </li>\r\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\r\n                </li>\r\n                {pager.pages.map((page, index) =>\r\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''}>\r\n                        <a onClick={() => this.setPage(page)}>{page}</a>\r\n                    </li>\r\n                )}\r\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\r\n                </li>\r\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\reducer\\index.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\action\\errorActions.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\ProductsList\\ProductList.js",["410","411","412","413","414","415","416","417","418","419"],"import React, { useState,useEffect } from \"react\";\r\nimport './ProductList.css'\r\nimport { Card,Container, Row, Col,Button,Media,Form,Tooltip, Spinner } from \"react-bootstrap\";\r\nimport {connect} from 'react-redux';\r\nimport { getItems } from './../../action/itemAction';\r\n// import P2 from './P2';\r\nimport Checkbox from \"../CustomCheckbox/CustomCheckbox\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFilter, faPlus, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NewProductModal from \"./NewProductModal\";\r\nimport { Suspense, lazy } from 'react';\r\nconst ProductListData = React.lazy(() => import('./ProductListData'));\r\n// import ProductListData from './ProductListData';\r\n\r\n\r\nfunction ProductList(props){\r\n  // const [chkBox,setChkBox]=useState(false)\r\n  const [products,setProducts]=useState([]);\r\n\r\n  // const [q, setQ] = useState(\"\");\r\n\r\n\r\n//  const handleCheck=(e)=>{\r\n//     if(e.target.checked)\r\n//     setChkBox(true);\r\n//     else\r\n//     setChkBox(false);\r\n//  }\r\n\r\n \r\n  useEffect(()=>{\r\n      setProducts(props.products);\r\n  },[props.products]);\r\n\r\n\r\n \r\n    return (\r\n      <div className=\"content\">\r\n        <Container style={{marginTop:'1rem'}} fluid>\r\n        \r\n          <Row >\r\n            <Col sm={12}>\r\n            <div className='products'>\r\n                 <Card  className='cardpt'>\r\n                 <Card.Header className='header'>\r\n                   <div  className=\"product-list-header\">\r\n                      <div><b>All Products</b><p>Explore All Electronics Products</p></div>\r\n                      <NewProductModal/>\r\n                    \r\n                    </div>  \r\n                 </Card.Header>\r\n                 {/* <Card.Body className='overflow-auto custom-scrollbar-css p-3'>\r\n                            </Card.Body>    */}\r\n                           \r\n                         \r\n                  </Card>\r\n             \r\n\r\n            </div>\r\n            </Col>\r\n          </Row>\r\n          <Row  >\r\n            \r\n          \r\n          <Suspense fallback={<div style={{marginLeft:'5rem',display:'flex',alignItems:'center',justifyContent:'space-around'}} ><Spinner style={{width:'5rem',height:'5rem'}} animation=\"border\" variant=\"primary\" /><h2>Products are Loading...</h2></div>}>\r\n     \r\n                      <ProductListData products={products}/>\r\n          </Suspense>\r\n            \r\n                 \r\n             \r\n\r\n          \r\n            \r\n          </Row>\r\n\r\n         \r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\nconst  mapStateToProps=(state)=>{\r\n    return({\r\n      products:state.item.items\r\n    })\r\n  }\r\n\r\nexport default connect(mapStateToProps,{getItems})(ProductList);\r\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Navbars\\AdminNavbarLinks.js",["420","421","422","423","424","425","426","427","428","429"],"\nimport React, { Component } from \"react\";\nimport { NavItem, Nav, NavDropdown, Dropdown,FormControl,Button,Form} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {  faTachometerAlt,faGlobe,faSearch } from '@fortawesome/free-solid-svg-icons';\nimport './AdminNavbarLinks.css'\nimport {NavLink} from 'react-router-dom';\n\nclass AdminNavbarLinks extends Component {\n  render() {\n    const notification = (\n      <div>\n        {/* <i className=\"fa fa-globe\" /> */}\n        <FontAwesomeIcon icon={faGlobe} className=\"font-size-lg icon1 \" />\n        <b className=\"caret\" />\n        {/* <span className=\"notification\">5</span> */}\n        {/* <p className=\"hidden-lg hidden-md\">Notification</p> */}\n      </div>\n    );\n    return (\n      <>\n       {/* <Nav className=\"mr-auto\" style={{display:'flex',flexDirection:'column',fontSize:'10',fontWeight:'bold'}}> */}\n      {/* <ul className=\"nav\" > */}\n          <div style={{margin:'5px 15px'}}>\n               <li > <NavLink className=\"nav-link\" to=\"/\" >Home</NavLink></li>\n               <li ><NavLink className=\"nav-link\" to=\"/productsGrid\">Products</NavLink></li>\n             \n               <hr style={{borderColor:'white',width:'14.3rem'}}/>  </div>\n                {/* <NavDropdown  title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                </NavDropdown> */}\n             \n              {/* <Form inline>\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                <Button variant=\"outline-success\">Search</Button>\n              </Form> */}\n        {/* </Nav> */}\n      </>\n    );\n  }\n}\n\nexport default AdminNavbarLinks;\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\ProductsList\\TrendingProductList.js",["430","431","432","433","434"],"import React, { Component } from \"react\";\r\nimport { Container, Row, Col,Button,Media,Form,Tooltip } from \"react-bootstrap\";\r\nimport './TrendingProductList.css'\r\nimport {Card} from 'react-bootstrap';   \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes,faEdit, faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {getCategories} from '../../action/categoryAction';\r\nimport { getItems,deleteItem } from \"../../action/itemAction\";\r\nimport {loginModalOpen} from '../../action/authActions'\r\nimport CountUp from \"react-countup\";\r\n\r\n\r\nconst styles = {\r\n    mediaItem: {\r\n      border: \"1px solid gray\",\r\n      backgroundColor: \"#f5f5f5\",\r\n \r\n    },\r\n    mediaItemButtons: {\r\n      paddingTop: \"5px\",\r\n      paddingBottom: \"5px\"\r\n    }\r\n  };\r\n\r\nclass TrendingProductList extends Component {\r\n  // createLegend(json) {\r\n  //   var legend = [];\r\n  //   for (var i = 0; i < json[\"names\"].length; i++) {\r\n  //     var type = \"fa fa-circle text-\" + json[\"types\"][i];\r\n  //     legend.push(<i className={type} key={i} />);\r\n  //     legend.push(\" \");\r\n  //     legend.push(json[\"names\"][i]);\r\n  //   }\r\n  //   return legend;\r\n  // }\r\n  componentDidMount(){\r\n    // this.props.loadUser();\r\n    this.props.getItems();\r\n  }\r\n  render() {\r\n    // console.log(\"Products From  Trending:\",this.props.user);\r\n    const sort=(products)=>{\r\n      return products.sort((a, b) => b.rank - a.rank)\r\n    }\r\n    return (\r\n      <div className=\"content\">\r\n        <Container  fluid>\r\n        \r\n          <Row >\r\n            \r\n            <div className='products'>\r\n                 <Card  className='cardp' style={{height:'30rem',marginTop:'5rem'}}>\r\n                 <Card.Header className='header'><b>Trending Products</b><p>Explore All Top Viewed Products</p></Card.Header>\r\n                 <Card.Body className='overflow-auto custom-scrollbar-css p-3'>\r\n                 \r\n                    {this.props.products.length!==0?sort(this.props.products).map((product)=>\r\n                      \r\n                      <NavLink  to={{\r\n                        pathname:`admin/products/${product.id}`,\r\n                        state: {item:product}}}\r\n                        >\r\n                          \r\n                        <Media key={product.id} style={{padding:'.5rem'}} className={styles.mediaItem}>\r\n                      <img\r\n                          width={100}\r\n                          height={100}\r\n                          className=\"align-self-center mr-3\"\r\n                          src=\"https://i5.walmartimages.com/asr/e73e1252-642c-4473-93ea-fd3b564a7027_1.3e81ea58fa3042452fe185129a4a865f.jpeg?odnWidth=undefined&odnHeight=undefined&odnBg=ffffff\"\r\n                          alt=\"Generic placeholder\"\r\n                      />\r\n                      <Media.Body className={styles.mediaBody} >\r\n                          <p style={{display:'flex',alignItems:'center'}}><b>{product.name}</b><span style={{color:product.stock>=10?'#1bc943':'#f83245',borderRadius:'5px',border:product.stock>=10?'1px solid #1bc943':' 1px solid #f83245',background:product.stock>=10?'#e5f9ed':'#fff5f6',padding:'.0rem .3rem',marginLeft:'.5rem',fontSize:'10px'}}><b><CountUp\r\n                                        start={0}\r\n                                        end={product.stock}\r\n                                        duration={3}\r\n                                        delay={0}\r\n                                        separator=\"\"\r\n                                        decimals={0}\r\n                                        decimal=\",\"\r\n                                    /></b></span></p>\r\n                          <Row>\r\n                          <Col xs={6}>\r\n                              <h7 style={{fontSize:'12px',display:'flex'}}><strong>By:</strong> {product.manufacturer}</h7>\r\n                          </Col>\r\n                          <Col xs={6}><p style={{width:'2.7rem',margin:'0 0 0 .5rem',borderRadius:'5px',background:'green',color:'white',padding:'.1rem .3rem',fontSize:'12px'}}>{product.rating?product.rating:\"4.5\"} <FontAwesomeIcon  icon={faStar}/></p></Col>\r\n                          </Row>\r\n                          <Row>\r\n                          <Col xs={6}>\r\n                             <p style={{fontSize:'13px'}}> <strong>₹<CountUp\r\n                                        start={0}\r\n                                        end={product.price}\r\n                                        duration={2}\r\n                                        delay={0}\r\n                                        separator=\"\"\r\n                                        decimals={0}\r\n                                        decimal=\",\"\r\n                                    /></strong></p>\r\n                          </Col>\r\n                         \r\n                          </Row>\r\n\r\n                    \r\n                      </Media.Body>\r\n                      </Media></NavLink>\r\n                    ):'NO PRODUCTS FOUND :('}\r\n                </Card.Body>   \r\n                  <NavLink className=\"m-3 p-2 btn btn-primary\" style={{color:'white'}} to='/productsGrid'><span className=\"btn-wrapper--label\">View All</span></NavLink>\r\n                         \r\n                    </Card>\r\n             \r\n\r\n            </div>\r\n            \r\n          </Row>\r\n\r\n         \r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps= state=>{\r\n  return({\r\n    categories:state.category.categories,\r\n      isAuthenticated:state.auth.isAuthenticated,\r\n      isLoading:state.auth.isLoading,\r\n      // user:state.auth.user,\r\n      products:state.item.items,\r\n      itemsLoading:state.item.itemsLoading,\r\n      itemsLoaded:state.item.itemsLoaded\r\n      // error:state.error\r\n  })\r\n}\r\nexport default connect(mapStateToProps,{loginModalOpen,getItems,deleteItem,getCategories})(TrendingProductList); ;\r\n","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\action\\types.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\CustomButton\\CustomButton.jsx",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\FormInputs\\FormInputs.jsx",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\UserCard\\UserCard.jsx",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\reducer\\authReducer.js",["435","436"],"import {BLOCK,FREE_BLOCK,LOGIN_MODAL_OPEN,LOGIN_MODAL_CLOSE,USER_LOADED,USER_LOADING,AUTH_ERROR,LOGIN_FAIL,LOGIN_SUCCESS,LOGOUT_SUCCESS,REGISTER_FAIL,REGISTER_SUCCESS,UPDATE_FAIL,UPDATE_SUCCESS} from '../action/types';\r\nimport { EXPIRE_EXTEND } from './../action/types';\r\n\r\nconst initialState={\r\n    token:localStorage.getItem('token'),\r\n    isLoading:false,\r\n    isLoaded:false,\r\n    isAuthenticated:null,\r\n    isUpdate:null,\r\n    user:null,\r\n    isModalOpen:false,\r\n    isBlocked:false,\r\n};\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){    \r\n        case LOGIN_MODAL_OPEN:\r\n            return{\r\n                ...state,\r\n                isModalOpen:true\r\n                \r\n            };\r\n        case LOGIN_MODAL_CLOSE:\r\n            return{\r\n                ...state,\r\n                isModalOpen:false\r\n                \r\n            };\r\n        case BLOCK:\r\n            return{\r\n                ...state,\r\n                isBlocked:true\r\n                \r\n            };\r\n        case FREE_BLOCK:\r\n            return{\r\n                ...state,\r\n                isBlocked:false\r\n                \r\n            };\r\n        case USER_LOADING:\r\n            return{\r\n                ...state,\r\n                isUpdate:false,\r\n                isLoading:true,\r\n                isLoaded:false\r\n                \r\n            };\r\n        case USER_LOADED:\r\n            return{\r\n                ...state,\r\n                isAuthenticated:true,\r\n                isLoaded:true,\r\n                isLoading:false,\r\n                user:action.payload,\r\n\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token',action.payload.token);\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated:true,\r\n                isLoading:false,\r\n\r\n            };\r\n        case UPDATE_SUCCESS:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                isUpdate:true,\r\n                isAuthenticated:true,\r\n                isLoading:false,\r\n\r\n            }; \r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS: \r\n        case REGISTER_FAIL:  \r\n        // case UPDATE_FAIL:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token:null,\r\n                isAuthenticated:false,\r\n                isLoading:false,\r\n                user:null\r\n            };\r\n        case EXPIRE_EXTEND:\r\n            return{\r\n                ...state,\r\n                rememberMe:action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\ProductsList\\ProductListData.js",["437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455"],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\reducer\\errorReducer.js",["456"],"import  { GET_ERRORS,CLEAR_ERRORS } from '../action/types';\r\n\r\nconst initialState={\r\n    msg:{},\r\n    status:null,\r\n    id:null\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return {\r\n                msg:action.payload.msg,\r\n                status:action.payload.status,\r\n                id:action.payload.id\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return{\r\n                msg:{},\r\n                status:null,\r\n                id:null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\reducer\\itemReducer.js",["457","458"],"\r\nimport  {DELETE_SELECTED_ITEM,UPDATE_ITEM,GET_ITEM,ADD_ITEM,DELETE_ITEM,ITEMS_LOAD} from '../action/types';\r\n\r\nconst initialState={\r\n    items:[],\r\n    itemsLoading:false,\r\n    itemsLoaded:false\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    const {type,payload}=action; //destructuring action\r\n    switch(action.type){\r\n        case GET_ITEM:\r\n            return{\r\n                ...state,\r\n                items:payload,\r\n                itemsLoading:false,\r\n                itemsLoaded:true\r\n           };\r\n           case DELETE_ITEM:\r\n            return{\r\n                ...state,\r\n                items:state.items.filter(item=> item.id!==action.payload)\r\n\r\n           };\r\n           case DELETE_SELECTED_ITEM:\r\n               console.log(\"Action Payload:\",action.payload);\r\n            return{\r\n                    ...state,\r\n                    items:state.items.filter(item=> \r\n                        {\r\n                            // console.log(\"Action::\",action.payload);\r\n                            for(var id in action.payload)\r\n                            if(item.id!==id)\r\n                                return false;\r\n                            return true;\r\n                        }\r\n                 )\r\n\r\n           };\r\n           case ADD_ITEM:\r\n            return{\r\n                ...state,\r\n                items:[...state.items,payload]\r\n\r\n           };\r\n        case ITEMS_LOAD:\r\n            return{\r\n                ...state,\r\n                itemsLoading:true,\r\n                itemsLoaded:false\r\n            };\r\n            case UPDATE_ITEM:\r\n            return{\r\n                ...state,\r\n               items:state.items.map((item)=>{\r\n                   if(item.id===action.payload.id){\r\n                       const updatedItem={\r\n                           ...item,\r\n                           name:action.payload.name,\r\n                           description:action.payload.description,\r\n                           manufacturer:action.payload.manufacturer,\r\n                           price:action.payload.price,\r\n                           stock:action.payload.stock,\r\n                           rating:action.payload.rating,\r\n                           editUser:item.editUser.push(action.payload.user),\r\n                       }\r\n                       return updatedItem;\r\n                   }\r\n                   return item;\r\n               }),\r\n               itemsLoading:false,\r\n                itemsLoaded:true\r\n               \r\n\r\n            }; \r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Home\\ApexChart.js",[],"C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Slider\\Price_Slider.js",["459","460"],"import React from 'react';\r\nimport '../../assets/css/demo1.css';\r\nclass Price_Slider extends React.Component {\r\n\r\n  \r\n  \r\n    render() {\r\n    \r\n      \r\n      return (\r\n       <>\r\n      <div class=\"row\">\r\n  <div class=\"small-6 medium-2 columns\">\r\n    <input type=\"number\" id=\"sliderOutput3\"/>\r\n  </div>\r\n  <div class=\"small-6 medium-2 columns\">\r\n    <input type=\"number\" id=\"sliderOutput4\"/>\r\n  </div>\r\n  <div class=\"small-12 medium-8 columns\">\r\n    <div class=\"slider\" data-slider data-initial-start=\"20000\" data-start=\"0\" data-initial-end=\"75000\" data-end=\"100000\" data-step=\"1000\">\r\n      <span class=\"slider-handle\" data-slider-handle role=\"slider\" tabindex=\"1\" aria-controls=\"sliderOutput3\"></span>\r\n      <span class=\"slider-fill\" data-slider-fill></span>\r\n      <span class=\"slider-handle\" data-slider-handle role=\"slider\" tabindex=\"1\" aria-controls=\"sliderOutput4\"></span>\r\n    </div>\r\n  </div>\r\n  </div>\r\n       </>\r\n      )\r\n    }\r\n  }\r\n  \r\nexport default Price_Slider;","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\RegisterModal1.js",["461","462","463","464","465","466"],"import React,{Component} from 'react';\r\nimport { Button,InputGroup,Col,Alert,NavLink, Modal,Form } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {register,login,TokenExpireExtend,loginModalOpen,isBlockedF} from '../../action/authActions';\r\nimport {clearErrors}  from '../../action/errorActions';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {Prompt} from 'react-router-dom';\r\nimport back from '../../assets/images/back.jpg';\r\nimport Map from './Map';\r\nimport publicIp from \"public-ip\";\r\n\r\nconst schemaLogin = yup.object({\r\n    email: yup.string().email('Invalid email').required(),\r\n    password: yup.string().min(0, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\r\n})\r\n\r\n// fname:'',\r\n//         lname:'',\r\n//         email:'',\r\n//         password:'',\r\n//         city:this.state.city,\r\n//         state:this.state.State,\r\n//         postal:this.state.postal,\r\n//         country:this.state.country,\r\n//         mobile_num\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\n\r\nconst schemaRegister = yup.object({\r\n    fname:yup.string().min(1, 'At least 1 characters').max(10, 'First Name can be maximum 10 characters').required(),   \r\n    lname:yup.string().min(1, 'At least 1 characters').max(10, 'Last Name can be maximum 10 characters').required(),   \r\n    city:yup.string().min(3, 'City must be at least 3 characters').max(24, 'City can be maximum 20 characters'),   \r\n    state:yup.string().min(3, 'State must be at least 3 characters').max(24, 'State can be maximum 20 characters'),   \r\n    country:yup.string().min(3, 'Country must be at least 3 characters').max(24, 'Country can be maximum 20 characters'),   \r\n    postal:yup.number().integer(),   \r\n    email: yup.string().email('Invalid email').required(),\r\n    password: yup.string().min(6, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required(),\r\n    // mobile_number:yup.number().max(9999999999,'Invalid Number').required()//.matches(phoneRegExp,\"Number is Not Like Mobile number\"),   \r\n})\r\n\r\n\r\n\r\nclass RegisterModal extends Component{\r\n    state={\r\n        imageURL:\"\",\r\n        signIn:false,\r\n        remember:false,\r\n        modal:this.props.isModalOpen,   // modal for adding item is false initially\r\n        msg:null,\r\n        city:'',\r\n        State:'',\r\n        country:'',\r\n        postal:'',\r\n        ip:'',\r\n        isBlocking:this.props.isBlocked\r\n    };\r\n\r\n\r\nasync componentDidMount(){\r\n\r\n    let response=await fetch(`https://geolocation-db.com/json/`)\r\n    let ipData=await response.json();\r\n    \r\n    this.setState({ip:ipData.IPv4,city:ipData.city,country:ipData.country_name,postal:ipData.postal,State:ipData.state})\r\n\r\n    \r\n}\r\n\r\n\r\n    componentDidUpdate(prevProps){\r\n\r\n        console.log(this.state.city);\r\n\r\n        const {error,isAuthenticated}=this.props;\r\n        if(error!==prevProps.error){\r\n            if(error.id===\"REGISTER_FAIL\"){\r\n                this.setState({msg:error.msg.msg});\r\n            }\r\n            else if(error.id===\"LOGIN_FAIL\"){\r\n                this.setState({msg:error.msg.msg});\r\n            }\r\n            else{\r\n                this.setState({msg:null});\r\n            }\r\n        }\r\n        // if authenticated close Modal\r\n        if(this.state.modal){\r\n            \r\n            if(isAuthenticated){\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n    static propTypes={\r\n        isAuthenticated:PropTypes.bool,\r\n        error:PropTypes.object.isRequired,\r\n        register:PropTypes.func.isRequired,\r\n        clearErrors:PropTypes.func.isRequired\r\n    }\r\n\r\n    toggle=()=>{  \r\n      \r\n        // clear the error\r\n        this.props.clearErrors();\r\n        // to toggle the modal \r\n\r\n        this.setState({\r\n            modal:!this.state.modal\r\n        })\r\n        // this.props.loginModalOpen(this.state.modal)\r\n    }\r\n\r\n    handleCheckboxChange=(e)=>{\r\n        e.preventDefault();\r\n        this.setState((prevState)=>{\r\n            return {remember:!prevState.remember}\r\n        })\r\n        \r\n    }\r\n\r\n    handleSignIn=()=>{\r\n        console.log(\"Sign in  Toggle Called\",this.state.signIn);\r\n        this.props.clearErrors();\r\n        this.setState((prevState)=>{\r\n            return {signIn:!prevState.signIn}\r\n        })\r\n    }\r\n     encodeImageFileAsURL=()=> {\r\n        console.log(\"image uploading func. called\");\r\n        var filesSelected = document.getElementById(\"inputFileToLoad\").files;\r\n        if (filesSelected.length > 0) {\r\n          var fileToLoad = filesSelected[0];\r\n    \r\n          var fileReader = new FileReader();\r\n    \r\n          fileReader.onload = (fileLoadedEvent)=> {\r\n            var srcData = fileLoadedEvent.target.result; // <--- data: base64\r\n    \r\n            var newImage = document.createElement('img');\r\n            newImage.src = srcData;\r\n            this.setState({imageURL:newImage.src});\r\n            // document.getElementById(\"imgTest\").innerHTML = newImage.outerHTML;\r\n            // alert(\"Converted Base64 version is \" + document.getElementById(\"imgTest\").innerHTML);\r\n            // console.log(\"Converted Base64 version is \" + this.state.imageURL);\r\n           \r\n          }\r\n          fileReader.readAsDataURL(fileToLoad);\r\n        }\r\n        // return newImage.src;\r\n      }\r\n\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n          {/* <Prompt\r\n              when={this.state.isBlocking}\r\n                message={(location, action) => {\r\n                  // if (action === 'POP') {\r\n                    console.log(\"Backing up...\",action,location)\r\n                  // }\r\n\r\n                  return location.pathname.startsWith(\"/\")\r\n                    ? true\r\n                    : `Are you sure you want to Leave ${location.pathname}?`\r\n            }}\r\n          /> */}\r\n             {/* <Prompt\r\n                when={this.props.isBlocked}\r\n                message={(location)=> `Are You Sure Want To Leave ${location}`}\r\n/>  */}\r\n            <NavLink onClick={this.toggle} >\r\n               <Button style={{paddingLeft:' 1.5rem',paddingRight:'1.5rem'}}><b> Register</b></Button>\r\n            </NavLink>\r\n\r\n            <Modal show={this.state.modal} onHide={this.toggle} >\r\n            {this.state.signIn?           <>\r\n            {/* <Modal.Header toggle={this.toggle}>Register</Modal.Header> */}\r\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Register</b></Modal.Header>\r\n                <Modal.Body>\r\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n    <p>isBlocking?{this.state.isBlocking?\"Yes\":\"No\"}</p>\r\n   \r\n    <Formik\r\n    // validator={() => ({})}\r\n      validationSchema={schemaRegister}\r\n      initialValues={{\r\n        fname:'',\r\n        lname:'',\r\n        email:'',\r\n        password:'',\r\n        city:this.state.city,\r\n        state:this.state.State,\r\n        postal:this.state.postal,\r\n        country:this.state.country,\r\n        // mobile_number:''\r\n\r\n      }}\r\n      onSubmit={(values)=>{ \r\n        this.encodeImageFileAsURL();\r\n        const imageURL=this.state.imageURL;\r\n        console.log(\"Image URL\",imageURL);\r\n        const {fname,lname,email,password,city,state,postal,country}=values;\r\n        let img=this.state.imageURL;\r\n        let ip=this.state.ip;\r\n        const newUser={\r\n            fname,lname,email,password,img,city,state,postal,country,ip\r\n        }\r\n        this.props.register(newUser);\r\n    }\r\n    }\r\n    >\r\n       \r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n         }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          \r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n           \r\n              <Form.Label>First Name</Form.Label>\r\n              \r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"First Name\"\r\n                name=\"fname\"\r\n                value={values.fname}\r\n                // onChangeCapture={(e)=>this.setState({isBlocking:e.target.value>0})}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); this.props.isBlockedF(e.target.value.length>0); handleChange(e)}}\r\n                isInvalid={!!errors.fname}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.fname}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Last Name\"\r\n                name=\"lname\"\r\n                value={values.lname}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); this.props.isBlockedF(e.target.value.length>0);handleChange(e)}}\r\n                isInvalid={!!errors.lname}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.lname}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n           \r\n\r\n          </Form.Row>\r\n          <Form.Row>\r\n          <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\r\n              <Form.Label>Email ID</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Email ID\"\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={e=>{this.setState({isBlocking:e.target.value.length>0});this.props.isBlockedF(e.target.value.length>0); handleChange(e)}}\r\n                  isInvalid={!!errors.email}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0});this.props.isBlockedF(e.target.value.length>0); handleChange(e)}}\r\n                isInvalid={!!errors.password}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.password}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n         \r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                name=\"city\"\r\n                value={values.city?values.city:this.state.city}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.city}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.city}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n              <Form.Label>State</Form.Label>\r\n              <Form.Control\r\n               disabled\r\n                type=\"text\"\r\n                placeholder=\"State\"\r\n                name=\"state\"\r\n                value={values.state?values.state:this.state.State}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.state}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.state}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n              <Form.Label>Postal</Form.Label>\r\n              <Form.Control\r\n             \r\n                type=\"number\"\r\n                placeholder=\"Postal\"\r\n                name=\"postal\"\r\n                value={values.postal?values.postal:this.state.postal}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.postal}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.postal}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n               disabled\r\n                type=\"text\"\r\n                placeholder=\"Country\"\r\n                name=\"country\"\r\n                value={values.country?values.country:this.state.country}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.country}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.country}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            {/* <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n              <Form.Label>Phone/Mobile Number</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Mobile Number\"\r\n                name=\"mobile\"\r\n                value={values.mobile_number}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.mobile_number}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.mobile_number}\r\n              </Form.Control.Feedback>\r\n            </Form.Group> */}\r\n\r\n          </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"12\">\r\n                <div className=\"mb-3\">\r\n                    <Form.File id=\"formcheck-api-regular\">\r\n                    <Form.File.Label>Profile Image </Form.File.Label>\r\n                    <input id=\"inputFileToLoad\"  type=\"file\" onChange={this.encodeImageFileAsURL} />\r\n                    </Form.File>\r\n                </div>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n\r\n          {/* <Form.Row>\r\n          <Map\r\n                google={this.props.google}\r\n                center={{lat: 18.5204, lng: 73.8567}}\r\n                height='300px'\r\n                zoom={15}\r\n    />\r\n          </Form.Row>\r\n          <Form.Row>\r\n         \r\n          </Form.Row>\r\n          <Form.Row>\r\n         \r\n          </Form.Row>\r\n          <Form.Row style={{marginBottom:'10rem'}}>\r\n         <p>Hello</p>\r\n          </Form.Row> */}\r\n          <Button type=\"submit\">Register</Button>\r\n          \r\n          <input defaultChecked={this.state.remember} style={{marginLeft:'1rem',marginTop:'.5rem'}} type=\"checkbox\" onChange={this.handleCheckboxChange}/><span>  Remember me!</span>\r\n                            <div style={{}} className=\"forgot-password text-right\">\r\n                                Already registered <span onClick={this.handleSignIn} ><a ><b>Sign in?</b></a></span>\r\n                            </div>\r\n                            <div id=\"imgTest\"></div>\r\n                        </Form>\r\n                        \r\n                    )}\r\n                    </Formik>\r\n                </Modal.Body>            </>:\r\n                <>\r\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Login</b></Modal.Header>\r\n                    <Modal.Body>\r\n                      {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n                       \r\n                       \r\n                 <Formik\r\n                        validationSchema={schemaLogin}\r\n                        initialValues={{\r\n                            email:'',\r\n                            password:'',\r\n\r\n                        }}\r\n                        onSubmit={(values)=>{ \r\n                            console.log(\"onSUbmit\");\r\n                        const {email,password}=values;\r\n                        console.log(\"On Submit Called\",email);\r\n                        const user={\r\n                            email,password\r\n                        }\r\n                        this.props.login(user);\r\n                        }\r\n                        }\r\n                        >\r\n                        {({\r\n                            handleSubmit,\r\n                            handleChange,\r\n                            values,\r\n                            errors,\r\n                            touched\r\n                            }) => (\r\n                            <Form noValidate onSubmit={handleSubmit}>\r\n                            \r\n                            \r\n                            <Form.Row>\r\n                            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\r\n                                <Form.Label>Email ID</Form.Label>\r\n                                <InputGroup>\r\n                                    <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email ID\"\r\n                                    aria-describedby=\"inputGroupPrepend\"\r\n                                    name=\"email\"\r\n                                    value={values.email}\r\n                                    onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                                    isInvalid={!!errors.email}\r\n                                    />\r\n                                     <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                    {touched.email && errors.email}\r\n                                    </Form.Control.Feedback>\r\n                                   \r\n                                </InputGroup>\r\n                                </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                \r\n                                <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    value={values.password}\r\n                                    onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                                    isInvalid={!!errors.password}\r\n                                />\r\n                                 <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {touched.password && errors.password}\r\n                                </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                            </Form.Row>\r\n                            {/* <Form.Group>\r\n                                <Form.Check\r\n                                required\r\n                                name=\"terms\"\r\n                                label=\"Agree to terms and conditions\"\r\n                                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                                isInvalid={!!errors.terms}\r\n                                feedback={errors.terms}\r\n                                id=\"validationFormik0\"\r\n                                />\r\n                            </Form.Group> */}\r\n                            <Button type=\"submit\">Login</Button>\r\n                            <input defaultChecked={this.state.remember} style={{marginLeft:'1rem',marginTop:'.5rem'}} type=\"checkbox\" onChange={this.handleCheckboxChange}/><span>  Remember me!</span>\r\n                                                    <div style={{marginTop:'1rem',}} className=\"forgot-password text-right\">\r\n                                                    Don't have an account?  <span onClick={this.handleSignIn} ><a ><b>Create an Account</b></a></span>\r\n                                    </div> \r\n                            </Form>\r\n                        )}\r\n                        </Formik>\r\n                </Modal.Body>\r\n            </>\r\n            \r\n }\r\n            \r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n}\r\nconst mapStateToProps= state=>{\r\n    return({\r\n        isModalOpen:state.auth.isModalOpen,\r\n        isBlocked:state.auth.isBlocked,\r\n        isAuthenticated:state.auth.isAuthenticated,\r\n        rememberMe:state.auth.rememberMe,\r\n        error:state.error\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{loginModalOpen,isBlockedF,login,register,clearErrors,TokenExpireExtend})(RegisterModal);","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\ProductsList\\Product.js",["467","468","469","470","471","472","473","474"],"import { faArrowAltCircleDown, faCalendar, faCalendarAlt, faCalendarDay, faCartPlus, faChevronDown, faShoppingBag, faShoppingBasket, faStar, faStore, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Accordion, Button, Card, Col, Container, Dropdown, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink,useHistory,useParams } from 'react-router-dom';\r\nimport './Product.css';\r\nimport defaultPro from '../../assets/images/default-pro.jpg';\r\nimport {loginModalOpen,loadUser} from '../../action/authActions';\r\nimport {rankItem} from '../../action/itemAction';\r\n\r\nconst Product=(props)=>{\r\n    const history=useHistory();\r\n    var params=useParams();\r\n    const [product,setItem]=useState({});\r\n\r\n\r\n \r\n\r\n    useEffect(()=>{\r\n        props.loadUser();\r\n        if(!props.isAuthenticated){\r\n            console.log(\"From Product to Home\");\r\n            props.history.push('/')\r\n            props.loginModalOpen(true);\r\n           }\r\n           else{\r\n        setItem(history.location.state.item);\r\n        console.log(\"Items\",history.location.state.item);\r\n        // console.log(\"User\",history.location.state.user);\r\n        props.rankItem({id:history.location.state.item.id});\r\n    }\r\n    },[history,props.isAuthenticated]);\r\n    // useEffect(()=>{\r\n    //     //       if(parseInt(localStorage.getItem(history.location.state.item.id))!==parseInt(history.location.state.user._id)){\r\n    //             // console.log(\"User1\",history.location.state.user._id,localStorage.getItem(history.location.state.item.id));\r\n    //     //         localStorage.setItem(history.location.state.item.id,history.location.state.user._id);\r\n               \r\n    //     //     }\r\n            \r\n    //       },[]);\r\n    return(\r\n     <>\r\n        <div>\r\n            <Container style={{marginTop:'1rem'}}>\r\n                {/* <Row>\r\n                    <Card><h1>{params.name}</h1></Card>\r\n                </Row> */}\r\n                <Row>\r\n                    <Col sm={5}>\r\n\r\n                       <Card className=\"p-img-card\">\r\n                       \r\n                       <img className=\"p-img\" src={product.img?product.img:defaultPro}/>\r\n                      \r\n                        \r\n                       </Card>\r\n                       <Row>\r\n                           <div class=\"Add-to-cart-action-div\">\r\n                                <Button><FontAwesomeIcon style={{paddingRight:'.3rem'}} icon={faCartPlus}/>Add To Cart</Button>\r\n                                <Button><FontAwesomeIcon style={{paddingRight:'.3rem'}} icon={faShoppingBasket}/>Buy Now</Button>\r\n                            </div>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm={7}>\r\n                    <Card>\r\n                        <Container style={{padding:'1rem 2rem'}}>\r\n                            <Row>\r\n                                <span style={{color:'#3b44c1',fontSize:'.8rem'}}>{product.manufacturer}</span>\r\n                            </Row>\r\n                            <Row>\r\n                                <h3 style={{margin:'0rem'}}>{product.name}</h3 >\r\n                            </Row>\r\n                            <Row>\r\n                                <h4  style={{margin:'.5rem 0rem',fontWeight:'bold',fontSize:'400 !important'}}>₹{product.price}</h4>\r\n                            </Row>\r\n                            <Row style={{display:'flex'}}>\r\n                                <p style={{borderRadius:'5px',background:'green',color:'white',padding:'.1rem .3rem',fontSize:'.8rem'}}>{product.rating?product.rating:\"0\"} <FontAwesomeIcon  icon={faStar}/></p> <span style={{paddingLeft:'.2rem',color:'#3b44c1'}}>Ratings Out of 5</span>\r\n                            </Row>\r\n                            <Row>\r\n                                <h7 style={{color:'gray',display:'flex',alignItems:'center'}}><FontAwesomeIcon style={{marginRight:'.2rem'}} icon={faShoppingBag}/><b style={{marginRight:'.2rem'}}>Available Stock:</b></h7><span style={{color:'green'}}><b>{product.stock}</b></span>\r\n                            </Row>\r\n                            <Row>\r\n                                <h7 style={{color:'gray',display:'flex',alignItems:'center'}}><FontAwesomeIcon style={{marginRight:'.2rem'}} icon={faUser}/><b style={{marginRight:'.2rem'}}>Added By:</b></h7><span><b>{product.user?product.user.fname+\" \"+product.user.lname:null}</b></span>\r\n                            </Row>\r\n                            <Row>\r\n                                <h7 style={{color:'gray',display:'flex',alignItems:'center'}}><FontAwesomeIcon style={{marginRight:'.2rem'}} icon={faCalendarAlt}/><b style={{marginRight:'.2rem'}}>Created Date:</b></h7><span>{product.date}</span>\r\n                            </Row>\r\n                           \r\n                        </Container>\r\n                        <hr style={{marginBottom:'0rem'}}/>\r\n                        <Container style={{padding:'1rem 2rem'}}>\r\n                            <Row>\r\n                            <Accordion defaultActiveKey=\"1\">\r\n                                \r\n                                    <Accordion.Toggle style={{curser:'pointer'}} as={Dropdown} variant=\"link\" eventKey=\"0\">\r\n                                        Description <FontAwesomeIcon icon={faChevronDown}/>\r\n                                    </Accordion.Toggle>\r\n                                   \r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n                                        <p>\r\nKeep work and entertainment going with the realme C12 smartphone featuring a 6000 mAh battery. It also comes with the Super Power Saving mode that lets you use the basic features of your phone when it is low on charge. What’s more, you can capture your surroundings well with the help of the 13 MP AI triple rear camera. You can make use of the Super Nightscape mode to click stunning pictures even in low-lit conditions. {product.description}</p>\r\n                                    </Accordion.Collapse>\r\n                                \r\n                                \r\n                            </Accordion>\r\n                            </Row>\r\n                        </Container>\r\n\r\n                       </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={4}>\r\n                        \r\n                        {/* <Button>Add To Cart</Button>\r\n                        <Button>Buy Now</Button> */}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n     </>   \r\n    )\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        isAuthenticated:state.auth.isAuthenticated\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{rankItem,loadUser,loginModalOpen})(Product) ;","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\ProductsList\\NewProductModal.js",["475","476","477","478","479","480","481"],"import React,{Component} from 'react';\r\nimport {Col, Alert,NavLink, Button, Modal,Form,FormGroup,Label, Input, InputGroup, ButtonGroup} from 'react-bootstrap';\r\n\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {login} from '../../action/authActions';\r\nimport {addItem} from '../../action/itemAction';\r\nimport {getCategories} from '../../action/categoryAction';\r\n\r\nimport {clearErrors}  from '../../action/errorActions';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport back from '../../assets/images/back.jpg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n// import e from 'express';\r\nconst schemaPro = yup.object({\r\n    name: yup.string().min(3, 'Name must be at least 3 characters').max(24, 'Password can be maximum 20 characters').required(),\r\n    description: yup.string().required(),\r\n    manufacturer: yup.string().required(),\r\n    // img: yup.string().required(),\r\n    price: yup.number().positive().integer().min(1, \"Price Should be More Than 1\").max(500000, \"Price Should be Less Than 500K\"),\r\n    stock: yup.number().integer().min(1, \"Stock Should be More Than 1\").max(1000, \"Stock Should be Less Than 1K\"),\r\n    \r\n    // rating: yup.number().positive().integer().min(1,\"Min\").max(5,\"Max\"),\r\n    \r\n    category: yup.number().positive().integer().min(1,\"Choose Any Category\"),\r\n    // img: yup.string().required(),\r\n})\r\n\r\nclass NewProductModal extends Component{\r\n    state={\r\n        modal:false,   // modal for adding item is false initially\r\n        msg:null,\r\n        imageURL:'',\r\n        categories:this.props.categories\r\n    };\r\n    componentDidMount(){\r\n      // this.props.getCategories();\r\n      this.setState({categories:this.props.categories})\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        const {error,isAuthenticated}=this.props;\r\n        if(error!==prevProps.error){\r\n            if(error.id===\"LOGIN_FAIL\"){\r\n                this.setState({msg:error.msg.msg});\r\n            }\r\n            else{\r\n                this.setState({msg:null});\r\n            }\r\n        }\r\n        \r\n    }\r\n    static propTypes={\r\n        isAuthenticated:PropTypes.bool,\r\n        error:PropTypes.object.isRequired,\r\n        login:PropTypes.func.isRequired,\r\n        clearErrors:PropTypes.func.isRequired\r\n    }\r\n\r\n    toggle=()=>{  \r\n        // clear the error\r\n        this.props.clearErrors();\r\n        // to toggle the modal \r\n        console.log(this.state.modal)\r\n        this.setState({\r\n            modal:!this.state.modal\r\n        })\r\n    }\r\n\r\n\r\n    encodeImageFileAsURL=()=> {\r\n      console.log(\"image uploading func. called\");\r\n      var filesSelected = document.getElementById(\"inputFileToLoad\").files;\r\n      if (filesSelected.length > 0) {\r\n        var fileToLoad = filesSelected[0];\r\n  \r\n        var fileReader = new FileReader();\r\n  \r\n        fileReader.onload = (fileLoadedEvent)=> {\r\n          var srcData = fileLoadedEvent.target.result; // <--- data: base64\r\n  \r\n          var newImage = document.createElement('img');\r\n          newImage.src = srcData;\r\n          this.setState({imageURL:newImage.src});\r\n          // console.log(\"ImageURL:\",this.state.imageURL);\r\n         \r\n        }\r\n        fileReader.readAsDataURL(fileToLoad);\r\n      }\r\n\r\n    }\r\nrender(){\r\n  console.log(\"Categories:\",this.state.categories);\r\n    return(\r\n        <div>\r\n             <NavLink onClick={this.toggle} href=\"#\">\r\n            <Button><FontAwesomeIcon  icon={faPlus}/><h7 style={{marginLeft:'.3rem'}} className=\"newproductbuttontext\">Create Product</h7></Button>\r\n            </NavLink>\r\n\r\n            <Modal show={this.state.modal} onHide={this.toggle} >\r\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Create Product</b></Modal.Header>\r\n                <Modal.Body>\r\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n\r\n\r\n\r\n\r\n\r\n    <Formik\r\n      validationSchema={schemaPro}\r\n     \r\n\r\n      initialValues={{\r\n        name:\"\",\r\n        description:\"\",\r\n        manufacturer:\"\",\r\n        price:'',\r\n        stock:'',\r\n        // rating:'',\r\n        img:\"\",\r\n        category:0,\r\n        // createdBy:'Admin',\r\n        // rank:0,\r\n      }}\r\n      onSubmit={(values)=>{ \r\n        console.log(\"onSUbmit\");\r\n        const {name,description,manufacturer,price,stock,category}=values;\r\n        console.log(\"On Submit Called\",name);\r\n        // this.encodeImageFileAsURL();\r\n        \r\n        const user=this.props.user;\r\n\r\n        var Category=this.props.categories.filter(\r\n          function (cat) {\r\n            if(cat.id ===parseInt(category))return cat.name \r\n          }\r\n        )\r\n        \r\n        let CategoryName=Category[0].name;\r\n        let img=this.state.imageURL;\r\n        console.log(\"Image:\",img);\r\n        const product={\r\n          name,description,manufacturer,price,stock,img,CategoryName,user\r\n        }\r\n      //  console.log(\"Name:\",name,\" Des:\",description,\" Manu:\",manufacturer,\" price:\",price,\" Stock:\",stock,\" Img:\",img,\"  Cat\",CategoryName,\" User:\",user);\r\n        this.props.addItem(product);\r\n       }\r\n     }\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n         }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          \r\n          \r\n          <Form.Row>\r\n          <Form.Group as={Col} md=\"12\" controlId=\"validationFormik01\">\r\n              <Form.Label>Product Name</Form.Label>\r\n              \r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Product Name\"\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.name}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.name}\r\n                </Form.Control.Feedback>\r\n              \r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\r\n              <Form.Label>Price</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">₹</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Price\"\r\n                name=\"price\"\r\n                value={values.price}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.price}\r\n              />\r\n\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.price}\r\n              </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n              <Form.Label>Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Quantity\"\r\n                name=\"stock\"\r\n                value={values.stock}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.stock}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.stock}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik04\">\r\n              <Form.Label>Manufacturer</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Manufacturer\"\r\n                name=\"manufacturer\"\r\n                value={values.manufacturer}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.manufacturer}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.manufacturer}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik05\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n              as=\"textarea\"\r\n                type=\"textarea\"\r\n                placeholder=\"Description\"\r\n                name=\"description\"\r\n                value={values.description}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.description}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.description}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"5\" controlId=\"validationFormik06\">\r\n              <Form.Label>Select Category</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                // type=\"password\"\r\n                placeholder=\"\"\r\n                name=\"category\"\r\n                value={values.category}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.category}\r\n                \r\n              >\r\n                  <option value=\"0\">Choose Category</option>\r\n                  {this.props.categories.map((category)=>(\r\n                        <option value={category.id}>{category.name}</option>\r\n\r\n                  ))}\r\n                  {/* <option value=\"2\">Laptop</option>\r\n                  <option value=\"3\">HeadPhone</option> */}\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.category}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"7\" controlId=\"validationFormik07\">\r\n                <div className=\"mb-3\">\r\n                    <Form.File id=\"formcheck-api-regular\">\r\n                    <Form.File.Label>Product Image</Form.File.Label>\r\n                    <input id=\"inputFileToLoad\"  type=\"file\" onChange={this.encodeImageFileAsURL} />\r\n                    </Form.File>\r\n                </div>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n          \r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n}\r\nconst mapStateToProps= state=>{\r\n    return({\r\n        categories:state.category.categories,\r\n        user:state.auth.user,\r\n        isAuthenticated:state.auth.isAuthenticated,\r\n        error:state.error\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{clearErrors,addItem,getCategories})(NewProductModal);","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\reducer\\categoryReducer.js",["482","483"],"\r\nimport  {GET_CATEGORY,ADD_CATEGORY} from '../action/types';\r\n\r\nconst initialState={\r\n    categories:[],\r\n    // itemsLoading:false,\r\n    // itemsLoaded:false\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    const {type,payload}=action; //destructuring action\r\n    switch(action.type){\r\n        case GET_CATEGORY:\r\n            return{\r\n                ...state,\r\n                categories:payload,\r\n                // itemsLoading:false,\r\n                // itemsLoaded:true\r\n           };\r\n           \r\n           case ADD_CATEGORY:\r\n            return{\r\n                ...state,\r\n                categories:[...state.categories,payload]\r\n\r\n           };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\action\\categoryAction.js",["484"],"import  {GET_CATEGORY,ADD_CATEGORY} from './types';\r\nimport axios from 'axios';\r\nimport {tokenConfig} from './authActions';\r\nimport {returnErrors} from './errorActions';\r\n\r\nexport const getCategories=()=> dispatch =>{\r\n    // dispatch(setItemsLoading());\r\n\r\n    axios.get('/categories').then(res=>\r\n    dispatch({\r\n        type:GET_CATEGORY,\r\n        payload:res.data\r\n    }))\r\n    .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));   \r\n};\r\nexport const addCategory=category=> dispatch =>{\r\n    axios.post('/add_category',category)\r\n    .then(res=>dispatch({\r\n        type:ADD_CATEGORY,\r\n        payload:res.data\r\n    })).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\r\n};","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\Products\\Products.js",["485","486","487","488","489"],"import React, { Component } from 'react';\r\nimport { OverlayTrigger,Tooltip,Accordion,DropdownButton, Spinner, Row, Container, Col, Card, Button, Form, Pagination, } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport './Products.css'\r\n\r\nimport {NavLink, Prompt, withRouter} from 'react-router-dom';\r\nimport EditModal1 from '../auth/EditModal1'\r\n// import E2 from './auth/E2';\r\n// import EditModal from './auth/EditModal'\r\nimport {getCategories} from '../../action/categoryAction';\r\nimport { getItems,deleteItem } from \"../../action/itemAction\";\r\nimport {loginModalOpen,loadUser} from '../../action/authActions'\r\nimport AppNavbar from '../AppNavbar';\r\nimport back from '../../assets/images/back.jpg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar, faTrashAlt, faUser ,faShoppingBag,faCalendarAlt,faSearch,faFilter,  faChevronCircleDown, faChevronCircleRight, faArrowAltCircleUp, faArrowAltCircleDown} from '@fortawesome/free-solid-svg-icons';\r\n// import { , faFilter, faSearch, , } from '@fortawesome/free-solid-svg-icons';\r\n// import Pagination from './Pagination';\r\n// import { PropTypes } from 'prop-types';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faTimes,faEdit } from '@fortawesome/free-solid-svg-icons';\r\n// import ProductList from './ProductsList/ProductList';\r\n\r\n\r\nconst styles = {\r\n  mediaItem: {\r\n    border: \"1px solid gray\",\r\n    backgroundColor: \"#f5f5f5\",\r\n\r\n  },\r\n  mediaItemButtons: {\r\n    paddingTop: \"5px\",\r\n    paddingBottom: \"5px\"\r\n  }\r\n};\r\n\r\nclass Products extends Component {\r\n  state = {\r\n    products: this.props.products,\r\n    pageOfItems: [],\r\n    Index1:0,\r\n    Index2:8,\r\n    isManufacturer:true,\r\n    isRating:true,\r\n    isPrice:true,\r\n    isStock:true,\r\n    open1:false,\r\n    open2:false,\r\n    open3:false,\r\n    open4:false,\r\n    open10:false,\r\n    chkBox:false,\r\n    q:\"\",\r\n    minRange:0,\r\n    maxRange:1000000,\r\n    isAscending:false,\r\n    isDecending:false,\r\n    categoryValue:0,\r\n    currentPage: 1,\r\n    productsPerPage: 6\r\n  };\r\n\r\n\r\n  handleClick=(event)=> {\r\nconsole.log(\"Id:\",event.target.id);\r\n    this.setState({\r\n      currentPage: Number(event.target.id)\r\n    });\r\n  }\r\n\r\n// componentWillUnmount(){\r\n//   console.log(\"Blocked:\",this.props.isBlocked);\r\n//     console.log(\"History:\",this.props.history);\r\n//     if(this.props.isBlocked){\r\n//           let authenticate = window.confirm(\"Are You Sure Want To Go \",this.props.history.location.pathname)\r\n//           if(!authenticate){\r\n//                   this.props.history.push(this.props.history.location.pathname)\r\n//           }\r\n//     }\r\n// }\r\n  componentDidMount(e){\r\n\r\n    var myobj = document.getElementById(\"bodyClick\");\r\n    if(myobj!==null){\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    myobj.remove();}\r\n    \r\n\r\n\r\n this.props.getItems();\r\n this.props.getCategories();\r\n    this.setState({products:this.props.products})\r\n\r\n  }\r\n  componentDidUpdate(){\r\n\r\n    // this.props.getItems()\r\n  }\r\n  handleView=()=>{\r\n    if(!this.props.isAuthenticated){\r\n      \r\n    }\r\n  }\r\n  onChangePage(pageOfItems) {\r\n    // update state with new page of items\r\n    this.setState({ pageOfItems: pageOfItems });\r\n\r\n}\r\n\r\n\r\n  \r\n    render(){\r\n      const { currentPage, productsPerPage } = this.state;\r\n\r\n      const paginaton=(products)=>{\r\n        const indexOfLastTodo = currentPage * productsPerPage;\r\n        const indexOfFirstTodo = indexOfLastTodo - productsPerPage;\r\n        return products.slice(indexOfFirstTodo, indexOfLastTodo);\r\n      }\r\n      const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(this.props.products.length / productsPerPage); i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n\r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        <Pagination.Item onClick={this.handleClick} id={number} key={number} active={number === currentPage}>\r\n          {number}          \r\n        </Pagination.Item>\r\n        \r\n      );\r\n    });\r\n      \r\n      const sort=(products)=>{\r\n        // console.log(\"Sorting Called\",this.state.isAscending,this.state.isDecending);\r\n        // let newProducts=products;\r\n            // if(!isAscending && !isDecending)\r\n            // newProducts=products;\r\n            if(this.state.categoryValue!==0){\r\n              console.log(\"category ID:\",this.state.categoryValue,this.props.categories[this.state.categoryValue-1]);\r\n              // var Category=this.props.categories.filter(\r\n              //   function (cat) {\r\n              //     console.log(this.state.categoryValue);\r\n              //     if(cat.id ===this.state.categoryValue)return cat.name \r\n              //   }\r\n              // )\r\n              \r\n              // let CategoryName=Category[0].name;\r\n\r\n              products= this.props.categories[this.state.categoryValue-1]?products.filter(product=>product.category===this.props.categories[this.state.categoryValue-1].name):products;\r\n            }\r\n         if(this.state.isAscending ){\r\n          //  this.setState({isDecending:false})\r\n           return products.sort((a, b) => a.price - b.price)\r\n          }\r\n          else if(this.state.isDecending ){\r\n          // this.setState({isAscending:false})\r\n            return products.sort((a, b) => b.price - a.price)\r\n        }\r\n      return products;\r\n}\r\n\r\n\r\n      const Search=(products)=>{    \r\n        return (products.filter(product=>\r\n                product.name.toLowerCase().indexOf(this.state.q.toLowerCase())!==-1 || //str.includes(PATTERN)\r\n                // product.price.toLowerCase().indexOf(q.toLowerCase())!==-1 ||\r\n                product.manufacturer.toLowerCase().indexOf(this.state.q.toLowerCase())!==-1\r\n                ));\r\n\r\n        }\r\n        const Range=(p)=>{\r\n          console.log(\"min:\",this.state.minRange,\"  max:\",this.state.maxRange,\" num:\",p.length);\r\n\r\n          return p.filter(product=>parseInt(product.price)>=this.state.minRange && parseInt(product.price)<=this.state.maxRange)\r\n      }\r\n\r\n        return (\r\n            <>\r\n\r\n<div style={{ backgroundImage: `url(\"${back}\")`,backgroundRepeat:'no-repeat'}}>\r\n      \r\n    <Prompt\r\n                when={this.props.isBlocked}\r\n                // message={(location)=> `Are You Sure Want To Leave ${location.pathname}`}\r\n                message={(location, action) => {\r\n                  if (action === 'POP') {\r\n                    console.log(\"Backing up...\",this.props.history)\r\n                  } \r\n              \r\n                  let check= location.pathname.startsWith(\"/app\")\r\n                    ? true\r\n                    : `Are you sure you want to go to ${this.props.history.location.pathname}?`\r\n                    // if(check)this.props.history.push(this.props.history.location.pathname)\r\n                    return check\r\n                }}\r\n/>\r\n    <AppNavbar/>\r\n    \r\n    <Container  style={{marginTop:'2rem',width:'100%'}}>\r\n\r\n          <p   className=\"content\" >\r\n          {this.props.products.length===0?<><Spinner style={{ width: '3rem', height: '3rem', color:'green' }} type=\"grow\" /></>\r\n               :<>\r\n\r\n                <Container  className=\"filter-box\" >\r\n                  <div>\r\n                  <Row style={{display:'flex',alignItems:'center',justifyContent:'space-between'}}>\r\n                  \r\n                  <div style={{color:'gray',paddingLeft:'.4rem',borderRadius:'20px',border:'1px solid gray'}}>\r\n                            <FontAwesomeIcon icon={faSearch}/>\r\n                            <input onChange={(e)=>{this.setState({q:e.target.value})}} style={{width:'80%',border:'none',padding:'.2rem 0 .2rem.5rem',color:'black'}} placeholder=\"Search Products\" type=\"text\"/>\r\n                        </div>\r\n\r\n                  <div className='filter-icon'>\r\n                          <DropdownButton title={<FontAwesomeIcon icon={faFilter} />} className='filter-button' style={{borderRadius:'50%',background:'transparent',color:'#3c44b1',border:'none',boxShadow:'none'}}> \r\n                                \r\n                                <Row >\r\n         <div >\r\n                 <Card className=\"filter-card\" >\r\n\r\n                \r\n                    <Card.Body className=\"filter-body\" style={{width:'15rem',padding:'0rem'}}>\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                            <Card>\r\n                                <Accordion.Toggle style={{background:!this.state.open1?\"#fff\":'#f3f3f3'}} eventKey=\"0\" onClick={() => this.setState(prevState => ({open1: !prevState.open1}))}>\r\n                                    <div className=\"accordion-header\" ><h6>Price</h6><FontAwesomeIcon style={{color:this.state.open1?\"red\":\"#3b44c1\"}} icon={this.state.open1?faChevronCircleRight:faChevronCircleDown} /></div>\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body >\r\n                                  <div className=\"range-input\" ><span style={{color:'gray'}}><b>Min:</b></span><input  type='number' value={this.state.minRange} onChange={(e)=>this.setState({minRange:e.target.value})}/>\r\n                                  </div>\r\n                                  <div className=\"range-input\"><span style={{color:'gray'}} ><b>Max:</b></span><input  type='number' value={this.state.maxRange} onChange={(e)=>this.setState({maxRange:e.target.value})}/>\r\n                                </div>\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                           \r\n                            </Accordion>\r\n                            <Accordion defaultActiveKey=\"1\">\r\n\r\n                            <Card>\r\n                            <Accordion.Toggle  style={{background:!this.state.open2?\"#fff\":'#f3f3f3'}} eventKey=\"1\" onClick={()=>this.setState(prevState => ({open2: !prevState.open2}))}>\r\n                                    <div className=\"accordion-header\"><h6>Customize Columns</h6><FontAwesomeIcon style={{color:this.state.open2?\"red\":\"#3b44c1\"}} icon={this.state.open2?faChevronCircleRight:faChevronCircleDown}/></div>\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"1\">\r\n                                <Card.Body>\r\n                                    <Row><Col style={{display:'flex',paddingBottom:'.3rem'}} sm={6}><input style={{marginRight:'.3rem'}} type=\"checkbox\" checked={this.state.isManufacturer} onChange={()=>this.setState(prevState => ({isManufacturer: !prevState.isManufacturer}))}/><h6>Added By</h6></Col><Col style={{display:'flex',paddingBottom:'.3rem'}} sm={6} sm={6}><input style={{marginRight:'.3rem'}} type=\"checkbox\" checked={this.state.isRating} onChange={()=>this.setState(prevState => ({isRating: !prevState.isRating}))}/><h6>Rating</h6></Col></Row>\r\n                                    <Row><Col style={{display:'flex',paddingBottom:'.3rem'}} sm={6} sm={6}><input style={{marginRight:'.3rem'}} type=\"checkbox\" checked={this.state.isPrice} onChange={()=>this.setState(prevState => ({isPrice: !prevState.isPrice}))}/><h6>Price</h6></Col><Col style={{display:'flex',paddingBottom:'.3rem'}} sm={6} sm={6}><input style={{marginRight:'.3rem'}} type=\"checkbox\" checked={this.state.isStock} onChange={()=>this.setState(prevState => ({isStock: !prevState.isStock}))}/><h6>Stock</h6></Col></Row>\r\n                                   \r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                            </Accordion>\r\n\r\n\r\n                            <Accordion defaultActiveKey=\"10\">\r\n\r\n                            <Card>\r\n                            <Accordion.Toggle  style={{background:!this.state.open2?\"#fff\":'#f3f3f3'}} eventKey=\"10\" onClick={()=>this.setState(prevState => ({open10: !prevState.open10}))}>\r\n                                    <div className=\"accordion-header\"><h6>Category</h6><FontAwesomeIcon style={{color:this.state.open2?\"red\":\"#3b44c1\"}} icon={this.state.open2?faChevronCircleRight:faChevronCircleDown}/></div>\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"10\">\r\n                                <Card.Body>\r\n\r\n                                    <Form.Group as={Col}>\r\n              \r\n                                            <Form.Control className=\"category-box\"\r\n                                              as=\"select\"\r\n                                              // type=\"password\"\r\n                                              placeholder=\"\"\r\n                                              name=\"category\"\r\n                                              value={this.state.categoryValue}\r\n                                              onChange={(e)=>this.setState({categoryValue:e.target.value})}\r\n                                              // isInvalid={!!errors.category}\r\n                                              \r\n                                            >\r\n                                                <option value=\"0\">Choose Category</option>\r\n                                                {this.props.categories.map((category)=>(\r\n                                                      <option value={category.id}>{category.name}</option>\r\n\r\n                                                ))}\r\n                                                {/* <option value=\"2\">Laptop</option>\r\n                                                <option value=\"3\">HeadPhone</option> */}\r\n                                            </Form.Control>\r\n                                          \r\n                                          </Form.Group>                                   \r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                            </Accordion>\r\n\r\n                            <Accordion defaultActiveKey=\"5\">\r\n\r\n                            <Card>\r\n                            <Accordion.Toggle style={{background:this.state.open4?\"#fff\":'#f3f3f3'}}  eventKey=\"3\" onClick={()=>this.setState(prevState => ({open4: !prevState.open4}))}>\r\n                                    <div className=\"accordion-header\"><h6>Sort By Price</h6><FontAwesomeIcon style={{color:this.state.open4?\"#3b44c1\":\"red\"}} icon={this.state.open4?faChevronCircleDown:faChevronCircleRight}/></div>\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"3\">\r\n                                <Card.Body>\r\n                                    <div style={{display:'flex',flexDirection:'column',justifyContent:'space-around', alignItems:'center'}}>\r\n                                        \r\n                                        <div onClick={()=>{this.setState(prev=>({isAscending:!prev.isAscending}))}} className=\"asending\" style={{border:this.state.isAscending?'1px solid green':'',background:this.state.isAscending?' rgb(194, 255, 194)':'',marginBottom:'.6rem',display:'flex',alignItems:'center',cursor:'pointer'}}><a><FontAwesomeIcon style={{color:!this.state.isDecending?'#3b44c1':'gray'}} icon={faArrowAltCircleUp}/><h7>Ascending</h7></a></div>\r\n                                        <div onClick={()=>{this.setState(prev=>({isDecending:!prev.isDecending}))}} className=\"desending\" style={{border:this.state.isDecending?'1px solid red':'',background:this.state.isDecending?' rgb(255, 213, 213)':'',display:'flex',alignItems:'center',cursor:'pointer'}}><FontAwesomeIcon style={{color:!this.state.isAscending?'red':'gray'}} icon={faArrowAltCircleDown}/><h7>Decending</h7></div>\r\n                                    </div>\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                            </Accordion>\r\n   \r\n                </Card.Body>   \r\n                           \r\n                         \r\n                           </Card>\r\n                           </div>\r\n         </Row>    \r\n                                </DropdownButton>\r\n                          </div>\r\n      \r\n                  </Row>\r\n                  </div>\r\n                </Container>\r\n                 \r\n                  <Row style={{marginTop:'1rem'}} >\r\n                \r\n                  {paginaton(sort(Range(Search(this.props.products)))).map(product=>(\r\n                    <Col m-8 key={product.id}>\r\n                  <Card className=\"product-card\" style={{ width:'19rem',margin:'1rem'}}>\r\n                      <NavLink  to={{\r\n                    pathname:`admin/products/${product.id}`,\r\n                    state: {item:product}}}\r\n                    ><Card.Img top style={{marginLeft:'5.3rem',marginTop:'1rem',width:'8rem'}} src=\"https://store.storeimages.cdn-apple.com/4668/as-images.apple.com/is/mbp-spacegray-select-202011?wid=1280&hei=1190&fmt=jpeg&qlt=80&.v=1603406905000\" alt=\"Card image cap\" />\r\n                      <Card.Body style={{display:'flex',flexDirection:'column',paddingLeft:'3rem',maxWidth:'30rem'}}>\r\n                                                                           \r\n                        <Card.Title><b>{product.name}</b></Card.Title>\r\n                        <Card.Subtitle style={{marginLeft:'0rem'}}>\r\n                        {/* <Row>\r\n                                <span style={{color:'#3b44c1',fontSize:'.8rem'}}>{product.manufacturer}</span>\r\n                            </Row> */}\r\n                            {/* <Row>\r\n                                <h3 style={{margin:'0rem'}}>{product.name}</h3 >\r\n                            </Row> */}\r\n                            <Row style={{display:'flex',alignItems:'center'}}>\r\n                             \r\n                                <h4  style={{display:this.state.isPrice?'flex':'none',margin:'0rem 0rem',fontWeight:'bold',fontSize:'16px'}}>₹{product.price}</h4>\r\n                                <p style={{display:this.state.isRating?'':'none',margin:'0 0 0 .5rem',borderRadius:'5px',background:'green',color:'white',padding:'.1rem .3rem',fontSize:'12px'}}>{product.rating?product.rating:\"0\"} <FontAwesomeIcon  icon={faStar}/></p> \r\n                             \r\n                            </Row>\r\n                            {/* <Row style={{display:'flex',fontSize:'12px'}}>\r\n                            </Row> */}\r\n                            <Row style={{fontSize:\"12px\",paddingBottom:'.2rem'}}>\r\n                               <div style={{display:this.state.isStock?'flex':'none'}}> <h7 style={{color:'gray',alignItems:'center'}}><FontAwesomeIcon style={{marginRight:'.2rem'}} icon={faShoppingBag}/><b style={{marginRight:'.2rem'}}>Available Stock:</b></h7><span style={{color:product.stock>=10?'#1bc943':'#f83245',borderRadius:'5px',border:product.stock>=10?'1px solid #1bc943':' 1px solid #f83245',background:product.stock>=10?'#e5f9ed':'#fff5f6',padding:'.0rem .3rem'}}><b>{product.stock}</b></span>\r\n                            </div></Row>\r\n                            <Row style={{fontSize:\"12px\",paddingBottom:'.2rem'}}>\r\n                               <div style={{display:this.state.isManufacturer?'flex':'none'}}> <h7 style={{color:'gray',display:'flex',alignItems:'center'}}><FontAwesomeIcon style={{marginRight:'.2rem'}} icon={faUser}/><b style={{marginRight:'.2rem'}}>Added By:</b></h7><span><b>{product.user?product.user.name:null}</b></span>\r\n                           </div> </Row>\r\n                            <Row style={{fontSize:\"12px\"}}>\r\n                                <h7 style={{color:'gray',display:'flex',alignItems:'center'}}><FontAwesomeIcon style={{marginRight:'.2rem'}} icon={faCalendarAlt}/><b style={{marginRight:'.2rem'}}>Created Date:</b></h7><span>{product.date}</span>\r\n                            </Row>\r\n                        </Card.Subtitle>\r\n                       \r\n                      </Card.Body>\r\n                      </NavLink>\r\n                      <div className=\"bottom-button\" >\r\n                        <EditModal1 isAuthenticated={this.props.isAuthenticated} product={product}/>\r\n                      {this.props.isAuthenticated?<Button variant=\"danger\" size=\"sm\" style={{marginLeft:'1rem'}} onClick={()=>{this.props.deleteItem(product.id)}}><FontAwesomeIcon icon={faTrashAlt}/></Button>      \r\n                        :\r\n                        <div>\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            overlay={<Tooltip id=\"button-tooltip-2\">Delete</Tooltip>}>\r\n                                \r\n                        <Button disabled variant=\"danger\" size=\"sm\" style={{marginLeft:'1rem'}} onClick={()=>{this.props.deleteItem(product.id)}}><FontAwesomeIcon icon={faTrashAlt}/></Button>      \r\n                            \r\n                        </OverlayTrigger>\r\n                    </div>\r\n                        \r\n                        \r\n                        \r\n                        \r\n                          }\r\n                        </div>\r\n                    </Card>\r\n                    </Col>\r\n                  ))}\r\n                  \r\n                </Row>\r\n                  </>} \r\n                \r\n           \r\n            \r\n         </p>\r\n         <div style={{justifyContent:'space-around',display:'flex',alignItems:'center'}}>\r\n         <Pagination >\r\n           {renderPageNumbers}\r\n         </Pagination>\r\n         \r\n      </div>\r\n      </Container>\r\n      \r\n      \r\n     \r\n      </div>\r\n       \r\n      \r\n           \r\n            </>\r\n          );\r\n    }\r\n  \r\n};\r\nconst mapStateToProps= state=>{\r\n    return({\r\n      categories:state.category.categories,\r\n        isAuthenticated:state.auth.isAuthenticated,\r\n        isBlocked:state.auth.isBlocked,\r\n        isLoading:state.auth.isLoading,\r\n        user:state.auth.user,\r\n        products:state.item.items,\r\n        itemsLoading:state.item.itemsLoading,\r\n        itemsLoaded:state.item.itemsLoaded\r\n        // error:state.error\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{loadUser,loginModalOpen,getItems,deleteItem,getCategories})(withRouter(Products));","C:\\Users\\spicy\\Desktop\\Project\\client\\src\\components\\auth\\Map.js",["490"],"import React from 'react'\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport Geocode from \"react-geocode\";\r\nGeocode.setApiKey(\"AIzaSyBdfZzdajaZC3l-onac3NanJyqwdtklit0\");\r\n// Geocode.setApiKey(\"AIzaSyDGe5vjL8wBmilLzoJ0jNIwe9SAuH2xS_0\");\r\nGeocode.enableDebug();\r\nclass Map extends React.Component{\r\nconstructor( props ){\r\n  super( props );\r\n  this.state = {\r\n   address: '',\r\n   city: '',\r\n   area: '',\r\n   state: '',\r\n   mapPosition: {\r\n    lat: this.props.center.lat,\r\n    lng: this.props.center.lng\r\n   },\r\n   markerPosition: {\r\n    lat: this.props.center.lat,\r\n    lng: this.props.center.lng\r\n}\r\n  }\r\n }\r\n/**\r\n  * Get the current address from the default map position and set those values in the state\r\n  */\r\n componentDidMount() {\r\n  Geocode.fromLatLng( this.state.mapPosition.lat , this.state.mapPosition.lng ).then(\r\n   response => {\r\n    const address = response.results[0].formatted_address,\r\n     addressArray =  response.results[0].address_components,\r\n     city = this.getCity( addressArray ),\r\n     area = this.getArea( addressArray ),\r\n     state = this.getState( addressArray );\r\n  \r\n    console.log( 'city', city, area, state );\r\n  \r\n    this.setState( {\r\n     address: ( address ) ? address : '',\r\n     area: ( area ) ? area : '',\r\n     city: ( city ) ? city : '',\r\n     state: ( state ) ? state : '',\r\n    } )\r\n   },\r\n   error => {\r\n    console.error(error);\r\n   }\r\n  );\r\n };\r\n/**\r\n  * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\r\n  *\r\n  * @param nextProps\r\n  * @param nextState\r\n  * @return {boolean}\r\n  */\r\n shouldComponentUpdate( nextProps, nextState ){\r\n  if (\r\n   this.state.markerPosition.lat !== this.props.center.lat ||\r\n   this.state.address !== nextState.address ||\r\n   this.state.city !== nextState.city ||\r\n   this.state.area !== nextState.area ||\r\n   this.state.state !== nextState.state\r\n  ) {\r\n   return true\r\n  } else if ( this.props.center.lat === nextProps.center.lat ){\r\n   return false\r\n  }\r\n }\r\n/**\r\n  * Get the city and set the city input value to the one selected\r\n  *\r\n  * @param addressArray\r\n  * @return {string}\r\n  */\r\n getCity = ( addressArray ) => {\r\n  let city = '';\r\n  for( let i = 0; i < addressArray.length; i++ ) {\r\n   if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n    city = addressArray[ i ].long_name;\r\n    return city;\r\n   }\r\n  }\r\n };\r\n/**\r\n  * Get the area and set the area input value to the one selected\r\n  *\r\n  * @param addressArray\r\n  * @return {string}\r\n  */\r\n getArea = ( addressArray ) => {\r\n  let area = '';\r\n  for( let i = 0; i < addressArray.length; i++ ) {\r\n   if ( addressArray[ i ].types[0]  ) {\r\n    for ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\r\n     if ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\r\n      area = addressArray[ i ].long_name;\r\n      return area;\r\n     }\r\n    }\r\n   }\r\n  }\r\n };\r\n/**\r\n  * Get the address and set the address input value to the one selected\r\n  *\r\n  * @param addressArray\r\n  * @return {string}\r\n  */\r\n getState = ( addressArray ) => {\r\n  let state = '';\r\n  for( let i = 0; i < addressArray.length; i++ ) {\r\n   for( let i = 0; i < addressArray.length; i++ ) {\r\n    if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n     state = addressArray[ i ].long_name;\r\n     return state;\r\n    }\r\n   }\r\n  }\r\n };\r\n/**\r\n  * And function for city,state and address input\r\n  * @param event\r\n  */\r\n onChange = ( event ) => {\r\n  this.setState({ [event.target.name]: event.target.value });\r\n };\r\n/**\r\n  * This Event triggers when the marker window is closed\r\n  *\r\n  * @param event\r\n  */\r\n onInfoWindowClose = ( event ) => {\r\n};\r\n/**\r\n  * When the user types an address in the search box\r\n  * @param place\r\n  */\r\n onPlaceSelected = ( place ) => {\r\nconst address = place.formatted_address,\r\n   addressArray =  place.address_components,\r\n   city = this.getCity( addressArray ),\r\n   area = this.getArea( addressArray ),\r\n   state = this.getState( addressArray ),\r\n   latValue = place.geometry.location.lat(),\r\n   lngValue = place.geometry.location.lng();\r\n// Set these values in the state.\r\n  this.setState({\r\n   address: ( address ) ? address : '',\r\n   area: ( area ) ? area : '',\r\n   city: ( city ) ? city : '',\r\n   state: ( state ) ? state : '',\r\n   markerPosition: {\r\n    lat: latValue,\r\n    lng: lngValue\r\n   },\r\n   mapPosition: {\r\n    lat: latValue,\r\n    lng: lngValue\r\n   },\r\n  })\r\n };\r\n/**\r\n  * When the marker is dragged you get the lat and long using the functions available from event object.\r\n  * Use geocode to get the address, city, area and state from the lat and lng positions.\r\n  * And then set those values in the state.\r\n  *\r\n  * @param event\r\n  */\r\n onMarkerDragEnd = ( event ) => {\r\n  console.log( 'event', event );\r\n  let newLat = event.latLng.lat(),\r\n   newLng = event.latLng.lng(),\r\n   addressArray = [];\r\nGeocode.fromLatLng( newLat , newLng ).then(\r\n   response => {\r\n    const address = response.results[0].formatted_address,\r\n     addressArray =  response.results[0].address_components,\r\n     city = this.getCity( addressArray ),\r\n     area = this.getArea( addressArray ),\r\n     state = this.getState( addressArray );\r\nthis.setState( {\r\n     address: ( address ) ? address : '',\r\n     area: ( area ) ? area : '',\r\n     city: ( city ) ? city : '',\r\n     state: ( state ) ? state : ''\r\n    } )\r\n   },\r\n   error => {\r\n    console.error(error);\r\n   }\r\n  );\r\n };\r\nrender(){\r\nconst AsyncMap = withScriptjs(\r\n   withGoogleMap(\r\n    props => (\r\n     <GoogleMap google={this.props.google}\r\n      defaultZoom={this.props.zoom}\r\n      defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n     >\r\n      {/* For Auto complete Search Box */}\r\n      <Autocomplete\r\n       style={{\r\n        width: '100%',\r\n        height: '40px',\r\n        paddingLeft: '16px',\r\n        marginTop: '2px',\r\n        marginBottom: '100px'\r\n       }}\r\n       onPlaceSelected={ this.onPlaceSelected }\r\n       types={['(regions)']}\r\n      />\r\n{/*Marker*/}\r\n      <Marker google={this.props.google}\r\n       name={'Dolores park'}\r\n          draggable={true}\r\n          onDragEnd={ this.onMarkerDragEnd }\r\n             position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n      />\r\n      <Marker />\r\n{/* InfoWindow on top of marker */}\r\n      <InfoWindow\r\n       onClose={this.onInfoWindowClose}\r\n       position={{ lat: ( this.state.markerPosition.lat + 0.0018 ), lng: this.state.markerPosition.lng }}\r\n      >\r\n       <div>\r\n        <span style={{ padding: 0, margin: 0 }}>{ this.state.address }</span>\r\n       </div>\r\n      </InfoWindow>\r\n</GoogleMap>\r\n)\r\n   )\r\n  );\r\nlet map;\r\n  if( this.props.center.lat !== undefined ) {\r\n   map = <div>\r\n     <div>\r\n      <div className=\"form-group\">\r\n       <label htmlFor=\"\">City</label>\r\n       <input type=\"text\" name=\"city\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.city }/>\r\n      </div>\r\n      <div className=\"form-group\">\r\n       <label htmlFor=\"\">Area</label>\r\n       <input type=\"text\" name=\"area\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.area }/>\r\n      </div>\r\n      <div className=\"form-group\">\r\n       <label htmlFor=\"\">State</label>\r\n       <input type=\"text\" name=\"state\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.state }/>\r\n      </div>\r\n      <div className=\"form-group\">\r\n       <label htmlFor=\"\">Address</label>\r\n       <input type=\"text\" name=\"address\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.address }/>\r\n      </div>\r\n     </div>\r\n     <AsyncMap\r\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBdfZzdajaZC3l-onac3NanJyqwdtklit0&libraries=places\"\r\n    //   googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDGe5vjL8wBmilLzoJ0jNIwe9SAuH2xS_0&libraries=places\"\r\n      loadingElement={\r\n       <div style={{ height: `100%` }} />\r\n      }\r\n      containerElement={\r\n       <div style={{ height: this.props.height }} />\r\n      }\r\n      mapElement={\r\n       <div style={{ height: `100%` }} />\r\n      }\r\n     />\r\n    </div>\r\n} else {\r\n   map = <div style={{height: this.props.height}} />\r\n  }\r\n  return( map )\r\n }\r\n}\r\nexport default Map;",{"ruleId":"491","severity":1,"message":"492","line":3,"column":8,"nodeType":"493","messageId":"494","endLine":3,"endColumn":11},{"ruleId":"491","severity":1,"message":"495","line":4,"column":10,"nodeType":"493","messageId":"494","endLine":4,"endColumn":23},{"ruleId":"491","severity":1,"message":"496","line":4,"column":25,"nodeType":"493","messageId":"494","endLine":4,"endColumn":30},{"ruleId":"491","severity":1,"message":"497","line":4,"column":32,"nodeType":"493","messageId":"494","endLine":4,"endColumn":38},{"ruleId":"491","severity":1,"message":"498","line":4,"column":40,"nodeType":"493","messageId":"494","endLine":4,"endColumn":48},{"ruleId":"491","severity":1,"message":"499","line":12,"column":8,"nodeType":"493","messageId":"494","endLine":12,"endColumn":17},{"ruleId":"491","severity":1,"message":"500","line":13,"column":8,"nodeType":"493","messageId":"494","endLine":13,"endColumn":12},{"ruleId":"501","replacedBy":"502"},{"ruleId":"503","replacedBy":"504"},{"ruleId":"491","severity":1,"message":"499","line":4,"column":8,"nodeType":"493","messageId":"494","endLine":4,"endColumn":17},{"ruleId":"491","severity":1,"message":"505","line":5,"column":8,"nodeType":"493","messageId":"494","endLine":5,"endColumn":20},{"ruleId":"491","severity":1,"message":"506","line":6,"column":10,"nodeType":"493","messageId":"494","endLine":6,"endColumn":18},{"ruleId":"491","severity":1,"message":"507","line":8,"column":8,"nodeType":"493","messageId":"494","endLine":8,"endColumn":17},{"ruleId":"491","severity":1,"message":"508","line":9,"column":19,"nodeType":"493","messageId":"494","endLine":9,"endColumn":26},{"ruleId":"491","severity":1,"message":"509","line":11,"column":8,"nodeType":"493","messageId":"494","endLine":11,"endColumn":16},{"ruleId":"491","severity":1,"message":"510","line":12,"column":8,"nodeType":"493","messageId":"494","endLine":12,"endColumn":12},{"ruleId":"491","severity":1,"message":"511","line":14,"column":8,"nodeType":"493","messageId":"494","endLine":14,"endColumn":14},{"ruleId":"491","severity":1,"message":"498","line":17,"column":24,"nodeType":"493","messageId":"494","endLine":17,"endColumn":32},{"ruleId":"491","severity":1,"message":"512","line":21,"column":10,"nodeType":"493","messageId":"494","endLine":21,"endColumn":24},{"ruleId":"491","severity":1,"message":"513","line":4,"column":5,"nodeType":"493","messageId":"494","endLine":4,"endColumn":13},{"ruleId":"491","severity":1,"message":"514","line":7,"column":5,"nodeType":"493","messageId":"494","endLine":7,"endColumn":16},{"ruleId":"491","severity":1,"message":"515","line":9,"column":5,"nodeType":"493","messageId":"494","endLine":9,"endColumn":12},{"ruleId":"491","severity":1,"message":"516","line":11,"column":25,"nodeType":"493","messageId":"494","endLine":11,"endColumn":30},{"ruleId":"491","severity":1,"message":"517","line":15,"column":8,"nodeType":"493","messageId":"494","endLine":15,"endColumn":18},{"ruleId":"491","severity":1,"message":"518","line":21,"column":10,"nodeType":"493","messageId":"494","endLine":21,"endColumn":18},{"ruleId":"491","severity":1,"message":"519","line":21,"column":20,"nodeType":"493","messageId":"494","endLine":21,"endColumn":26},{"ruleId":"491","severity":1,"message":"520","line":21,"column":28,"nodeType":"493","messageId":"494","endLine":21,"endColumn":40},{"ruleId":"491","severity":1,"message":"521","line":21,"column":42,"nodeType":"493","messageId":"494","endLine":21,"endColumn":52},{"ruleId":"491","severity":1,"message":"522","line":21,"column":54,"nodeType":"493","messageId":"494","endLine":21,"endColumn":60},{"ruleId":"523","severity":1,"message":"524","line":64,"column":25,"nodeType":"525","endLine":64,"endColumn":124},{"ruleId":"523","severity":1,"message":"524","line":79,"column":21,"nodeType":"525","endLine":79,"endColumn":120},{"ruleId":"523","severity":1,"message":"524","line":132,"column":71,"nodeType":"525","endLine":132,"endColumn":109},{"ruleId":"491","severity":1,"message":"526","line":2,"column":8,"nodeType":"493","messageId":"494","endLine":2,"endColumn":21},{"ruleId":"491","severity":1,"message":"527","line":17,"column":7,"nodeType":"493","messageId":"494","endLine":17,"endColumn":13},{"ruleId":"523","severity":1,"message":"524","line":101,"column":27,"nodeType":"525","endLine":101,"endColumn":46},{"ruleId":"491","severity":1,"message":"500","line":9,"column":8,"nodeType":"493","messageId":"494","endLine":9,"endColumn":12},{"ruleId":"491","severity":1,"message":"519","line":12,"column":22,"nodeType":"493","messageId":"494","endLine":12,"endColumn":28},{"ruleId":"491","severity":1,"message":"528","line":12,"column":30,"nodeType":"493","messageId":"494","endLine":12,"endColumn":38},{"ruleId":"491","severity":1,"message":"529","line":12,"column":40,"nodeType":"493","messageId":"494","endLine":12,"endColumn":51},{"ruleId":"491","severity":1,"message":"530","line":4,"column":15,"nodeType":"493","messageId":"494","endLine":4,"endColumn":19},{"ruleId":"491","severity":1,"message":"531","line":7,"column":8,"nodeType":"493","messageId":"494","endLine":7,"endColumn":16},{"ruleId":"491","severity":1,"message":"513","line":2,"column":77,"nodeType":"493","messageId":"494","endLine":2,"endColumn":85},{"ruleId":"491","severity":1,"message":"532","line":1,"column":10,"nodeType":"493","messageId":"494","endLine":1,"endColumn":29},{"ruleId":"491","severity":1,"message":"533","line":7,"column":41,"nodeType":"493","messageId":"494","endLine":7,"endColumn":53},{"ruleId":"491","severity":1,"message":"534","line":34,"column":43,"nodeType":"493","messageId":"494","endLine":34,"endColumn":55},{"ruleId":"491","severity":1,"message":"534","line":84,"column":43,"nodeType":"493","messageId":"494","endLine":84,"endColumn":55},{"ruleId":"491","severity":1,"message":"534","line":130,"column":43,"nodeType":"493","messageId":"494","endLine":130,"endColumn":55},{"ruleId":"491","severity":1,"message":"534","line":176,"column":43,"nodeType":"493","messageId":"494","endLine":176,"endColumn":55},{"ruleId":"491","severity":1,"message":"535","line":2,"column":10,"nodeType":"493","messageId":"494","endLine":2,"endColumn":15},{"ruleId":"491","severity":1,"message":"536","line":2,"column":16,"nodeType":"493","messageId":"494","endLine":2,"endColumn":28},{"ruleId":"491","severity":1,"message":"508","line":2,"column":30,"nodeType":"493","messageId":"494","endLine":2,"endColumn":37},{"ruleId":"491","severity":1,"message":"537","line":2,"column":39,"nodeType":"493","messageId":"494","endLine":2,"endColumn":42},{"ruleId":"491","severity":1,"message":"538","line":2,"column":44,"nodeType":"493","messageId":"494","endLine":2,"endColumn":53},{"ruleId":"491","severity":1,"message":"539","line":2,"column":55,"nodeType":"493","messageId":"494","endLine":2,"endColumn":58},{"ruleId":"491","severity":1,"message":"540","line":2,"column":60,"nodeType":"493","messageId":"494","endLine":2,"endColumn":64},{"ruleId":"491","severity":1,"message":"541","line":2,"column":66,"nodeType":"493","messageId":"494","endLine":2,"endColumn":74},{"ruleId":"491","severity":1,"message":"542","line":2,"column":76,"nodeType":"493","messageId":"494","endLine":2,"endColumn":82},{"ruleId":"491","severity":1,"message":"543","line":2,"column":84,"nodeType":"493","messageId":"494","endLine":2,"endColumn":93},{"ruleId":"491","severity":1,"message":"544","line":2,"column":95,"nodeType":"493","messageId":"494","endLine":2,"endColumn":103},{"ruleId":"491","severity":1,"message":"545","line":2,"column":105,"nodeType":"493","messageId":"494","endLine":2,"endColumn":112},{"ruleId":"491","severity":1,"message":"546","line":2,"column":114,"nodeType":"493","messageId":"494","endLine":2,"endColumn":122},{"ruleId":"491","severity":1,"message":"547","line":5,"column":8,"nodeType":"493","messageId":"494","endLine":5,"endColumn":18},{"ruleId":"491","severity":1,"message":"548","line":6,"column":8,"nodeType":"493","messageId":"494","endLine":6,"endColumn":10},{"ruleId":"491","severity":1,"message":"549","line":7,"column":8,"nodeType":"493","messageId":"494","endLine":7,"endColumn":17},{"ruleId":"491","severity":1,"message":"550","line":9,"column":8,"nodeType":"493","messageId":"494","endLine":9,"endColumn":13},{"ruleId":"491","severity":1,"message":"551","line":10,"column":8,"nodeType":"493","messageId":"494","endLine":10,"endColumn":18},{"ruleId":"491","severity":1,"message":"552","line":11,"column":10,"nodeType":"493","messageId":"494","endLine":11,"endColumn":19},{"ruleId":"491","severity":1,"message":"553","line":12,"column":10,"nodeType":"493","messageId":"494","endLine":12,"endColumn":25},{"ruleId":"491","severity":1,"message":"554","line":13,"column":10,"nodeType":"493","messageId":"494","endLine":13,"endColumn":17},{"ruleId":"491","severity":1,"message":"555","line":13,"column":18,"nodeType":"493","messageId":"494","endLine":13,"endColumn":24},{"ruleId":"491","severity":1,"message":"527","line":17,"column":7,"nodeType":"493","messageId":"494","endLine":17,"endColumn":13},{"ruleId":"491","severity":1,"message":"556","line":67,"column":13,"nodeType":"493","messageId":"494","endLine":67,"endColumn":21},{"ruleId":"491","severity":1,"message":"557","line":70,"column":16,"nodeType":"493","messageId":"494","endLine":70,"endColumn":24},{"ruleId":"491","severity":1,"message":"538","line":11,"column":14,"nodeType":"493","messageId":"494","endLine":11,"endColumn":23},{"ruleId":"491","severity":1,"message":"558","line":12,"column":11,"nodeType":"493","messageId":"494","endLine":12,"endColumn":18},{"ruleId":"501","replacedBy":"559"},{"ruleId":"503","replacedBy":"560"},{"ruleId":"491","severity":1,"message":"561","line":4,"column":10,"nodeType":"493","messageId":"494","endLine":4,"endColumn":17},{"ruleId":"491","severity":1,"message":"562","line":7,"column":24,"nodeType":"493","messageId":"494","endLine":7,"endColumn":34},{"ruleId":"491","severity":1,"message":"563","line":2,"column":48,"nodeType":"493","messageId":"494","endLine":2,"endColumn":57},{"ruleId":"491","severity":1,"message":"564","line":2,"column":58,"nodeType":"493","messageId":"494","endLine":2,"endColumn":63},{"ruleId":"491","severity":1,"message":"565","line":2,"column":65,"nodeType":"493","messageId":"494","endLine":2,"endColumn":70},{"ruleId":"566","severity":1,"message":"567","line":231,"column":87,"nodeType":"525","endLine":231,"endColumn":99},{"ruleId":"566","severity":1,"message":"567","line":330,"column":112,"nodeType":"525","endLine":330,"endColumn":124},{"ruleId":"501","replacedBy":"568"},{"ruleId":"503","replacedBy":"569"},{"ruleId":"491","severity":1,"message":"570","line":4,"column":10,"nodeType":"493","messageId":"494","endLine":4,"endColumn":15},{"ruleId":"491","severity":1,"message":"571","line":4,"column":16,"nodeType":"493","messageId":"494","endLine":4,"endColumn":26},{"ruleId":"491","severity":1,"message":"572","line":3,"column":9,"nodeType":"493","messageId":"494","endLine":3,"endColumn":20},{"ruleId":"573","severity":1,"message":"574","line":42,"column":30,"nodeType":"493","messageId":"575","endLine":42,"endColumn":33},{"ruleId":"573","severity":1,"message":"574","line":46,"column":30,"nodeType":"493","messageId":"575","endLine":46,"endColumn":33},{"ruleId":"491","severity":1,"message":"576","line":4,"column":8,"nodeType":"493","messageId":"494","endLine":4,"endColumn":24},{"ruleId":"523","severity":1,"message":"524","line":54,"column":15,"nodeType":"525","endLine":54,"endColumn":96},{"ruleId":"523","severity":1,"message":"524","line":69,"column":15,"nodeType":"525","endLine":69,"endColumn":96},{"ruleId":"566","severity":1,"message":"567","line":124,"column":13,"nodeType":"525","endLine":124,"endColumn":25},{"ruleId":"491","severity":1,"message":"526","line":2,"column":8,"nodeType":"493","messageId":"494","endLine":2,"endColumn":21},{"ruleId":"491","severity":1,"message":"542","line":3,"column":30,"nodeType":"493","messageId":"494","endLine":3,"endColumn":36},{"ruleId":"491","severity":1,"message":"535","line":3,"column":37,"nodeType":"493","messageId":"494","endLine":3,"endColumn":42},{"ruleId":"491","severity":1,"message":"577","line":3,"column":43,"nodeType":"493","messageId":"494","endLine":3,"endColumn":47},{"ruleId":"491","severity":1,"message":"578","line":3,"column":48,"nodeType":"493","messageId":"494","endLine":3,"endColumn":55},{"ruleId":"491","severity":1,"message":"579","line":7,"column":9,"nodeType":"493","messageId":"494","endLine":7,"endColumn":18},{"ruleId":"491","severity":1,"message":"580","line":8,"column":9,"nodeType":"493","messageId":"494","endLine":8,"endColumn":14},{"ruleId":"491","severity":1,"message":"553","line":9,"column":10,"nodeType":"493","messageId":"494","endLine":9,"endColumn":25},{"ruleId":"491","severity":1,"message":"554","line":10,"column":10,"nodeType":"493","messageId":"494","endLine":10,"endColumn":17},{"ruleId":"491","severity":1,"message":"555","line":10,"column":18,"nodeType":"493","messageId":"494","endLine":10,"endColumn":24},{"ruleId":"491","severity":1,"message":"581","line":11,"column":8,"nodeType":"493","messageId":"494","endLine":11,"endColumn":14},{"ruleId":"491","severity":1,"message":"582","line":12,"column":8,"nodeType":"493","messageId":"494","endLine":12,"endColumn":12},{"ruleId":"491","severity":1,"message":"499","line":13,"column":8,"nodeType":"493","messageId":"494","endLine":13,"endColumn":17},{"ruleId":"491","severity":1,"message":"583","line":14,"column":8,"nodeType":"493","messageId":"494","endLine":14,"endColumn":17},{"ruleId":"491","severity":1,"message":"527","line":19,"column":7,"nodeType":"493","messageId":"494","endLine":19,"endColumn":13},{"ruleId":"566","severity":1,"message":"584","line":64,"column":33,"nodeType":"525","endLine":64,"endColumn":97},{"ruleId":"566","severity":1,"message":"567","line":67,"column":33,"nodeType":"525","endLine":67,"endColumn":140},{"ruleId":"523","severity":1,"message":"524","line":43,"column":61,"nodeType":"525","endLine":43,"endColumn":100},{"ruleId":"491","severity":1,"message":"585","line":12,"column":10,"nodeType":"493","messageId":"494","endLine":12,"endColumn":20},{"ruleId":"491","severity":1,"message":"586","line":67,"column":9,"nodeType":"493","messageId":"494","endLine":67,"endColumn":18},{"ruleId":"491","severity":1,"message":"561","line":2,"column":16,"nodeType":"493","messageId":"494","endLine":2,"endColumn":23},{"ruleId":"491","severity":1,"message":"513","line":2,"column":92,"nodeType":"493","messageId":"494","endLine":2,"endColumn":100},{"ruleId":"491","severity":1,"message":"587","line":71,"column":16,"nodeType":"493","messageId":"494","endLine":71,"endColumn":21},{"ruleId":"491","severity":1,"message":"588","line":71,"column":22,"nodeType":"493","messageId":"494","endLine":71,"endColumn":30},{"ruleId":"491","severity":1,"message":"589","line":3,"column":56,"nodeType":"493","messageId":"494","endLine":3,"endColumn":73},{"ruleId":"491","severity":1,"message":"565","line":5,"column":10,"nodeType":"493","messageId":"494","endLine":5,"endColumn":15},{"ruleId":"491","severity":1,"message":"561","line":2,"column":16,"nodeType":"493","messageId":"494","endLine":2,"endColumn":23},{"ruleId":"491","severity":1,"message":"513","line":2,"column":92,"nodeType":"493","messageId":"494","endLine":2,"endColumn":100},{"ruleId":"491","severity":1,"message":"587","line":87,"column":16,"nodeType":"493","messageId":"494","endLine":87,"endColumn":21},{"ruleId":"491","severity":1,"message":"588","line":87,"column":22,"nodeType":"493","messageId":"494","endLine":87,"endColumn":30},{"ruleId":"491","severity":1,"message":"526","line":2,"column":8,"nodeType":"493","messageId":"494","endLine":2,"endColumn":21},{"ruleId":"491","severity":1,"message":"577","line":3,"column":43,"nodeType":"493","messageId":"494","endLine":3,"endColumn":47},{"ruleId":"491","severity":1,"message":"579","line":7,"column":9,"nodeType":"493","messageId":"494","endLine":7,"endColumn":18},{"ruleId":"491","severity":1,"message":"580","line":8,"column":9,"nodeType":"493","messageId":"494","endLine":8,"endColumn":14},{"ruleId":"566","severity":1,"message":"584","line":234,"column":30,"nodeType":"525","endLine":234,"endColumn":71},{"ruleId":"566","severity":1,"message":"584","line":115,"column":21,"nodeType":"525","endLine":115,"endColumn":56},{"ruleId":"566","severity":1,"message":"584","line":118,"column":21,"nodeType":"525","endLine":118,"endColumn":76},{"ruleId":"566","severity":1,"message":"584","line":122,"column":25,"nodeType":"525","endLine":122,"endColumn":63},{"ruleId":"566","severity":1,"message":"584","line":126,"column":21,"nodeType":"525","endLine":126,"endColumn":76},{"ruleId":"566","severity":1,"message":"584","line":129,"column":21,"nodeType":"525","endLine":129,"endColumn":71},{"ruleId":"491","severity":1,"message":"542","line":3,"column":35,"nodeType":"493","messageId":"494","endLine":3,"endColumn":41},{"ruleId":"491","severity":1,"message":"535","line":3,"column":42,"nodeType":"493","messageId":"494","endLine":3,"endColumn":47},{"ruleId":"491","severity":1,"message":"577","line":3,"column":48,"nodeType":"493","messageId":"494","endLine":3,"endColumn":52},{"ruleId":"491","severity":1,"message":"578","line":3,"column":53,"nodeType":"493","messageId":"494","endLine":3,"endColumn":60},{"ruleId":"491","severity":1,"message":"590","line":7,"column":8,"nodeType":"493","messageId":"494","endLine":7,"endColumn":16},{"ruleId":"491","severity":1,"message":"553","line":8,"column":10,"nodeType":"493","messageId":"494","endLine":8,"endColumn":25},{"ruleId":"491","severity":1,"message":"591","line":9,"column":10,"nodeType":"493","messageId":"494","endLine":9,"endColumn":18},{"ruleId":"491","severity":1,"message":"592","line":9,"column":20,"nodeType":"493","messageId":"494","endLine":9,"endColumn":26},{"ruleId":"491","severity":1,"message":"518","line":9,"column":28,"nodeType":"493","messageId":"494","endLine":9,"endColumn":36},{"ruleId":"491","severity":1,"message":"593","line":11,"column":20,"nodeType":"493","messageId":"494","endLine":11,"endColumn":24},{"ruleId":"491","severity":1,"message":"515","line":3,"column":10,"nodeType":"493","messageId":"494","endLine":3,"endColumn":17},{"ruleId":"491","severity":1,"message":"594","line":3,"column":19,"nodeType":"493","messageId":"494","endLine":3,"endColumn":22},{"ruleId":"491","severity":1,"message":"595","line":3,"column":24,"nodeType":"493","messageId":"494","endLine":3,"endColumn":35},{"ruleId":"491","severity":1,"message":"596","line":3,"column":37,"nodeType":"493","messageId":"494","endLine":3,"endColumn":45},{"ruleId":"491","severity":1,"message":"597","line":3,"column":46,"nodeType":"493","messageId":"494","endLine":3,"endColumn":57},{"ruleId":"491","severity":1,"message":"542","line":3,"column":58,"nodeType":"493","messageId":"494","endLine":3,"endColumn":64},{"ruleId":"491","severity":1,"message":"577","line":3,"column":65,"nodeType":"493","messageId":"494","endLine":3,"endColumn":69},{"ruleId":"491","severity":1,"message":"598","line":5,"column":11,"nodeType":"493","messageId":"494","endLine":5,"endColumn":26},{"ruleId":"491","severity":1,"message":"518","line":5,"column":35,"nodeType":"493","messageId":"494","endLine":5,"endColumn":43},{"ruleId":"491","severity":1,"message":"599","line":11,"column":11,"nodeType":"493","messageId":"494","endLine":11,"endColumn":23},{"ruleId":"491","severity":1,"message":"542","line":2,"column":30,"nodeType":"493","messageId":"494","endLine":2,"endColumn":36},{"ruleId":"491","severity":1,"message":"577","line":2,"column":43,"nodeType":"493","messageId":"494","endLine":2,"endColumn":47},{"ruleId":"491","severity":1,"message":"578","line":2,"column":48,"nodeType":"493","messageId":"494","endLine":2,"endColumn":55},{"ruleId":"491","severity":1,"message":"554","line":6,"column":10,"nodeType":"493","messageId":"494","endLine":6,"endColumn":17},{"ruleId":"491","severity":1,"message":"555","line":6,"column":18,"nodeType":"493","messageId":"494","endLine":6,"endColumn":24},{"ruleId":"491","severity":1,"message":"600","line":1,"column":168,"nodeType":"493","messageId":"494","endLine":1,"endColumn":179},{"ruleId":"601","severity":1,"message":"602","line":15,"column":1,"nodeType":"603","endLine":98,"endColumn":2},{"ruleId":"491","severity":1,"message":"538","line":2,"column":15,"nodeType":"493","messageId":"494","endLine":2,"endColumn":24},{"ruleId":"491","severity":1,"message":"577","line":2,"column":48,"nodeType":"493","messageId":"494","endLine":2,"endColumn":52},{"ruleId":"491","severity":1,"message":"555","line":4,"column":37,"nodeType":"493","messageId":"494","endLine":4,"endColumn":43},{"ruleId":"491","severity":1,"message":"604","line":4,"column":54,"nodeType":"493","messageId":"494","endLine":4,"endColumn":65},{"ruleId":"491","severity":1,"message":"605","line":4,"column":67,"nodeType":"493","messageId":"494","endLine":4,"endColumn":78},{"ruleId":"491","severity":1,"message":"590","line":5,"column":8,"nodeType":"493","messageId":"494","endLine":5,"endColumn":16},{"ruleId":"491","severity":1,"message":"606","line":9,"column":10,"nodeType":"493","messageId":"494","endLine":9,"endColumn":19},{"ruleId":"491","severity":1,"message":"607","line":11,"column":8,"nodeType":"493","messageId":"494","endLine":11,"endColumn":20},{"ruleId":"491","severity":1,"message":"608","line":14,"column":8,"nodeType":"493","messageId":"494","endLine":14,"endColumn":26},{"ruleId":"491","severity":1,"message":"609","line":57,"column":12,"nodeType":"493","messageId":"494","endLine":57,"endColumn":17},{"ruleId":"491","severity":1,"message":"610","line":57,"column":18,"nodeType":"493","messageId":"494","endLine":57,"endColumn":26},{"ruleId":"491","severity":1,"message":"611","line":62,"column":21,"nodeType":"493","messageId":"494","endLine":62,"endColumn":32},{"ruleId":"612","severity":1,"message":"613","line":91,"column":7,"nodeType":"614","endLine":91,"endColumn":53,"suggestions":"615"},{"ruleId":"491","severity":1,"message":"616","line":123,"column":7,"nodeType":"493","messageId":"494","endLine":123,"endColumn":20},{"ruleId":"491","severity":1,"message":"617","line":150,"column":25,"nodeType":"493","messageId":"494","endLine":150,"endColumn":26},{"ruleId":"618","severity":1,"message":"619","line":249,"column":313,"nodeType":"620","endLine":249,"endColumn":319},{"ruleId":"618","severity":1,"message":"619","line":250,"column":101,"nodeType":"620","endLine":250,"endColumn":107},{"ruleId":"618","severity":1,"message":"619","line":250,"column":295,"nodeType":"620","endLine":250,"endColumn":301},{"ruleId":"566","severity":1,"message":"584","line":267,"column":195,"nodeType":"525","endLine":267,"endColumn":198},{"ruleId":"601","severity":1,"message":"602","line":9,"column":1,"nodeType":"603","endLine":26,"endColumn":2},{"ruleId":"601","severity":1,"message":"602","line":10,"column":1,"nodeType":"603","endLine":80,"endColumn":2},{"ruleId":"491","severity":1,"message":"621","line":11,"column":12,"nodeType":"493","messageId":"494","endLine":11,"endColumn":16},{"ruleId":"622","severity":1,"message":"623","line":21,"column":54,"nodeType":"620","endLine":21,"endColumn":67},{"ruleId":"622","severity":1,"message":"623","line":23,"column":54,"nodeType":"620","endLine":23,"endColumn":67},{"ruleId":"491","severity":1,"message":"624","line":9,"column":9,"nodeType":"493","messageId":"494","endLine":9,"endColumn":15},{"ruleId":"491","severity":1,"message":"625","line":11,"column":8,"nodeType":"493","messageId":"494","endLine":11,"endColumn":11},{"ruleId":"491","severity":1,"message":"626","line":12,"column":8,"nodeType":"493","messageId":"494","endLine":12,"endColumn":16},{"ruleId":"491","severity":1,"message":"627","line":28,"column":7,"nodeType":"493","messageId":"494","endLine":28,"endColumn":18},{"ruleId":"566","severity":1,"message":"584","line":411,"column":87,"nodeType":"525","endLine":411,"endColumn":91},{"ruleId":"566","severity":1,"message":"584","line":510,"column":112,"nodeType":"525","endLine":510,"endColumn":116},{"ruleId":"491","severity":1,"message":"628","line":1,"column":10,"nodeType":"493","messageId":"494","endLine":1,"endColumn":30},{"ruleId":"491","severity":1,"message":"629","line":1,"column":32,"nodeType":"493","messageId":"494","endLine":1,"endColumn":42},{"ruleId":"491","severity":1,"message":"630","line":1,"column":59,"nodeType":"493","messageId":"494","endLine":1,"endColumn":72},{"ruleId":"491","severity":1,"message":"631","line":1,"column":142,"nodeType":"493","messageId":"494","endLine":1,"endColumn":149},{"ruleId":"491","severity":1,"message":"561","line":6,"column":10,"nodeType":"493","messageId":"494","endLine":6,"endColumn":17},{"ruleId":"491","severity":1,"message":"632","line":14,"column":9,"nodeType":"493","messageId":"494","endLine":14,"endColumn":15},{"ruleId":"612","severity":1,"message":"633","line":33,"column":7,"nodeType":"614","endLine":33,"endColumn":38,"suggestions":"634"},{"ruleId":"523","severity":1,"message":"524","line":54,"column":24,"nodeType":"525","endLine":54,"endColumn":89},{"ruleId":"491","severity":1,"message":"563","line":2,"column":48,"nodeType":"493","messageId":"494","endLine":2,"endColumn":57},{"ruleId":"491","severity":1,"message":"564","line":2,"column":58,"nodeType":"493","messageId":"494","endLine":2,"endColumn":63},{"ruleId":"491","severity":1,"message":"565","line":2,"column":65,"nodeType":"493","messageId":"494","endLine":2,"endColumn":70},{"ruleId":"491","severity":1,"message":"635","line":2,"column":84,"nodeType":"493","messageId":"494","endLine":2,"endColumn":95},{"ruleId":"491","severity":1,"message":"636","line":6,"column":9,"nodeType":"493","messageId":"494","endLine":6,"endColumn":14},{"ruleId":"491","severity":1,"message":"637","line":45,"column":22,"nodeType":"493","messageId":"494","endLine":45,"endColumn":37},{"ruleId":"638","severity":1,"message":"639","line":137,"column":11,"nodeType":"640","messageId":"641","endLine":137,"endColumn":20},{"ruleId":"601","severity":1,"message":"602","line":10,"column":1,"nodeType":"603","endLine":30,"endColumn":2},{"ruleId":"491","severity":1,"message":"621","line":11,"column":12,"nodeType":"493","messageId":"494","endLine":11,"endColumn":16},{"ruleId":"491","severity":1,"message":"572","line":3,"column":9,"nodeType":"493","messageId":"494","endLine":3,"endColumn":20},{"ruleId":"491","severity":1,"message":"527","line":25,"column":7,"nodeType":"493","messageId":"494","endLine":25,"endColumn":13},{"ruleId":"618","severity":1,"message":"619","line":248,"column":362,"nodeType":"620","endLine":248,"endColumn":368},{"ruleId":"618","severity":1,"message":"619","line":249,"column":101,"nodeType":"620","endLine":249,"endColumn":107},{"ruleId":"618","severity":1,"message":"619","line":249,"column":345,"nodeType":"620","endLine":249,"endColumn":351},{"ruleId":"566","severity":1,"message":"584","line":303,"column":331,"nodeType":"525","endLine":303,"endColumn":334},{"ruleId":"491","severity":1,"message":"642","line":176,"column":4,"nodeType":"493","messageId":"494","endLine":176,"endColumn":16},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'AppNavbar' is defined but never used.","'Home' is defined but never used.","no-native-reassign",["643"],"no-negated-in-lhs",["644"],"'Shoppinglist' is defined but never used.","'Provider' is defined but never used.","'ItemModal' is defined but never used.","'Spinner' is defined but never used.","'Bodycopy' is defined but never used.","'Test' is defined but never used.","'Footer' is defined but never used.","'AnimatedSwitch' is defined but never used.","'Collapse' is defined but never used.","'NavbarBrand' is defined but never used.","'NavItem' is defined but never used.","'Badge' is defined but never used.","'LoginModal' is defined but never used.","'faSearch' is defined but never used.","'faHome' is defined but never used.","'faUserCircle' is defined but never used.","'faDatabase' is defined but never used.","'faUser' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ChartistGraph' is defined but never used.","'styles' is assigned a value but never used.","'faLaptop' is defined but never used.","'faRupeeSign' is defined but never used.","'uuid' is defined but never used.","'PropType' is defined but never used.","'CircularProgressbar' is defined but never used.","'faDollarSign' is defined but never used.","'roundedValue' is assigned a value but never used.","'Media' is defined but never used.","'CardSubtitle' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'Button' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'CardImg' is defined but never used.","'CardLink' is defined but never used.","'EditModal1' is defined but never used.","'E2' is defined but never used.","'EditModal' is defined but never used.","'Body2' is defined but never used.","'Pagination' is defined but never used.","'PropTypes' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faTimes' is defined but never used.","'faEdit' is defined but never used.","'maxlimit' is assigned a value but never used.","'products' is assigned a value but never used.","'faHeart' is defined but never used.",["643"],["644"],"'NavLink' is defined but never used.","'faUserEdit' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["643"],["644"],"'BLOCK' is defined but never used.","'FREE_BLOCK' is defined but never used.","'tokenConfig' is defined but never used.","no-use-before-define","'ids' was used before it was defined.","usedBeforeDefined","'AdminNavbarLinks' is defined but never used.","'Form' is defined but never used.","'Tooltip' is defined but never used.","'StatsCard' is defined but never used.","'Tasks' is defined but never used.","'banner' is defined but never used.","'back' is defined but never used.","'ApexChart' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'FormInputs' is defined but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'isUpdate' is assigned a value but never used.","'AccordionCollapse' is defined but never used.","'Checkbox' is defined but never used.","'faFilter' is defined but never used.","'faPlus' is defined but never used.","'lazy' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'Dropdown' is defined but never used.","'FormControl' is defined but never used.","'faTachometerAlt' is defined but never used.","'notification' is assigned a value but never used.","'UPDATE_FAIL' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'faArrowDown' is defined but never used.","'faArrowLeft' is defined but never used.","'propTypes' is defined but never used.","'Price_Slider' is defined but never used.","'NotificationSystem' is defined but never used.","'open3' is assigned a value but never used.","'setOpen3' is assigned a value but never used.","'setIsNewest' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sort'. Either include it or remove the dependency array.","ArrayExpression",["645"],"'deleteProduct' is assigned a value but never used.","'f' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'type' is assigned a value but never used.","jsx-a11y/role-has-required-aria-props","Elements with the ARIA role \"slider\" must have the following attributes defined: aria-valuenow","'Prompt' is defined but never used.","'Map' is defined but never used.","'publicIp' is defined but never used.","'phoneRegExp' is assigned a value but never used.","'faArrowAltCircleDown' is defined but never used.","'faCalendar' is defined but never used.","'faCalendarDay' is defined but never used.","'faStore' is defined but never used.","'params' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["646"],"'ButtonGroup' is defined but never used.","'login' is defined but never used.","'isAuthenticated' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'addressArray' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},"Update the dependencies array to be: [isDecending, isAscending, isNewest, newProducts, sort]",{"range":"651","text":"652"},"Update the dependencies array to be: [history, props, props.isAuthenticated]",{"range":"653","text":"654"},[3434,3480],"[isDecending, isAscending, isNewest, newProducts, sort]",[1354,1385],"[history, props, props.isAuthenticated]"]